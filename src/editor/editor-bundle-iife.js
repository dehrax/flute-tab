(function(){"use strict";var L={exports:{}},F={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Zn=Symbol.for("react.element"),cm=Symbol.for("react.portal"),fm=Symbol.for("react.fragment"),dm=Symbol.for("react.strict_mode"),pm=Symbol.for("react.profiler"),vm=Symbol.for("react.provider"),mm=Symbol.for("react.context"),hm=Symbol.for("react.forward_ref"),gm=Symbol.for("react.suspense"),ym=Symbol.for("react.memo"),Sm=Symbol.for("react.lazy"),us=Symbol.iterator;function wm(e){return e===null||typeof e!="object"?null:(e=us&&e[us]||e["@@iterator"],typeof e=="function"?e:null)}var ss={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},cs=Object.assign,fs={};function pn(e,t,n){this.props=e,this.context=t,this.refs=fs,this.updater=n||ss}pn.prototype.isReactComponent={},pn.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},pn.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function ds(){}ds.prototype=pn.prototype;function qo(e,t,n){this.props=e,this.context=t,this.refs=fs,this.updater=n||ss}var bo=qo.prototype=new ds;bo.constructor=qo,cs(bo,pn.prototype),bo.isPureReactComponent=!0;var ps=Array.isArray,vs=Object.prototype.hasOwnProperty,ea={current:null},ms={key:!0,ref:!0,__self:!0,__source:!0};function hs(e,t,n){var r,i={},o=null,a=null;if(t!=null)for(r in t.ref!==void 0&&(a=t.ref),t.key!==void 0&&(o=""+t.key),t)vs.call(t,r)&&!ms.hasOwnProperty(r)&&(i[r]=t[r]);var l=arguments.length-2;if(l===1)i.children=n;else if(1<l){for(var u=Array(l),s=0;s<l;s++)u[s]=arguments[s+2];i.children=u}if(e&&e.defaultProps)for(r in l=e.defaultProps,l)i[r]===void 0&&(i[r]=l[r]);return{$$typeof:Zn,type:e,key:o,ref:a,props:i,_owner:ea.current}}function xm(e,t){return{$$typeof:Zn,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}function ta(e){return typeof e=="object"&&e!==null&&e.$$typeof===Zn}function Em(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(n){return t[n]})}var gs=/\/+/g;function na(e,t){return typeof e=="object"&&e!==null&&e.key!=null?Em(""+e.key):t.toString(36)}function ui(e,t,n,r,i){var o=typeof e;(o==="undefined"||o==="boolean")&&(e=null);var a=!1;if(e===null)a=!0;else switch(o){case"string":case"number":a=!0;break;case"object":switch(e.$$typeof){case Zn:case cm:a=!0}}if(a)return a=e,i=i(a),e=r===""?"."+na(a,0):r,ps(i)?(n="",e!=null&&(n=e.replace(gs,"$&/")+"/"),ui(i,t,n,"",function(s){return s})):i!=null&&(ta(i)&&(i=xm(i,n+(!i.key||a&&a.key===i.key?"":(""+i.key).replace(gs,"$&/")+"/")+e)),t.push(i)),1;if(a=0,r=r===""?".":r+":",ps(e))for(var l=0;l<e.length;l++){o=e[l];var u=r+na(o,l);a+=ui(o,t,n,u,i)}else if(u=wm(e),typeof u=="function")for(e=u.call(e),l=0;!(o=e.next()).done;)o=o.value,u=r+na(o,l++),a+=ui(o,t,n,u,i);else if(o==="object")throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return a}function si(e,t,n){if(e==null)return e;var r=[],i=0;return ui(e,r,"","",function(o){return t.call(n,o,i++)}),r}function Cm(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(n){(e._status===0||e._status===-1)&&(e._status=1,e._result=n)},function(n){(e._status===0||e._status===-1)&&(e._status=2,e._result=n)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var Se={current:null},ci={transition:null},Pm={ReactCurrentDispatcher:Se,ReactCurrentBatchConfig:ci,ReactCurrentOwner:ea};F.Children={map:si,forEach:function(e,t,n){si(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return si(e,function(){t++}),t},toArray:function(e){return si(e,function(t){return t})||[]},only:function(e){if(!ta(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},F.Component=pn,F.Fragment=fm,F.Profiler=pm,F.PureComponent=qo,F.StrictMode=dm,F.Suspense=gm,F.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Pm,F.cloneElement=function(e,t,n){if(e==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var r=cs({},e.props),i=e.key,o=e.ref,a=e._owner;if(t!=null){if(t.ref!==void 0&&(o=t.ref,a=ea.current),t.key!==void 0&&(i=""+t.key),e.type&&e.type.defaultProps)var l=e.type.defaultProps;for(u in t)vs.call(t,u)&&!ms.hasOwnProperty(u)&&(r[u]=t[u]===void 0&&l!==void 0?l[u]:t[u])}var u=arguments.length-2;if(u===1)r.children=n;else if(1<u){l=Array(u);for(var s=0;s<u;s++)l[s]=arguments[s+2];r.children=l}return{$$typeof:Zn,type:e.type,key:i,ref:o,props:r,_owner:a}},F.createContext=function(e){return e={$$typeof:mm,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},e.Provider={$$typeof:vm,_context:e},e.Consumer=e},F.createElement=hs,F.createFactory=function(e){var t=hs.bind(null,e);return t.type=e,t},F.createRef=function(){return{current:null}},F.forwardRef=function(e){return{$$typeof:hm,render:e}},F.isValidElement=ta,F.lazy=function(e){return{$$typeof:Sm,_payload:{_status:-1,_result:e},_init:Cm}},F.memo=function(e,t){return{$$typeof:ym,type:e,compare:t===void 0?null:t}},F.startTransition=function(e){var t=ci.transition;ci.transition={};try{e()}finally{ci.transition=t}},F.unstable_act=function(){throw Error("act(...) is not supported in production builds of React.")},F.useCallback=function(e,t){return Se.current.useCallback(e,t)},F.useContext=function(e){return Se.current.useContext(e)},F.useDebugValue=function(){},F.useDeferredValue=function(e){return Se.current.useDeferredValue(e)},F.useEffect=function(e,t){return Se.current.useEffect(e,t)},F.useId=function(){return Se.current.useId()},F.useImperativeHandle=function(e,t,n){return Se.current.useImperativeHandle(e,t,n)},F.useInsertionEffect=function(e,t){return Se.current.useInsertionEffect(e,t)},F.useLayoutEffect=function(e,t){return Se.current.useLayoutEffect(e,t)},F.useMemo=function(e,t){return Se.current.useMemo(e,t)},F.useReducer=function(e,t,n){return Se.current.useReducer(e,t,n)},F.useRef=function(e){return Se.current.useRef(e)},F.useState=function(e){return Se.current.useState(e)},F.useSyncExternalStore=function(e,t,n){return Se.current.useSyncExternalStore(e,t,n)},F.useTransition=function(){return Se.current.useTransition()},F.version="18.1.0",L.exports=F;var Q=L.exports,ys={exports:{}},Ae={},Ss={exports:{}},ws={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(e){function t(V,N){var I=V.length;V.push(N);e:for(;0<I;){var H=I-1>>>1,U=V[H];if(0<i(U,N))V[H]=N,V[I]=U,I=H;else break e}}function n(V){return V.length===0?null:V[0]}function r(V){if(V.length===0)return null;var N=V[0],I=V.pop();if(I!==N){V[0]=I;e:for(var H=0,U=V.length,z=U>>>1;H<z;){var _=2*(H+1)-1,D=V[_],b=_+1,ft=V[b];if(0>i(D,I))b<U&&0>i(ft,D)?(V[H]=ft,V[b]=I,H=b):(V[H]=D,V[_]=I,H=_);else if(b<U&&0>i(ft,I))V[H]=ft,V[b]=I,H=b;else break e}}return N}function i(V,N){var I=V.sortIndex-N.sortIndex;return I!==0?I:V.id-N.id}if(typeof performance=="object"&&typeof performance.now=="function"){var o=performance;e.unstable_now=function(){return o.now()}}else{var a=Date,l=a.now();e.unstable_now=function(){return a.now()-l}}var u=[],s=[],c=1,d=null,f=3,v=!1,h=!1,y=!1,x=typeof setTimeout=="function"?setTimeout:null,m=typeof clearTimeout=="function"?clearTimeout:null,p=typeof setImmediate!="undefined"?setImmediate:null;typeof navigator!="undefined"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function g(V){for(var N=n(s);N!==null;){if(N.callback===null)r(s);else if(N.startTime<=V)r(s),N.sortIndex=N.expirationTime,t(u,N);else break;N=n(s)}}function S(V){if(y=!1,g(V),!h)if(n(u)!==null)h=!0,Fe(w);else{var N=n(s);N!==null&&Qe(S,N.startTime-V)}}function w(V,N){h=!1,y&&(y=!1,m(E),E=-1),v=!0;var I=f;try{for(g(N),d=n(u);d!==null&&(!(d.expirationTime>N)||V&&!$());){var H=d.callback;if(typeof H=="function"){d.callback=null,f=d.priorityLevel;var U=H(d.expirationTime<=N);N=e.unstable_now(),typeof U=="function"?d.callback=U:d===n(u)&&r(u),g(N)}else r(u);d=n(u)}if(d!==null)var z=!0;else{var _=n(s);_!==null&&Qe(S,_.startTime-N),z=!1}return z}finally{d=null,f=I,v=!1}}var T=!1,C=null,E=-1,R=5,A=-1;function $(){return!(e.unstable_now()-A<R)}function ce(){if(C!==null){var V=e.unstable_now();A=V;var N=!0;try{N=C(!0,V)}finally{N?ie():(T=!1,C=null)}}else T=!1}var ie;if(typeof p=="function")ie=function(){p(ce)};else if(typeof MessageChannel!="undefined"){var Pe=new MessageChannel,Re=Pe.port2;Pe.port1.onmessage=ce,ie=function(){Re.postMessage(null)}}else ie=function(){x(ce,0)};function Fe(V){C=V,T||(T=!0,ie())}function Qe(V,N){E=x(function(){V(e.unstable_now())},N)}e.unstable_IdlePriority=5,e.unstable_ImmediatePriority=1,e.unstable_LowPriority=4,e.unstable_NormalPriority=3,e.unstable_Profiling=null,e.unstable_UserBlockingPriority=2,e.unstable_cancelCallback=function(V){V.callback=null},e.unstable_continueExecution=function(){h||v||(h=!0,Fe(w))},e.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):R=0<V?Math.floor(1e3/V):5},e.unstable_getCurrentPriorityLevel=function(){return f},e.unstable_getFirstCallbackNode=function(){return n(u)},e.unstable_next=function(V){switch(f){case 1:case 2:case 3:var N=3;break;default:N=f}var I=f;f=N;try{return V()}finally{f=I}},e.unstable_pauseExecution=function(){},e.unstable_requestPaint=function(){},e.unstable_runWithPriority=function(V,N){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var I=f;f=V;try{return N()}finally{f=I}},e.unstable_scheduleCallback=function(V,N,I){var H=e.unstable_now();switch(typeof I=="object"&&I!==null?(I=I.delay,I=typeof I=="number"&&0<I?H+I:H):I=H,V){case 1:var U=-1;break;case 2:U=250;break;case 5:U=1073741823;break;case 4:U=1e4;break;default:U=5e3}return U=I+U,V={id:c++,callback:N,priorityLevel:V,startTime:I,expirationTime:U,sortIndex:-1},I>H?(V.sortIndex=I,t(s,V),n(u)===null&&V===n(s)&&(y?(m(E),E=-1):y=!0,Qe(S,I-H))):(V.sortIndex=U,t(u,V),h||v||(h=!0,Fe(w))),V},e.unstable_shouldYield=$,e.unstable_wrapCallback=function(V){var N=f;return function(){var I=f;f=N;try{return V.apply(this,arguments)}finally{f=I}}}})(ws),Ss.exports=ws;/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var xs=L.exports,De=Ss.exports;function P(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Es=new Set,Jn={};function Xt(e,t){vn(e,t),vn(e+"Capture",t)}function vn(e,t){for(Jn[e]=t,e=0;e<t.length;e++)Es.add(t[e])}var dt=!(typeof window=="undefined"||typeof window.document=="undefined"||typeof window.document.createElement=="undefined"),ra=Object.prototype.hasOwnProperty,Tm=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,Cs={},Ps={};function km(e){return ra.call(Ps,e)?!0:ra.call(Cs,e)?!1:Tm.test(e)?Ps[e]=!0:(Cs[e]=!0,!1)}function Lm(e,t,n,r){if(n!==null&&n.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return r?!1:n!==null?!n.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function _m(e,t,n,r){if(t===null||typeof t=="undefined"||Lm(e,t,n,r))return!0;if(r)return!1;if(n!==null)switch(n.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function we(e,t,n,r,i,o,a){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=r,this.attributeNamespace=i,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=a}var fe={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){fe[e]=new we(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];fe[t]=new we(t,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){fe[e]=new we(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){fe[e]=new we(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){fe[e]=new we(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){fe[e]=new we(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){fe[e]=new we(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){fe[e]=new we(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){fe[e]=new we(e,5,!1,e.toLowerCase(),null,!1,!1)});var ia=/[\-:]([a-z])/g;function oa(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(ia,oa);fe[t]=new we(t,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(ia,oa);fe[t]=new we(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(ia,oa);fe[t]=new we(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){fe[e]=new we(e,1,!1,e.toLowerCase(),null,!1,!1)}),fe.xlinkHref=new we("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){fe[e]=new we(e,1,!1,e.toLowerCase(),null,!0,!0)});function aa(e,t,n,r){var i=fe.hasOwnProperty(t)?fe[t]:null;(i!==null?i.type!==0:r||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(_m(t,n,i,r)&&(n=null),r||i===null?km(t)&&(n===null?e.removeAttribute(t):e.setAttribute(t,""+n)):i.mustUseProperty?e[i.propertyName]=n===null?i.type===3?!1:"":n:(t=i.attributeName,r=i.attributeNamespace,n===null?e.removeAttribute(t):(i=i.type,n=i===3||i===4&&n===!0?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}var pt=xs.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,fi=Symbol.for("react.element"),mn=Symbol.for("react.portal"),hn=Symbol.for("react.fragment"),la=Symbol.for("react.strict_mode"),ua=Symbol.for("react.profiler"),Ts=Symbol.for("react.provider"),ks=Symbol.for("react.context"),sa=Symbol.for("react.forward_ref"),ca=Symbol.for("react.suspense"),fa=Symbol.for("react.suspense_list"),da=Symbol.for("react.memo"),kt=Symbol.for("react.lazy"),Ls=Symbol.for("react.offscreen"),_s=Symbol.iterator;function qn(e){return e===null||typeof e!="object"?null:(e=_s&&e[_s]||e["@@iterator"],typeof e=="function"?e:null)}var Z=Object.assign,pa;function bn(e){if(pa===void 0)try{throw Error()}catch(n){var t=n.stack.trim().match(/\n( *(at )?)/);pa=t&&t[1]||""}return`
`+pa+e}var va=!1;function ma(e,t){if(!e||va)return"";va=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(s){var r=s}Reflect.construct(e,[],t)}else{try{t.call()}catch(s){r=s}e.call(t.prototype)}else{try{throw Error()}catch(s){r=s}e()}}catch(s){if(s&&r&&typeof s.stack=="string"){for(var i=s.stack.split(`
`),o=r.stack.split(`
`),a=i.length-1,l=o.length-1;1<=a&&0<=l&&i[a]!==o[l];)l--;for(;1<=a&&0<=l;a--,l--)if(i[a]!==o[l]){if(a!==1||l!==1)do if(a--,l--,0>l||i[a]!==o[l]){var u=`
`+i[a].replace(" at new "," at ");return e.displayName&&u.includes("<anonymous>")&&(u=u.replace("<anonymous>",e.displayName)),u}while(1<=a&&0<=l);break}}}finally{va=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?bn(e):""}function Vm(e){switch(e.tag){case 5:return bn(e.type);case 16:return bn("Lazy");case 13:return bn("Suspense");case 19:return bn("SuspenseList");case 0:case 2:case 15:return e=ma(e.type,!1),e;case 11:return e=ma(e.type.render,!1),e;case 1:return e=ma(e.type,!0),e;default:return""}}function ha(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case hn:return"Fragment";case mn:return"Portal";case ua:return"Profiler";case la:return"StrictMode";case ca:return"Suspense";case fa:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case ks:return(e.displayName||"Context")+".Consumer";case Ts:return(e._context.displayName||"Context")+".Provider";case sa:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case da:return t=e.displayName||null,t!==null?t:ha(e.type)||"Memo";case kt:t=e._payload,e=e._init;try{return ha(e(t))}catch{}}return null}function Mm(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return ha(t);case 8:return t===la?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function Lt(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Vs(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function Rm(e){var t=Vs(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof n!="undefined"&&typeof n.get=="function"&&typeof n.set=="function"){var i=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return i.call(this)},set:function(a){r=""+a,o.call(this,a)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(a){r=""+a},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function di(e){e._valueTracker||(e._valueTracker=Rm(e))}function Ms(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Vs(e)?e.checked?"true":"false":e.value),e=r,e!==n?(t.setValue(e),!0):!1}function pi(e){if(e=e||(typeof document!="undefined"?document:void 0),typeof e=="undefined")return null;try{return e.activeElement||e.body}catch{return e.body}}function ga(e,t){var n=t.checked;return Z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:n!=null?n:e._wrapperState.initialChecked})}function Rs(e,t){var n=t.defaultValue==null?"":t.defaultValue,r=t.checked!=null?t.checked:t.defaultChecked;n=Lt(t.value!=null?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function As(e,t){t=t.checked,t!=null&&aa(e,"checked",t,!1)}function ya(e,t){As(e,t);var n=Lt(t.value),r=t.type;if(n!=null)r==="number"?(n===0&&e.value===""||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if(r==="submit"||r==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?Sa(e,t.type,n):t.hasOwnProperty("defaultValue")&&Sa(e,t.type,Lt(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function Ds(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!(r!=="submit"&&r!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}n=e.name,n!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,n!==""&&(e.name=n)}function Sa(e,t,n){(t!=="number"||pi(e.ownerDocument)!==e)&&(n==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var er=Array.isArray;function gn(e,t,n,r){if(e=e.options,t){t={};for(var i=0;i<n.length;i++)t["$"+n[i]]=!0;for(n=0;n<e.length;n++)i=t.hasOwnProperty("$"+e[n].value),e[n].selected!==i&&(e[n].selected=i),i&&r&&(e[n].defaultSelected=!0)}else{for(n=""+Lt(n),t=null,i=0;i<e.length;i++){if(e[i].value===n){e[i].selected=!0,r&&(e[i].defaultSelected=!0);return}t!==null||e[i].disabled||(t=e[i])}t!==null&&(t.selected=!0)}}function wa(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(P(91));return Z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Os(e,t){var n=t.value;if(n==null){if(n=t.children,t=t.defaultValue,n!=null){if(t!=null)throw Error(P(92));if(er(n)){if(1<n.length)throw Error(P(93));n=n[0]}t=n}t==null&&(t=""),n=t}e._wrapperState={initialValue:Lt(n)}}function Ns(e,t){var n=Lt(t.value),r=Lt(t.defaultValue);n!=null&&(n=""+n,n!==e.value&&(e.value=n),t.defaultValue==null&&e.defaultValue!==n&&(e.defaultValue=n)),r!=null&&(e.defaultValue=""+r)}function Is(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function Fs(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function xa(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?Fs(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var vi,zs=function(e){return typeof MSApp!="undefined"&&MSApp.execUnsafeLocalFunction?function(t,n,r,i){MSApp.execUnsafeLocalFunction(function(){return e(t,n,r,i)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(vi=vi||document.createElement("div"),vi.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=vi.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function tr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&n.nodeType===3){n.nodeValue=t;return}}e.textContent=t}var nr={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Am=["Webkit","ms","Moz","O"];Object.keys(nr).forEach(function(e){Am.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),nr[t]=nr[e]})});function js(e,t,n){return t==null||typeof t=="boolean"||t===""?"":n||typeof t!="number"||t===0||nr.hasOwnProperty(e)&&nr[e]?(""+t).trim():t+"px"}function Us(e,t){e=e.style;for(var n in t)if(t.hasOwnProperty(n)){var r=n.indexOf("--")===0,i=js(n,t[n],r);n==="float"&&(n="cssFloat"),r?e.setProperty(n,i):e[n]=i}}var Dm=Z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Ea(e,t){if(t){if(Dm[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(P(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(P(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(P(61))}if(t.style!=null&&typeof t.style!="object")throw Error(P(62))}}function Ca(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Pa=null;function Ta(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var ka=null,yn=null,Sn=null;function Bs(e){if(e=Pr(e)){if(typeof ka!="function")throw Error(P(280));var t=e.stateNode;t&&(t=Fi(t),ka(e.stateNode,e.type,t))}}function $s(e){yn?Sn?Sn.push(e):Sn=[e]:yn=e}function Hs(){if(yn){var e=yn,t=Sn;if(Sn=yn=null,Bs(e),t)for(e=0;e<t.length;e++)Bs(t[e])}}function Ws(e,t){return e(t)}function Ks(){}var La=!1;function Qs(e,t,n){if(La)return e(t,n);La=!0;try{return Ws(e,t,n)}finally{La=!1,(yn!==null||Sn!==null)&&(Ks(),Hs())}}function rr(e,t){var n=e.stateNode;if(n===null)return null;var r=Fi(n);if(r===null)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(n&&typeof n!="function")throw Error(P(231,t,typeof n));return n}var _a=!1;if(dt)try{var ir={};Object.defineProperty(ir,"passive",{get:function(){_a=!0}}),window.addEventListener("test",ir,ir),window.removeEventListener("test",ir,ir)}catch{_a=!1}function Om(e,t,n,r,i,o,a,l,u){var s=Array.prototype.slice.call(arguments,3);try{t.apply(n,s)}catch(c){this.onError(c)}}var or=!1,mi=null,hi=!1,Va=null,Nm={onError:function(e){or=!0,mi=e}};function Im(e,t,n,r,i,o,a,l,u){or=!1,mi=null,Om.apply(Nm,arguments)}function Fm(e,t,n,r,i,o,a,l,u){if(Im.apply(this,arguments),or){if(or){var s=mi;or=!1,mi=null}else throw Error(P(198));hi||(hi=!0,Va=s)}}function Zt(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,(t.flags&4098)!==0&&(n=t.return),e=t.return;while(e)}return t.tag===3?n:null}function Gs(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Ys(e){if(Zt(e)!==e)throw Error(P(188))}function zm(e){var t=e.alternate;if(!t){if(t=Zt(e),t===null)throw Error(P(188));return t!==e?null:e}for(var n=e,r=t;;){var i=n.return;if(i===null)break;var o=i.alternate;if(o===null){if(r=i.return,r!==null){n=r;continue}break}if(i.child===o.child){for(o=i.child;o;){if(o===n)return Ys(i),e;if(o===r)return Ys(i),t;o=o.sibling}throw Error(P(188))}if(n.return!==r.return)n=i,r=o;else{for(var a=!1,l=i.child;l;){if(l===n){a=!0,n=i,r=o;break}if(l===r){a=!0,r=i,n=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===n){a=!0,n=o,r=i;break}if(l===r){a=!0,r=o,n=i;break}l=l.sibling}if(!a)throw Error(P(189))}}if(n.alternate!==r)throw Error(P(190))}if(n.tag!==3)throw Error(P(188));return n.stateNode.current===n?e:t}function Xs(e){return e=zm(e),e!==null?Zs(e):null}function Zs(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=Zs(e);if(t!==null)return t;e=e.sibling}return null}var Js=De.unstable_scheduleCallback,qs=De.unstable_cancelCallback,jm=De.unstable_shouldYield,Um=De.unstable_requestPaint,re=De.unstable_now,Bm=De.unstable_getCurrentPriorityLevel,Ma=De.unstable_ImmediatePriority,bs=De.unstable_UserBlockingPriority,gi=De.unstable_NormalPriority,$m=De.unstable_LowPriority,ec=De.unstable_IdlePriority,yi=null,rt=null;function Hm(e){if(rt&&typeof rt.onCommitFiberRoot=="function")try{rt.onCommitFiberRoot(yi,e,void 0,(e.current.flags&128)===128)}catch{}}var Ge=Math.clz32?Math.clz32:Qm,Wm=Math.log,Km=Math.LN2;function Qm(e){return e>>>=0,e===0?32:31-(Wm(e)/Km|0)|0}var Si=64,wi=4194304;function ar(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function xi(e,t){var n=e.pendingLanes;if(n===0)return 0;var r=0,i=e.suspendedLanes,o=e.pingedLanes,a=n&268435455;if(a!==0){var l=a&~i;l!==0?r=ar(l):(o&=a,o!==0&&(r=ar(o)))}else a=n&~i,a!==0?r=ar(a):o!==0&&(r=ar(o));if(r===0)return 0;if(t!==0&&t!==r&&(t&i)===0&&(i=r&-r,o=t&-t,i>=o||i===16&&(o&4194240)!==0))return t;if((r&4)!==0&&(r|=n&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=r;0<t;)n=31-Ge(t),i=1<<n,r|=e[n],t&=~i;return r}function Gm(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ym(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,i=e.expirationTimes,o=e.pendingLanes;0<o;){var a=31-Ge(o),l=1<<a,u=i[a];u===-1?((l&n)===0||(l&r)!==0)&&(i[a]=Gm(l,t)):u<=t&&(e.expiredLanes|=l),o&=~l}}function Ra(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function tc(){var e=Si;return Si<<=1,(Si&4194240)===0&&(Si=64),e}function Aa(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function lr(e,t,n){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-Ge(t),e[t]=n}function Xm(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var i=31-Ge(n),o=1<<i;t[i]=0,r[i]=-1,e[i]=-1,n&=~o}}function Da(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-Ge(n),i=1<<r;i&t|e[r]&t&&(e[r]|=t),n&=~i}}var B=0;function nc(e){return e&=-e,1<e?4<e?(e&268435455)!==0?16:536870912:4:1}var rc,Oa,ic,oc,ac,Na=!1,Ei=[],_t=null,Vt=null,Mt=null,ur=new Map,sr=new Map,Rt=[],Zm="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function lc(e,t){switch(e){case"focusin":case"focusout":_t=null;break;case"dragenter":case"dragleave":Vt=null;break;case"mouseover":case"mouseout":Mt=null;break;case"pointerover":case"pointerout":ur.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":sr.delete(t.pointerId)}}function cr(e,t,n,r,i,o){return e===null||e.nativeEvent!==o?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:o,targetContainers:[i]},t!==null&&(t=Pr(t),t!==null&&Oa(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,i!==null&&t.indexOf(i)===-1&&t.push(i),e)}function Jm(e,t,n,r,i){switch(t){case"focusin":return _t=cr(_t,e,t,n,r,i),!0;case"dragenter":return Vt=cr(Vt,e,t,n,r,i),!0;case"mouseover":return Mt=cr(Mt,e,t,n,r,i),!0;case"pointerover":var o=i.pointerId;return ur.set(o,cr(ur.get(o)||null,e,t,n,r,i)),!0;case"gotpointercapture":return o=i.pointerId,sr.set(o,cr(sr.get(o)||null,e,t,n,r,i)),!0}return!1}function uc(e){var t=Jt(e.target);if(t!==null){var n=Zt(t);if(n!==null){if(t=n.tag,t===13){if(t=Gs(n),t!==null){e.blockedOn=t,ac(e.priority,function(){ic(n)});return}}else if(t===3&&n.stateNode.current.memoizedState.isDehydrated){e.blockedOn=n.tag===3?n.stateNode.containerInfo:null;return}}}e.blockedOn=null}function Ci(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var n=Fa(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(n===null){n=e.nativeEvent;var r=new n.constructor(n.type,n);Pa=r,n.target.dispatchEvent(r),Pa=null}else return t=Pr(n),t!==null&&Oa(t),e.blockedOn=n,!1;t.shift()}return!0}function sc(e,t,n){Ci(e)&&n.delete(t)}function qm(){Na=!1,_t!==null&&Ci(_t)&&(_t=null),Vt!==null&&Ci(Vt)&&(Vt=null),Mt!==null&&Ci(Mt)&&(Mt=null),ur.forEach(sc),sr.forEach(sc)}function fr(e,t){e.blockedOn===t&&(e.blockedOn=null,Na||(Na=!0,De.unstable_scheduleCallback(De.unstable_NormalPriority,qm)))}function dr(e){function t(i){return fr(i,e)}if(0<Ei.length){fr(Ei[0],e);for(var n=1;n<Ei.length;n++){var r=Ei[n];r.blockedOn===e&&(r.blockedOn=null)}}for(_t!==null&&fr(_t,e),Vt!==null&&fr(Vt,e),Mt!==null&&fr(Mt,e),ur.forEach(t),sr.forEach(t),n=0;n<Rt.length;n++)r=Rt[n],r.blockedOn===e&&(r.blockedOn=null);for(;0<Rt.length&&(n=Rt[0],n.blockedOn===null);)uc(n),n.blockedOn===null&&Rt.shift()}var wn=pt.ReactCurrentBatchConfig,Pi=!0;function bm(e,t,n,r){var i=B,o=wn.transition;wn.transition=null;try{B=1,Ia(e,t,n,r)}finally{B=i,wn.transition=o}}function eh(e,t,n,r){var i=B,o=wn.transition;wn.transition=null;try{B=4,Ia(e,t,n,r)}finally{B=i,wn.transition=o}}function Ia(e,t,n,r){if(Pi){var i=Fa(e,t,n,r);if(i===null)el(e,t,r,Ti,n),lc(e,r);else if(Jm(i,e,t,n,r))r.stopPropagation();else if(lc(e,r),t&4&&-1<Zm.indexOf(e)){for(;i!==null;){var o=Pr(i);if(o!==null&&rc(o),o=Fa(e,t,n,r),o===null&&el(e,t,r,Ti,n),o===i)break;i=o}i!==null&&r.stopPropagation()}else el(e,t,r,null,n)}}var Ti=null;function Fa(e,t,n,r){if(Ti=null,e=Ta(r),e=Jt(e),e!==null)if(t=Zt(e),t===null)e=null;else if(n=t.tag,n===13){if(e=Gs(t),e!==null)return e;e=null}else if(n===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Ti=e,null}function cc(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Bm()){case Ma:return 1;case bs:return 4;case gi:case $m:return 16;case ec:return 536870912;default:return 16}default:return 16}}var At=null,za=null,ki=null;function fc(){if(ki)return ki;var e,t=za,n=t.length,r,i="value"in At?At.value:At.textContent,o=i.length;for(e=0;e<n&&t[e]===i[e];e++);var a=n-e;for(r=1;r<=a&&t[n-r]===i[o-r];r++);return ki=i.slice(e,1<r?1-r:void 0)}function Li(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function _i(){return!0}function dc(){return!1}function Oe(e){function t(n,r,i,o,a){this._reactName=n,this._targetInst=i,this.type=r,this.nativeEvent=o,this.target=a,this.currentTarget=null;for(var l in e)e.hasOwnProperty(l)&&(n=e[l],this[l]=n?n(o):o[l]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?_i:dc,this.isPropagationStopped=dc,this}return Z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var n=this.nativeEvent;n&&(n.preventDefault?n.preventDefault():typeof n.returnValue!="unknown"&&(n.returnValue=!1),this.isDefaultPrevented=_i)},stopPropagation:function(){var n=this.nativeEvent;n&&(n.stopPropagation?n.stopPropagation():typeof n.cancelBubble!="unknown"&&(n.cancelBubble=!0),this.isPropagationStopped=_i)},persist:function(){},isPersistent:_i}),t}var xn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},ja=Oe(xn),pr=Z({},xn,{view:0,detail:0}),th=Oe(pr),Ua,Ba,vr,Vi=Z({},pr,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Ha,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==vr&&(vr&&e.type==="mousemove"?(Ua=e.screenX-vr.screenX,Ba=e.screenY-vr.screenY):Ba=Ua=0,vr=e),Ua)},movementY:function(e){return"movementY"in e?e.movementY:Ba}}),pc=Oe(Vi),nh=Z({},Vi,{dataTransfer:0}),rh=Oe(nh),ih=Z({},pr,{relatedTarget:0}),$a=Oe(ih),oh=Z({},xn,{animationName:0,elapsedTime:0,pseudoElement:0}),ah=Oe(oh),lh=Z({},xn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),uh=Oe(lh),sh=Z({},xn,{data:0}),vc=Oe(sh),ch={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},fh={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},dh={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function ph(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=dh[e])?!!t[e]:!1}function Ha(){return ph}var vh=Z({},pr,{key:function(e){if(e.key){var t=ch[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=Li(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?fh[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Ha,charCode:function(e){return e.type==="keypress"?Li(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?Li(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),mh=Oe(vh),hh=Z({},Vi,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),mc=Oe(hh),gh=Z({},pr,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Ha}),yh=Oe(gh),Sh=Z({},xn,{propertyName:0,elapsedTime:0,pseudoElement:0}),wh=Oe(Sh),xh=Z({},Vi,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Eh=Oe(xh),Ch=[9,13,27,32],Wa=dt&&"CompositionEvent"in window,mr=null;dt&&"documentMode"in document&&(mr=document.documentMode);var Ph=dt&&"TextEvent"in window&&!mr,hc=dt&&(!Wa||mr&&8<mr&&11>=mr),gc=String.fromCharCode(32),yc=!1;function Sc(e,t){switch(e){case"keyup":return Ch.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function wc(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var En=!1;function Th(e,t){switch(e){case"compositionend":return wc(t);case"keypress":return t.which!==32?null:(yc=!0,gc);case"textInput":return e=t.data,e===gc&&yc?null:e;default:return null}}function kh(e,t){if(En)return e==="compositionend"||!Wa&&Sc(e,t)?(e=fc(),ki=za=At=null,En=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return hc&&t.locale!=="ko"?null:t.data;default:return null}}var Lh={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function xc(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!Lh[e.type]:t==="textarea"}function Ec(e,t,n,r){$s(r),t=Oi(t,"onChange"),0<t.length&&(n=new ja("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var hr=null,gr=null;function _h(e){Uc(e,0)}function Mi(e){var t=Ln(e);if(Ms(t))return e}function Vh(e,t){if(e==="change")return t}var Cc=!1;if(dt){var Ka;if(dt){var Qa="oninput"in document;if(!Qa){var Pc=document.createElement("div");Pc.setAttribute("oninput","return;"),Qa=typeof Pc.oninput=="function"}Ka=Qa}else Ka=!1;Cc=Ka&&(!document.documentMode||9<document.documentMode)}function Tc(){hr&&(hr.detachEvent("onpropertychange",kc),gr=hr=null)}function kc(e){if(e.propertyName==="value"&&Mi(gr)){var t=[];Ec(t,gr,e,Ta(e)),Qs(_h,t)}}function Mh(e,t,n){e==="focusin"?(Tc(),hr=t,gr=n,hr.attachEvent("onpropertychange",kc)):e==="focusout"&&Tc()}function Rh(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Mi(gr)}function Ah(e,t){if(e==="click")return Mi(t)}function Dh(e,t){if(e==="input"||e==="change")return Mi(t)}function Oh(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Ye=typeof Object.is=="function"?Object.is:Oh;function yr(e,t){if(Ye(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var i=n[r];if(!ra.call(t,i)||!Ye(e[i],t[i]))return!1}return!0}function Lc(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function _c(e,t){var n=Lc(e);e=0;for(var r;n;){if(n.nodeType===3){if(r=e+n.textContent.length,e<=t&&r>=t)return{node:n,offset:t-e};e=r}e:{for(;n;){if(n.nextSibling){n=n.nextSibling;break e}n=n.parentNode}n=void 0}n=Lc(n)}}function Vc(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Vc(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Mc(){for(var e=window,t=pi();t instanceof e.HTMLIFrameElement;){try{var n=typeof t.contentWindow.location.href=="string"}catch{n=!1}if(n)e=t.contentWindow;else break;t=pi(e.document)}return t}function Ga(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function Nh(e){var t=Mc(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&Vc(n.ownerDocument.documentElement,n)){if(r!==null&&Ga(n)){if(t=r.start,e=r.end,e===void 0&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if(e=(t=n.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var i=n.textContent.length,o=Math.min(r.start,i);r=r.end===void 0?o:Math.min(r.end,i),!e.extend&&o>r&&(i=r,r=o,o=i),i=_c(n,o);var a=_c(n,r);i&&a&&(e.rangeCount!==1||e.anchorNode!==i.node||e.anchorOffset!==i.offset||e.focusNode!==a.node||e.focusOffset!==a.offset)&&(t=t.createRange(),t.setStart(i.node,i.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(a.node,a.offset)):(t.setEnd(a.node,a.offset),e.addRange(t)))}}for(t=[],e=n;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof n.focus=="function"&&n.focus(),n=0;n<t.length;n++)e=t[n],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ih=dt&&"documentMode"in document&&11>=document.documentMode,Cn=null,Ya=null,Sr=null,Xa=!1;function Rc(e,t,n){var r=n.window===n?n.document:n.nodeType===9?n:n.ownerDocument;Xa||Cn==null||Cn!==pi(r)||(r=Cn,"selectionStart"in r&&Ga(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),Sr&&yr(Sr,r)||(Sr=r,r=Oi(Ya,"onSelect"),0<r.length&&(t=new ja("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=Cn)))}function Ri(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Pn={animationend:Ri("Animation","AnimationEnd"),animationiteration:Ri("Animation","AnimationIteration"),animationstart:Ri("Animation","AnimationStart"),transitionend:Ri("Transition","TransitionEnd")},Za={},Ac={};dt&&(Ac=document.createElement("div").style,"AnimationEvent"in window||(delete Pn.animationend.animation,delete Pn.animationiteration.animation,delete Pn.animationstart.animation),"TransitionEvent"in window||delete Pn.transitionend.transition);function Ai(e){if(Za[e])return Za[e];if(!Pn[e])return e;var t=Pn[e],n;for(n in t)if(t.hasOwnProperty(n)&&n in Ac)return Za[e]=t[n];return e}var Dc=Ai("animationend"),Oc=Ai("animationiteration"),Nc=Ai("animationstart"),Ic=Ai("transitionend"),Fc=new Map,zc="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Dt(e,t){Fc.set(e,t),Xt(t,[e])}for(var Ja=0;Ja<zc.length;Ja++){var qa=zc[Ja],Fh=qa.toLowerCase(),zh=qa[0].toUpperCase()+qa.slice(1);Dt(Fh,"on"+zh)}Dt(Dc,"onAnimationEnd"),Dt(Oc,"onAnimationIteration"),Dt(Nc,"onAnimationStart"),Dt("dblclick","onDoubleClick"),Dt("focusin","onFocus"),Dt("focusout","onBlur"),Dt(Ic,"onTransitionEnd"),vn("onMouseEnter",["mouseout","mouseover"]),vn("onMouseLeave",["mouseout","mouseover"]),vn("onPointerEnter",["pointerout","pointerover"]),vn("onPointerLeave",["pointerout","pointerover"]),Xt("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Xt("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Xt("onBeforeInput",["compositionend","keypress","textInput","paste"]),Xt("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Xt("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Xt("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var wr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),jh=new Set("cancel close invalid load scroll toggle".split(" ").concat(wr));function jc(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,Fm(r,t,void 0,e),e.currentTarget=null}function Uc(e,t){t=(t&4)!==0;for(var n=0;n<e.length;n++){var r=e[n],i=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var a=r.length-1;0<=a;a--){var l=r[a],u=l.instance,s=l.currentTarget;if(l=l.listener,u!==o&&i.isPropagationStopped())break e;jc(i,l,s),o=u}else for(a=0;a<r.length;a++){if(l=r[a],u=l.instance,s=l.currentTarget,l=l.listener,u!==o&&i.isPropagationStopped())break e;jc(i,l,s),o=u}}}if(hi)throw e=Va,hi=!1,Va=null,e}function G(e,t){var n=t[al];n===void 0&&(n=t[al]=new Set);var r=e+"__bubble";n.has(r)||(Bc(t,e,2,!1),n.add(r))}function ba(e,t,n){var r=0;t&&(r|=4),Bc(n,e,r,t)}var Di="_reactListening"+Math.random().toString(36).slice(2);function xr(e){if(!e[Di]){e[Di]=!0,Es.forEach(function(n){n!=="selectionchange"&&(jh.has(n)||ba(n,!1,e),ba(n,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Di]||(t[Di]=!0,ba("selectionchange",!1,t))}}function Bc(e,t,n,r){switch(cc(t)){case 1:var i=bm;break;case 4:i=eh;break;default:i=Ia}n=i.bind(null,t,n,e),i=void 0,!_a||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(i=!0),r?i!==void 0?e.addEventListener(t,n,{capture:!0,passive:i}):e.addEventListener(t,n,!0):i!==void 0?e.addEventListener(t,n,{passive:i}):e.addEventListener(t,n,!1)}function el(e,t,n,r,i){var o=r;if((t&1)===0&&(t&2)===0&&r!==null)e:for(;;){if(r===null)return;var a=r.tag;if(a===3||a===4){var l=r.stateNode.containerInfo;if(l===i||l.nodeType===8&&l.parentNode===i)break;if(a===4)for(a=r.return;a!==null;){var u=a.tag;if((u===3||u===4)&&(u=a.stateNode.containerInfo,u===i||u.nodeType===8&&u.parentNode===i))return;a=a.return}for(;l!==null;){if(a=Jt(l),a===null)return;if(u=a.tag,u===5||u===6){r=o=a;continue e}l=l.parentNode}}r=r.return}Qs(function(){var s=o,c=Ta(n),d=[];e:{var f=Fc.get(e);if(f!==void 0){var v=ja,h=e;switch(e){case"keypress":if(Li(n)===0)break e;case"keydown":case"keyup":v=mh;break;case"focusin":h="focus",v=$a;break;case"focusout":h="blur",v=$a;break;case"beforeblur":case"afterblur":v=$a;break;case"click":if(n.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":v=pc;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":v=rh;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":v=yh;break;case Dc:case Oc:case Nc:v=ah;break;case Ic:v=wh;break;case"scroll":v=th;break;case"wheel":v=Eh;break;case"copy":case"cut":case"paste":v=uh;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":v=mc}var y=(t&4)!==0,x=!y&&e==="scroll",m=y?f!==null?f+"Capture":null:f;y=[];for(var p=s,g;p!==null;){g=p;var S=g.stateNode;if(g.tag===5&&S!==null&&(g=S,m!==null&&(S=rr(p,m),S!=null&&y.push(Er(p,S,g)))),x)break;p=p.return}0<y.length&&(f=new v(f,h,null,n,c),d.push({event:f,listeners:y}))}}if((t&7)===0){e:{if(f=e==="mouseover"||e==="pointerover",v=e==="mouseout"||e==="pointerout",f&&n!==Pa&&(h=n.relatedTarget||n.fromElement)&&(Jt(h)||h[mt]))break e;if((v||f)&&(f=c.window===c?c:(f=c.ownerDocument)?f.defaultView||f.parentWindow:window,v?(h=n.relatedTarget||n.toElement,v=s,h=h?Jt(h):null,h!==null&&(x=Zt(h),h!==x||h.tag!==5&&h.tag!==6)&&(h=null)):(v=null,h=s),v!==h)){if(y=pc,S="onMouseLeave",m="onMouseEnter",p="mouse",(e==="pointerout"||e==="pointerover")&&(y=mc,S="onPointerLeave",m="onPointerEnter",p="pointer"),x=v==null?f:Ln(v),g=h==null?f:Ln(h),f=new y(S,p+"leave",v,n,c),f.target=x,f.relatedTarget=g,S=null,Jt(c)===s&&(y=new y(m,p+"enter",h,n,c),y.target=g,y.relatedTarget=x,S=y),x=S,v&&h)t:{for(y=v,m=h,p=0,g=y;g;g=Tn(g))p++;for(g=0,S=m;S;S=Tn(S))g++;for(;0<p-g;)y=Tn(y),p--;for(;0<g-p;)m=Tn(m),g--;for(;p--;){if(y===m||m!==null&&y===m.alternate)break t;y=Tn(y),m=Tn(m)}y=null}else y=null;v!==null&&$c(d,f,v,y,!1),h!==null&&x!==null&&$c(d,x,h,y,!0)}}e:{if(f=s?Ln(s):window,v=f.nodeName&&f.nodeName.toLowerCase(),v==="select"||v==="input"&&f.type==="file")var w=Vh;else if(xc(f))if(Cc)w=Dh;else{w=Rh;var T=Mh}else(v=f.nodeName)&&v.toLowerCase()==="input"&&(f.type==="checkbox"||f.type==="radio")&&(w=Ah);if(w&&(w=w(e,s))){Ec(d,w,n,c);break e}T&&T(e,f,s),e==="focusout"&&(T=f._wrapperState)&&T.controlled&&f.type==="number"&&Sa(f,"number",f.value)}switch(T=s?Ln(s):window,e){case"focusin":(xc(T)||T.contentEditable==="true")&&(Cn=T,Ya=s,Sr=null);break;case"focusout":Sr=Ya=Cn=null;break;case"mousedown":Xa=!0;break;case"contextmenu":case"mouseup":case"dragend":Xa=!1,Rc(d,n,c);break;case"selectionchange":if(Ih)break;case"keydown":case"keyup":Rc(d,n,c)}var C;if(Wa)e:{switch(e){case"compositionstart":var E="onCompositionStart";break e;case"compositionend":E="onCompositionEnd";break e;case"compositionupdate":E="onCompositionUpdate";break e}E=void 0}else En?Sc(e,n)&&(E="onCompositionEnd"):e==="keydown"&&n.keyCode===229&&(E="onCompositionStart");E&&(hc&&n.locale!=="ko"&&(En||E!=="onCompositionStart"?E==="onCompositionEnd"&&En&&(C=fc()):(At=c,za="value"in At?At.value:At.textContent,En=!0)),T=Oi(s,E),0<T.length&&(E=new vc(E,e,null,n,c),d.push({event:E,listeners:T}),C?E.data=C:(C=wc(n),C!==null&&(E.data=C)))),(C=Ph?Th(e,n):kh(e,n))&&(s=Oi(s,"onBeforeInput"),0<s.length&&(c=new vc("onBeforeInput","beforeinput",null,n,c),d.push({event:c,listeners:s}),c.data=C))}Uc(d,t)})}function Er(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Oi(e,t){for(var n=t+"Capture",r=[];e!==null;){var i=e,o=i.stateNode;i.tag===5&&o!==null&&(i=o,o=rr(e,n),o!=null&&r.unshift(Er(e,o,i)),o=rr(e,t),o!=null&&r.push(Er(e,o,i))),e=e.return}return r}function Tn(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function $c(e,t,n,r,i){for(var o=t._reactName,a=[];n!==null&&n!==r;){var l=n,u=l.alternate,s=l.stateNode;if(u!==null&&u===r)break;l.tag===5&&s!==null&&(l=s,i?(u=rr(n,o),u!=null&&a.unshift(Er(n,u,l))):i||(u=rr(n,o),u!=null&&a.push(Er(n,u,l)))),n=n.return}a.length!==0&&e.push({event:t,listeners:a})}var Uh=/\r\n?/g,Bh=/\u0000|\uFFFD/g;function Hc(e){return(typeof e=="string"?e:""+e).replace(Uh,`
`).replace(Bh,"")}function Ni(e,t,n){if(t=Hc(t),Hc(e)!==t&&n)throw Error(P(425))}function Ii(){}var tl=null,nl=null;function rl(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var il=typeof setTimeout=="function"?setTimeout:void 0,$h=typeof clearTimeout=="function"?clearTimeout:void 0,Wc=typeof Promise=="function"?Promise:void 0,Hh=typeof queueMicrotask=="function"?queueMicrotask:typeof Wc!="undefined"?function(e){return Wc.resolve(null).then(e).catch(Wh)}:il;function Wh(e){setTimeout(function(){throw e})}function ol(e,t){var n=t,r=0;do{var i=n.nextSibling;if(e.removeChild(n),i&&i.nodeType===8)if(n=i.data,n==="/$"){if(r===0){e.removeChild(i),dr(t);return}r--}else n!=="$"&&n!=="$?"&&n!=="$!"||r++;n=i}while(n);dr(t)}function vt(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function Kc(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="$"||n==="$!"||n==="$?"){if(t===0)return e;t--}else n==="/$"&&t++}e=e.previousSibling}return null}var kn=Math.random().toString(36).slice(2),it="__reactFiber$"+kn,Cr="__reactProps$"+kn,mt="__reactContainer$"+kn,al="__reactEvents$"+kn,Kh="__reactListeners$"+kn,Qh="__reactHandles$"+kn;function Jt(e){var t=e[it];if(t)return t;for(var n=e.parentNode;n;){if(t=n[mt]||n[it]){if(n=t.alternate,t.child!==null||n!==null&&n.child!==null)for(e=Kc(e);e!==null;){if(n=e[it])return n;e=Kc(e)}return t}e=n,n=e.parentNode}return null}function Pr(e){return e=e[it]||e[mt],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Ln(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(P(33))}function Fi(e){return e[Cr]||null}var ll=[],_n=-1;function Ot(e){return{current:e}}function Y(e){0>_n||(e.current=ll[_n],ll[_n]=null,_n--)}function W(e,t){_n++,ll[_n]=e.current,e.current=t}var Nt={},ve=Ot(Nt),Te=Ot(!1),qt=Nt;function Vn(e,t){var n=e.type.contextTypes;if(!n)return Nt;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var i={},o;for(o in n)i[o]=t[o];return r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function ke(e){return e=e.childContextTypes,e!=null}function zi(){Y(Te),Y(ve)}function Qc(e,t,n){if(ve.current!==Nt)throw Error(P(168));W(ve,t),W(Te,n)}function Gc(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,typeof r.getChildContext!="function")return n;r=r.getChildContext();for(var i in r)if(!(i in t))throw Error(P(108,Mm(e)||"Unknown",i));return Z({},n,r)}function ji(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Nt,qt=ve.current,W(ve,e),W(Te,Te.current),!0}function Yc(e,t,n){var r=e.stateNode;if(!r)throw Error(P(169));n?(e=Gc(e,t,qt),r.__reactInternalMemoizedMergedChildContext=e,Y(Te),Y(ve),W(ve,e)):Y(Te),W(Te,n)}var ht=null,Ui=!1,ul=!1;function Xc(e){ht===null?ht=[e]:ht.push(e)}function Gh(e){Ui=!0,Xc(e)}function It(){if(!ul&&ht!==null){ul=!0;var e=0,t=B;try{var n=ht;for(B=1;e<n.length;e++){var r=n[e];do r=r(!0);while(r!==null)}ht=null,Ui=!1}catch(i){throw ht!==null&&(ht=ht.slice(e+1)),Js(Ma,It),i}finally{B=t,ul=!1}}return null}var Yh=pt.ReactCurrentBatchConfig;function Xe(e,t){if(e&&e.defaultProps){t=Z({},t),e=e.defaultProps;for(var n in e)t[n]===void 0&&(t[n]=e[n]);return t}return t}var Bi=Ot(null),$i=null,Mn=null,sl=null;function cl(){sl=Mn=$i=null}function fl(e){var t=Bi.current;Y(Bi),e._currentValue=t}function dl(e,t,n){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Rn(e,t){$i=e,sl=Mn=null,e=e.dependencies,e!==null&&e.firstContext!==null&&((e.lanes&t)!==0&&(_e=!0),e.firstContext=null)}function ze(e){var t=e._currentValue;if(sl!==e)if(e={context:e,memoizedValue:t,next:null},Mn===null){if($i===null)throw Error(P(308));Mn=e,$i.dependencies={lanes:0,firstContext:e}}else Mn=Mn.next=e;return t}var Ze=null,Ft=!1;function pl(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Zc(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function gt(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function zt(e,t){var n=e.updateQueue;n!==null&&(n=n.shared,dd(e)?(e=n.interleaved,e===null?(t.next=t,Ze===null?Ze=[n]:Ze.push(n)):(t.next=e.next,e.next=t),n.interleaved=t):(e=n.pending,e===null?t.next=t:(t.next=e.next,e.next=t),n.pending=t))}function Hi(e,t,n){if(t=t.updateQueue,t!==null&&(t=t.shared,(n&4194240)!==0)){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Da(e,n)}}function Jc(e,t){var n=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,n===r)){var i=null,o=null;if(n=n.firstBaseUpdate,n!==null){do{var a={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};o===null?i=o=a:o=o.next=a,n=n.next}while(n!==null);o===null?i=o=t:o=o.next=t}else i=o=t;n={baseState:r.baseState,firstBaseUpdate:i,lastBaseUpdate:o,shared:r.shared,effects:r.effects},e.updateQueue=n;return}e=n.lastBaseUpdate,e===null?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function Wi(e,t,n,r){var i=e.updateQueue;Ft=!1;var o=i.firstBaseUpdate,a=i.lastBaseUpdate,l=i.shared.pending;if(l!==null){i.shared.pending=null;var u=l,s=u.next;u.next=null,a===null?o=s:a.next=s,a=u;var c=e.alternate;c!==null&&(c=c.updateQueue,l=c.lastBaseUpdate,l!==a&&(l===null?c.firstBaseUpdate=s:l.next=s,c.lastBaseUpdate=u))}if(o!==null){var d=i.baseState;a=0,c=s=u=null,l=o;do{var f=l.lane,v=l.eventTime;if((r&f)===f){c!==null&&(c=c.next={eventTime:v,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,y=l;switch(f=t,v=n,y.tag){case 1:if(h=y.payload,typeof h=="function"){d=h.call(v,d,f);break e}d=h;break e;case 3:h.flags=h.flags&-65537|128;case 0:if(h=y.payload,f=typeof h=="function"?h.call(v,d,f):h,f==null)break e;d=Z({},d,f);break e;case 2:Ft=!0}}l.callback!==null&&l.lane!==0&&(e.flags|=64,f=i.effects,f===null?i.effects=[l]:f.push(l))}else v={eventTime:v,lane:f,tag:l.tag,payload:l.payload,callback:l.callback,next:null},c===null?(s=c=v,u=d):c=c.next=v,a|=f;if(l=l.next,l===null){if(l=i.shared.pending,l===null)break;f=l,l=f.next,f.next=null,i.lastBaseUpdate=f,i.shared.pending=null}}while(1);if(c===null&&(u=d),i.baseState=u,i.firstBaseUpdate=s,i.lastBaseUpdate=c,t=i.shared.interleaved,t!==null){i=t;do a|=i.lane,i=i.next;while(i!==t)}else o===null&&(i.shared.lanes=0);rn|=a,e.lanes=a,e.memoizedState=d}}function qc(e,t,n){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var r=e[t],i=r.callback;if(i!==null){if(r.callback=null,r=n,typeof i!="function")throw Error(P(191,i));i.call(r)}}}var bc=new xs.Component().refs;function vl(e,t,n,r){t=e.memoizedState,n=n(r,t),n=n==null?t:Z({},t,n),e.memoizedState=n,e.lanes===0&&(e.updateQueue.baseState=n)}var Ki={isMounted:function(e){return(e=e._reactInternals)?Zt(e)===e:!1},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=Ee(),i=$t(e),o=gt(r,i);o.payload=t,n!=null&&(o.callback=n),zt(e,o),t=He(e,i,r),t!==null&&Hi(t,e,i)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=Ee(),i=$t(e),o=gt(r,i);o.tag=1,o.payload=t,n!=null&&(o.callback=n),zt(e,o),t=He(e,i,r),t!==null&&Hi(t,e,i)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=Ee(),r=$t(e),i=gt(n,r);i.tag=2,t!=null&&(i.callback=t),zt(e,i),t=He(e,r,n),t!==null&&Hi(t,e,r)}};function ef(e,t,n,r,i,o,a){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,o,a):t.prototype&&t.prototype.isPureReactComponent?!yr(n,r)||!yr(i,o):!0}function tf(e,t,n){var r=!1,i=Nt,o=t.contextType;return typeof o=="object"&&o!==null?o=ze(o):(i=ke(t)?qt:ve.current,r=t.contextTypes,o=(r=r!=null)?Vn(e,i):Nt),t=new t(n,o),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Ki,e.stateNode=t,t._reactInternals=e,r&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=i,e.__reactInternalMemoizedMaskedChildContext=o),t}function nf(e,t,n,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(n,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&Ki.enqueueReplaceState(t,t.state,null)}function ml(e,t,n,r){var i=e.stateNode;i.props=n,i.state=e.memoizedState,i.refs=bc,pl(e);var o=t.contextType;typeof o=="object"&&o!==null?i.context=ze(o):(o=ke(t)?qt:ve.current,i.context=Vn(e,o)),i.state=e.memoizedState,o=t.getDerivedStateFromProps,typeof o=="function"&&(vl(e,t,o,n),i.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof i.getSnapshotBeforeUpdate=="function"||typeof i.UNSAFE_componentWillMount!="function"&&typeof i.componentWillMount!="function"||(t=i.state,typeof i.componentWillMount=="function"&&i.componentWillMount(),typeof i.UNSAFE_componentWillMount=="function"&&i.UNSAFE_componentWillMount(),t!==i.state&&Ki.enqueueReplaceState(i,i.state,null),Wi(e,n,i,r),i.state=e.memoizedState),typeof i.componentDidMount=="function"&&(e.flags|=4194308)}var An=[],Dn=0,Qi=null,Gi=0,je=[],Ue=0,bt=null,yt=1,St="";function en(e,t){An[Dn++]=Gi,An[Dn++]=Qi,Qi=e,Gi=t}function rf(e,t,n){je[Ue++]=yt,je[Ue++]=St,je[Ue++]=bt,bt=e;var r=yt;e=St;var i=32-Ge(r)-1;r&=~(1<<i),n+=1;var o=32-Ge(t)+i;if(30<o){var a=i-i%5;o=(r&(1<<a)-1).toString(32),r>>=a,i-=a,yt=1<<32-Ge(t)+i|n<<i|r,St=o+e}else yt=1<<o|n<<i|r,St=e}function hl(e){e.return!==null&&(en(e,1),rf(e,1,0))}function gl(e){for(;e===Qi;)Qi=An[--Dn],An[Dn]=null,Gi=An[--Dn],An[Dn]=null;for(;e===bt;)bt=je[--Ue],je[Ue]=null,St=je[--Ue],je[Ue]=null,yt=je[--Ue],je[Ue]=null}var Ne=null,Le=null,X=!1,Je=null;function of(e,t){var n=We(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,t=e.deletions,t===null?(e.deletions=[n],e.flags|=16):t.push(n)}function af(e,t){switch(e.tag){case 5:var n=e.type;return t=t.nodeType!==1||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,Ne=e,Le=vt(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,Ne=e,Le=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(n=bt!==null?{id:yt,overflow:St}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},n=We(18,null,null,0),n.stateNode=t,n.return=e,e.child=n,Ne=e,Le=null,!0):!1;default:return!1}}function yl(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Sl(e){if(X){var t=Le;if(t){var n=t;if(!af(e,t)){if(yl(e))throw Error(P(418));t=vt(n.nextSibling);var r=Ne;t&&af(e,t)?of(r,n):(e.flags=e.flags&-4097|2,X=!1,Ne=e)}}else{if(yl(e))throw Error(P(418));e.flags=e.flags&-4097|2,X=!1,Ne=e}}}function lf(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;Ne=e}function Tr(e){if(e!==Ne)return!1;if(!X)return lf(e),X=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!rl(e.type,e.memoizedProps)),t&&(t=Le)){if(yl(e)){for(e=Le;e;)e=vt(e.nextSibling);throw Error(P(418))}for(;t;)of(e,t),t=vt(t.nextSibling)}if(lf(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(P(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var n=e.data;if(n==="/$"){if(t===0){Le=vt(e.nextSibling);break e}t--}else n!=="$"&&n!=="$!"&&n!=="$?"||t++}e=e.nextSibling}Le=null}}else Le=Ne?vt(e.stateNode.nextSibling):null;return!0}function On(){Le=Ne=null,X=!1}function wl(e){Je===null?Je=[e]:Je.push(e)}function kr(e,t,n){if(e=n.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(n._owner){if(n=n._owner,n){if(n.tag!==1)throw Error(P(309));var r=n.stateNode}if(!r)throw Error(P(147,e));var i=r,o=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===o?t.ref:(t=function(a){var l=i.refs;l===bc&&(l=i.refs={}),a===null?delete l[o]:l[o]=a},t._stringRef=o,t)}if(typeof e!="string")throw Error(P(284));if(!n._owner)throw Error(P(290,e))}return e}function Yi(e,t){throw e=Object.prototype.toString.call(t),Error(P(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function uf(e){var t=e._init;return t(e._payload)}function sf(e){function t(m,p){if(e){var g=m.deletions;g===null?(m.deletions=[p],m.flags|=16):g.push(p)}}function n(m,p){if(!e)return null;for(;p!==null;)t(m,p),p=p.sibling;return null}function r(m,p){for(m=new Map;p!==null;)p.key!==null?m.set(p.key,p):m.set(p.index,p),p=p.sibling;return m}function i(m,p){return m=Wt(m,p),m.index=0,m.sibling=null,m}function o(m,p,g){return m.index=g,e?(g=m.alternate,g!==null?(g=g.index,g<p?(m.flags|=2,p):g):(m.flags|=2,p)):(m.flags|=1048576,p)}function a(m){return e&&m.alternate===null&&(m.flags|=2),m}function l(m,p,g,S){return p===null||p.tag!==6?(p=tu(g,m.mode,S),p.return=m,p):(p=i(p,g),p.return=m,p)}function u(m,p,g,S){var w=g.type;return w===hn?c(m,p,g.props.children,S,g.key):p!==null&&(p.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===kt&&uf(w)===p.type)?(S=i(p,g.props),S.ref=kr(m,p,g),S.return=m,S):(S=ho(g.type,g.key,g.props,null,m.mode,S),S.ref=kr(m,p,g),S.return=m,S)}function s(m,p,g,S){return p===null||p.tag!==4||p.stateNode.containerInfo!==g.containerInfo||p.stateNode.implementation!==g.implementation?(p=nu(g,m.mode,S),p.return=m,p):(p=i(p,g.children||[]),p.return=m,p)}function c(m,p,g,S,w){return p===null||p.tag!==7?(p=un(g,m.mode,S,w),p.return=m,p):(p=i(p,g),p.return=m,p)}function d(m,p,g){if(typeof p=="string"&&p!==""||typeof p=="number")return p=tu(""+p,m.mode,g),p.return=m,p;if(typeof p=="object"&&p!==null){switch(p.$$typeof){case fi:return g=ho(p.type,p.key,p.props,null,m.mode,g),g.ref=kr(m,null,p),g.return=m,g;case mn:return p=nu(p,m.mode,g),p.return=m,p;case kt:var S=p._init;return d(m,S(p._payload),g)}if(er(p)||qn(p))return p=un(p,m.mode,g,null),p.return=m,p;Yi(m,p)}return null}function f(m,p,g,S){var w=p!==null?p.key:null;if(typeof g=="string"&&g!==""||typeof g=="number")return w!==null?null:l(m,p,""+g,S);if(typeof g=="object"&&g!==null){switch(g.$$typeof){case fi:return g.key===w?u(m,p,g,S):null;case mn:return g.key===w?s(m,p,g,S):null;case kt:return w=g._init,f(m,p,w(g._payload),S)}if(er(g)||qn(g))return w!==null?null:c(m,p,g,S,null);Yi(m,g)}return null}function v(m,p,g,S,w){if(typeof S=="string"&&S!==""||typeof S=="number")return m=m.get(g)||null,l(p,m,""+S,w);if(typeof S=="object"&&S!==null){switch(S.$$typeof){case fi:return m=m.get(S.key===null?g:S.key)||null,u(p,m,S,w);case mn:return m=m.get(S.key===null?g:S.key)||null,s(p,m,S,w);case kt:var T=S._init;return v(m,p,g,T(S._payload),w)}if(er(S)||qn(S))return m=m.get(g)||null,c(p,m,S,w,null);Yi(p,S)}return null}function h(m,p,g,S){for(var w=null,T=null,C=p,E=p=0,R=null;C!==null&&E<g.length;E++){C.index>E?(R=C,C=null):R=C.sibling;var A=f(m,C,g[E],S);if(A===null){C===null&&(C=R);break}e&&C&&A.alternate===null&&t(m,C),p=o(A,p,E),T===null?w=A:T.sibling=A,T=A,C=R}if(E===g.length)return n(m,C),X&&en(m,E),w;if(C===null){for(;E<g.length;E++)C=d(m,g[E],S),C!==null&&(p=o(C,p,E),T===null?w=C:T.sibling=C,T=C);return X&&en(m,E),w}for(C=r(m,C);E<g.length;E++)R=v(C,m,E,g[E],S),R!==null&&(e&&R.alternate!==null&&C.delete(R.key===null?E:R.key),p=o(R,p,E),T===null?w=R:T.sibling=R,T=R);return e&&C.forEach(function($){return t(m,$)}),X&&en(m,E),w}function y(m,p,g,S){var w=qn(g);if(typeof w!="function")throw Error(P(150));if(g=w.call(g),g==null)throw Error(P(151));for(var T=w=null,C=p,E=p=0,R=null,A=g.next();C!==null&&!A.done;E++,A=g.next()){C.index>E?(R=C,C=null):R=C.sibling;var $=f(m,C,A.value,S);if($===null){C===null&&(C=R);break}e&&C&&$.alternate===null&&t(m,C),p=o($,p,E),T===null?w=$:T.sibling=$,T=$,C=R}if(A.done)return n(m,C),X&&en(m,E),w;if(C===null){for(;!A.done;E++,A=g.next())A=d(m,A.value,S),A!==null&&(p=o(A,p,E),T===null?w=A:T.sibling=A,T=A);return X&&en(m,E),w}for(C=r(m,C);!A.done;E++,A=g.next())A=v(C,m,E,A.value,S),A!==null&&(e&&A.alternate!==null&&C.delete(A.key===null?E:A.key),p=o(A,p,E),T===null?w=A:T.sibling=A,T=A);return e&&C.forEach(function(ce){return t(m,ce)}),X&&en(m,E),w}function x(m,p,g,S){if(typeof g=="object"&&g!==null&&g.type===hn&&g.key===null&&(g=g.props.children),typeof g=="object"&&g!==null){switch(g.$$typeof){case fi:e:{for(var w=g.key,T=p;T!==null;){if(T.key===w){if(w=g.type,w===hn){if(T.tag===7){n(m,T.sibling),p=i(T,g.props.children),p.return=m,m=p;break e}}else if(T.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===kt&&uf(w)===T.type){n(m,T.sibling),p=i(T,g.props),p.ref=kr(m,T,g),p.return=m,m=p;break e}n(m,T);break}else t(m,T);T=T.sibling}g.type===hn?(p=un(g.props.children,m.mode,S,g.key),p.return=m,m=p):(S=ho(g.type,g.key,g.props,null,m.mode,S),S.ref=kr(m,p,g),S.return=m,m=S)}return a(m);case mn:e:{for(T=g.key;p!==null;){if(p.key===T)if(p.tag===4&&p.stateNode.containerInfo===g.containerInfo&&p.stateNode.implementation===g.implementation){n(m,p.sibling),p=i(p,g.children||[]),p.return=m,m=p;break e}else{n(m,p);break}else t(m,p);p=p.sibling}p=nu(g,m.mode,S),p.return=m,m=p}return a(m);case kt:return T=g._init,x(m,p,T(g._payload),S)}if(er(g))return h(m,p,g,S);if(qn(g))return y(m,p,g,S);Yi(m,g)}return typeof g=="string"&&g!==""||typeof g=="number"?(g=""+g,p!==null&&p.tag===6?(n(m,p.sibling),p=i(p,g),p.return=m,m=p):(n(m,p),p=tu(g,m.mode,S),p.return=m,m=p),a(m)):n(m,p)}return x}var Nn=sf(!0),cf=sf(!1),Lr={},ot=Ot(Lr),_r=Ot(Lr),Vr=Ot(Lr);function tn(e){if(e===Lr)throw Error(P(174));return e}function xl(e,t){switch(W(Vr,t),W(_r,e),W(ot,Lr),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:xa(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=xa(t,e)}Y(ot),W(ot,t)}function In(){Y(ot),Y(_r),Y(Vr)}function ff(e){tn(Vr.current);var t=tn(ot.current),n=xa(t,e.type);t!==n&&(W(_r,e),W(ot,n))}function El(e){_r.current===e&&(Y(ot),Y(_r))}var J=Ot(0);function Xi(e){for(var t=e;t!==null;){if(t.tag===13){var n=t.memoizedState;if(n!==null&&(n=n.dehydrated,n===null||n.data==="$?"||n.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if((t.flags&128)!==0)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Cl=[];function Pl(){for(var e=0;e<Cl.length;e++)Cl[e]._workInProgressVersionPrimary=null;Cl.length=0}var Zi=pt.ReactCurrentDispatcher,Tl=pt.ReactCurrentBatchConfig,nn=0,q=null,ae=null,se=null,Ji=!1,Mr=!1,Rr=0,Xh=0;function me(){throw Error(P(321))}function kl(e,t){if(t===null)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Ye(e[n],t[n]))return!1;return!0}function Ll(e,t,n,r,i,o){if(nn=o,q=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Zi.current=e===null||e.memoizedState===null?bh:e0,e=n(r,i),Mr){o=0;do{if(Mr=!1,Rr=0,25<=o)throw Error(P(301));o+=1,se=ae=null,t.updateQueue=null,Zi.current=t0,e=n(r,i)}while(Mr)}if(Zi.current=eo,t=ae!==null&&ae.next!==null,nn=0,se=ae=q=null,Ji=!1,t)throw Error(P(300));return e}function _l(){var e=Rr!==0;return Rr=0,e}function at(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return se===null?q.memoizedState=se=e:se=se.next=e,se}function Be(){if(ae===null){var e=q.alternate;e=e!==null?e.memoizedState:null}else e=ae.next;var t=se===null?q.memoizedState:se.next;if(t!==null)se=t,ae=e;else{if(e===null)throw Error(P(310));ae=e,e={memoizedState:ae.memoizedState,baseState:ae.baseState,baseQueue:ae.baseQueue,queue:ae.queue,next:null},se===null?q.memoizedState=se=e:se=se.next=e}return se}function Ar(e,t){return typeof t=="function"?t(e):t}function Vl(e){var t=Be(),n=t.queue;if(n===null)throw Error(P(311));n.lastRenderedReducer=e;var r=ae,i=r.baseQueue,o=n.pending;if(o!==null){if(i!==null){var a=i.next;i.next=o.next,o.next=a}r.baseQueue=i=o,n.pending=null}if(i!==null){o=i.next,r=r.baseState;var l=a=null,u=null,s=o;do{var c=s.lane;if((nn&c)===c)u!==null&&(u=u.next={lane:0,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null}),r=s.hasEagerState?s.eagerState:e(r,s.action);else{var d={lane:c,action:s.action,hasEagerState:s.hasEagerState,eagerState:s.eagerState,next:null};u===null?(l=u=d,a=r):u=u.next=d,q.lanes|=c,rn|=c}s=s.next}while(s!==null&&s!==o);u===null?a=r:u.next=l,Ye(r,t.memoizedState)||(_e=!0),t.memoizedState=r,t.baseState=a,t.baseQueue=u,n.lastRenderedState=r}if(e=n.interleaved,e!==null){i=e;do o=i.lane,q.lanes|=o,rn|=o,i=i.next;while(i!==e)}else i===null&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ml(e){var t=Be(),n=t.queue;if(n===null)throw Error(P(311));n.lastRenderedReducer=e;var r=n.dispatch,i=n.pending,o=t.memoizedState;if(i!==null){n.pending=null;var a=i=i.next;do o=e(o,a.action),a=a.next;while(a!==i);Ye(o,t.memoizedState)||(_e=!0),t.memoizedState=o,t.baseQueue===null&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function df(){}function pf(e,t){var n=q,r=Be(),i=t(),o=!Ye(r.memoizedState,i);if(o&&(r.memoizedState=i,_e=!0),r=r.queue,Rl(hf.bind(null,n,r,e),[e]),r.getSnapshot!==t||o||se!==null&&se.memoizedState.tag&1){if(n.flags|=2048,Dr(9,mf.bind(null,n,r,i,t),void 0,null),le===null)throw Error(P(349));(nn&30)!==0||vf(n,t,i)}return i}function vf(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},t=q.updateQueue,t===null?(t={lastEffect:null,stores:null},q.updateQueue=t,t.stores=[e]):(n=t.stores,n===null?t.stores=[e]:n.push(e))}function mf(e,t,n,r){t.value=n,t.getSnapshot=r,gf(t)&&He(e,1,-1)}function hf(e,t,n){return n(function(){gf(t)&&He(e,1,-1)})}function gf(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!Ye(e,n)}catch{return!0}}function yf(e){var t=at();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ar,lastRenderedState:e},t.queue=e,e=e.dispatch=qh.bind(null,q,e),[t.memoizedState,e]}function Dr(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},t=q.updateQueue,t===null?(t={lastEffect:null,stores:null},q.updateQueue=t,t.lastEffect=e.next=e):(n=t.lastEffect,n===null?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e)),e}function Sf(){return Be().memoizedState}function qi(e,t,n,r){var i=at();q.flags|=e,i.memoizedState=Dr(1|t,n,void 0,r===void 0?null:r)}function bi(e,t,n,r){var i=Be();r=r===void 0?null:r;var o=void 0;if(ae!==null){var a=ae.memoizedState;if(o=a.destroy,r!==null&&kl(r,a.deps)){i.memoizedState=Dr(t,n,o,r);return}}q.flags|=e,i.memoizedState=Dr(1|t,n,o,r)}function wf(e,t){return qi(8390656,8,e,t)}function Rl(e,t){return bi(2048,8,e,t)}function xf(e,t){return bi(4,2,e,t)}function Ef(e,t){return bi(4,4,e,t)}function Cf(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function Pf(e,t,n){return n=n!=null?n.concat([e]):null,bi(4,4,Cf.bind(null,t,e),n)}function Al(){}function Tf(e,t){var n=Be();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&kl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function kf(e,t){var n=Be();t=t===void 0?null:t;var r=n.memoizedState;return r!==null&&t!==null&&kl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Lf(e,t,n){return(nn&21)===0?(e.baseState&&(e.baseState=!1,_e=!0),e.memoizedState=n):(Ye(n,t)||(n=tc(),q.lanes|=n,rn|=n,e.baseState=!0),t)}function Zh(e,t){var n=B;B=n!==0&&4>n?n:4,e(!0);var r=Tl.transition;Tl.transition={};try{e(!1),t()}finally{B=n,Tl.transition=r}}function _f(){return Be().memoizedState}function Jh(e,t,n){var r=$t(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Vf(e)?Mf(t,n):(Rf(e,t,n),n=Ee(),e=He(e,r,n),e!==null&&Af(e,t,r))}function qh(e,t,n){var r=$t(e),i={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Vf(e))Mf(t,i);else{Rf(e,t,i);var o=e.alternate;if(e.lanes===0&&(o===null||o.lanes===0)&&(o=t.lastRenderedReducer,o!==null))try{var a=t.lastRenderedState,l=o(a,n);if(i.hasEagerState=!0,i.eagerState=l,Ye(l,a))return}catch{}finally{}n=Ee(),e=He(e,r,n),e!==null&&Af(e,t,r)}}function Vf(e){var t=e.alternate;return e===q||t!==null&&t===q}function Mf(e,t){Mr=Ji=!0;var n=e.pending;n===null?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function Rf(e,t,n){dd(e)?(e=t.interleaved,e===null?(n.next=n,Ze===null?Ze=[t]:Ze.push(t)):(n.next=e.next,e.next=n),t.interleaved=n):(e=t.pending,e===null?n.next=n:(n.next=e.next,e.next=n),t.pending=n)}function Af(e,t,n){if((n&4194240)!==0){var r=t.lanes;r&=e.pendingLanes,n|=r,t.lanes=n,Da(e,n)}}var eo={readContext:ze,useCallback:me,useContext:me,useEffect:me,useImperativeHandle:me,useInsertionEffect:me,useLayoutEffect:me,useMemo:me,useReducer:me,useRef:me,useState:me,useDebugValue:me,useDeferredValue:me,useTransition:me,useMutableSource:me,useSyncExternalStore:me,useId:me,unstable_isNewReconciler:!1},bh={readContext:ze,useCallback:function(e,t){return at().memoizedState=[e,t===void 0?null:t],e},useContext:ze,useEffect:wf,useImperativeHandle:function(e,t,n){return n=n!=null?n.concat([e]):null,qi(4194308,4,Cf.bind(null,t,e),n)},useLayoutEffect:function(e,t){return qi(4194308,4,e,t)},useInsertionEffect:function(e,t){return qi(4,2,e,t)},useMemo:function(e,t){var n=at();return t=t===void 0?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=at();return t=n!==void 0?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Jh.bind(null,q,e),[r.memoizedState,e]},useRef:function(e){var t=at();return e={current:e},t.memoizedState=e},useState:yf,useDebugValue:Al,useDeferredValue:function(e){return at().memoizedState=e},useTransition:function(){var e=yf(!1),t=e[0];return e=Zh.bind(null,e[1]),at().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=q,i=at();if(X){if(n===void 0)throw Error(P(407));n=n()}else{if(n=t(),le===null)throw Error(P(349));(nn&30)!==0||vf(r,t,n)}i.memoizedState=n;var o={value:n,getSnapshot:t};return i.queue=o,wf(hf.bind(null,r,o,e),[e]),r.flags|=2048,Dr(9,mf.bind(null,r,o,n,t),void 0,null),n},useId:function(){var e=at(),t=le.identifierPrefix;if(X){var n=St,r=yt;n=(r&~(1<<32-Ge(r)-1)).toString(32)+n,t=":"+t+"R"+n,n=Rr++,0<n&&(t+="H"+n.toString(32)),t+=":"}else n=Xh++,t=":"+t+"r"+n.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},e0={readContext:ze,useCallback:Tf,useContext:ze,useEffect:Rl,useImperativeHandle:Pf,useInsertionEffect:xf,useLayoutEffect:Ef,useMemo:kf,useReducer:Vl,useRef:Sf,useState:function(){return Vl(Ar)},useDebugValue:Al,useDeferredValue:function(e){var t=Be();return Lf(t,ae.memoizedState,e)},useTransition:function(){var e=Vl(Ar)[0],t=Be().memoizedState;return[e,t]},useMutableSource:df,useSyncExternalStore:pf,useId:_f,unstable_isNewReconciler:!1},t0={readContext:ze,useCallback:Tf,useContext:ze,useEffect:Rl,useImperativeHandle:Pf,useInsertionEffect:xf,useLayoutEffect:Ef,useMemo:kf,useReducer:Ml,useRef:Sf,useState:function(){return Ml(Ar)},useDebugValue:Al,useDeferredValue:function(e){var t=Be();return ae===null?t.memoizedState=e:Lf(t,ae.memoizedState,e)},useTransition:function(){var e=Ml(Ar)[0],t=Be().memoizedState;return[e,t]},useMutableSource:df,useSyncExternalStore:pf,useId:_f,unstable_isNewReconciler:!1};function Dl(e,t){try{var n="",r=t;do n+=Vm(r),r=r.return;while(r);var i=n}catch(o){i=`
Error generating stack: `+o.message+`
`+o.stack}return{value:e,source:t,stack:i}}function Ol(e,t){try{console.error(t.value)}catch(n){setTimeout(function(){throw n})}}var n0=typeof WeakMap=="function"?WeakMap:Map;function Df(e,t,n){n=gt(-1,n),n.tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){uo||(uo=!0,Gl=r),Ol(e,t)},n}function Of(e,t,n){n=gt(-1,n),n.tag=3;var r=e.type.getDerivedStateFromError;if(typeof r=="function"){var i=t.value;n.payload=function(){return r(i)},n.callback=function(){Ol(e,t)}}var o=e.stateNode;return o!==null&&typeof o.componentDidCatch=="function"&&(n.callback=function(){Ol(e,t),typeof r!="function"&&(Ut===null?Ut=new Set([this]):Ut.add(this));var a=t.stack;this.componentDidCatch(t.value,{componentStack:a!==null?a:""})}),n}function Nf(e,t,n){var r=e.pingCache;if(r===null){r=e.pingCache=new n0;var i=new Set;r.set(t,i)}else i=r.get(t),i===void 0&&(i=new Set,r.set(t,i));i.has(n)||(i.add(n),e=m0.bind(null,e,t,n),t.then(e,e))}function If(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function Ff(e,t,n,r,i){return(e.mode&1)===0?(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,n.tag===1&&(n.alternate===null?n.tag=17:(t=gt(-1,1),t.tag=2,zt(n,t))),n.lanes|=1),e):(e.flags|=65536,e.lanes=i,e)}var zf,Nl,jf,Uf;zf=function(e,t){for(var n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break;for(;n.sibling===null;){if(n.return===null||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},Nl=function(){},jf=function(e,t,n,r){var i=e.memoizedProps;if(i!==r){e=t.stateNode,tn(ot.current);var o=null;switch(n){case"input":i=ga(e,i),r=ga(e,r),o=[];break;case"select":i=Z({},i,{value:void 0}),r=Z({},r,{value:void 0}),o=[];break;case"textarea":i=wa(e,i),r=wa(e,r),o=[];break;default:typeof i.onClick!="function"&&typeof r.onClick=="function"&&(e.onclick=Ii)}Ea(n,r);var a;n=null;for(s in i)if(!r.hasOwnProperty(s)&&i.hasOwnProperty(s)&&i[s]!=null)if(s==="style"){var l=i[s];for(a in l)l.hasOwnProperty(a)&&(n||(n={}),n[a]="")}else s!=="dangerouslySetInnerHTML"&&s!=="children"&&s!=="suppressContentEditableWarning"&&s!=="suppressHydrationWarning"&&s!=="autoFocus"&&(Jn.hasOwnProperty(s)?o||(o=[]):(o=o||[]).push(s,null));for(s in r){var u=r[s];if(l=i!=null?i[s]:void 0,r.hasOwnProperty(s)&&u!==l&&(u!=null||l!=null))if(s==="style")if(l){for(a in l)!l.hasOwnProperty(a)||u&&u.hasOwnProperty(a)||(n||(n={}),n[a]="");for(a in u)u.hasOwnProperty(a)&&l[a]!==u[a]&&(n||(n={}),n[a]=u[a])}else n||(o||(o=[]),o.push(s,n)),n=u;else s==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,l=l?l.__html:void 0,u!=null&&l!==u&&(o=o||[]).push(s,u)):s==="children"?typeof u!="string"&&typeof u!="number"||(o=o||[]).push(s,""+u):s!=="suppressContentEditableWarning"&&s!=="suppressHydrationWarning"&&(Jn.hasOwnProperty(s)?(u!=null&&s==="onScroll"&&G("scroll",e),o||l===u||(o=[])):(o=o||[]).push(s,u))}n&&(o=o||[]).push("style",n);var s=o;(t.updateQueue=s)&&(t.flags|=4)}},Uf=function(e,t,n,r){n!==r&&(t.flags|=4)};function Or(e,t){if(!X)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;t!==null;)t.alternate!==null&&(n=t),t=t.sibling;n===null?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;n!==null;)n.alternate!==null&&(r=n),n=n.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function he(e){var t=e.alternate!==null&&e.alternate.child===e.child,n=0,r=0;if(t)for(var i=e.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags&14680064,r|=i.flags&14680064,i.return=e,i=i.sibling;else for(i=e.child;i!==null;)n|=i.lanes|i.childLanes,r|=i.subtreeFlags,r|=i.flags,i.return=e,i=i.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function r0(e,t,n){var r=t.pendingProps;switch(gl(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return he(t),null;case 1:return ke(t.type)&&zi(),he(t),null;case 3:return r=t.stateNode,In(),Y(Te),Y(ve),Pl(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),(e===null||e.child===null)&&(Tr(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,Je!==null&&(Zl(Je),Je=null))),Nl(e,t),he(t),null;case 5:El(t);var i=tn(Vr.current);if(n=t.type,e!==null&&t.stateNode!=null)jf(e,t,n,r,i),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(t.stateNode===null)throw Error(P(166));return he(t),null}if(e=tn(ot.current),Tr(t)){r=t.stateNode,n=t.type;var o=t.memoizedProps;switch(r[it]=t,r[Cr]=o,e=(t.mode&1)!==0,n){case"dialog":G("cancel",r),G("close",r);break;case"iframe":case"object":case"embed":G("load",r);break;case"video":case"audio":for(i=0;i<wr.length;i++)G(wr[i],r);break;case"source":G("error",r);break;case"img":case"image":case"link":G("error",r),G("load",r);break;case"details":G("toggle",r);break;case"input":Rs(r,o),G("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!o.multiple},G("invalid",r);break;case"textarea":Os(r,o),G("invalid",r)}Ea(n,o),i=null;for(var a in o)if(o.hasOwnProperty(a)){var l=o[a];a==="children"?typeof l=="string"?r.textContent!==l&&(o.suppressHydrationWarning!==!0&&Ni(r.textContent,l,e),i=["children",l]):typeof l=="number"&&r.textContent!==""+l&&(o.suppressHydrationWarning!==!0&&Ni(r.textContent,l,e),i=["children",""+l]):Jn.hasOwnProperty(a)&&l!=null&&a==="onScroll"&&G("scroll",r)}switch(n){case"input":di(r),Ds(r,o,!0);break;case"textarea":di(r),Is(r);break;case"select":case"option":break;default:typeof o.onClick=="function"&&(r.onclick=Ii)}r=i,t.updateQueue=r,r!==null&&(t.flags|=4)}else{a=i.nodeType===9?i:i.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=Fs(n)),e==="http://www.w3.org/1999/xhtml"?n==="script"?(e=a.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof r.is=="string"?e=a.createElement(n,{is:r.is}):(e=a.createElement(n),n==="select"&&(a=e,r.multiple?a.multiple=!0:r.size&&(a.size=r.size))):e=a.createElementNS(e,n),e[it]=t,e[Cr]=r,zf(e,t,!1,!1),t.stateNode=e;e:{switch(a=Ca(n,r),n){case"dialog":G("cancel",e),G("close",e),i=r;break;case"iframe":case"object":case"embed":G("load",e),i=r;break;case"video":case"audio":for(i=0;i<wr.length;i++)G(wr[i],e);i=r;break;case"source":G("error",e),i=r;break;case"img":case"image":case"link":G("error",e),G("load",e),i=r;break;case"details":G("toggle",e),i=r;break;case"input":Rs(e,r),i=ga(e,r),G("invalid",e);break;case"option":i=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},i=Z({},r,{value:void 0}),G("invalid",e);break;case"textarea":Os(e,r),i=wa(e,r),G("invalid",e);break;default:i=r}Ea(n,i),l=i;for(o in l)if(l.hasOwnProperty(o)){var u=l[o];o==="style"?Us(e,u):o==="dangerouslySetInnerHTML"?(u=u?u.__html:void 0,u!=null&&zs(e,u)):o==="children"?typeof u=="string"?(n!=="textarea"||u!=="")&&tr(e,u):typeof u=="number"&&tr(e,""+u):o!=="suppressContentEditableWarning"&&o!=="suppressHydrationWarning"&&o!=="autoFocus"&&(Jn.hasOwnProperty(o)?u!=null&&o==="onScroll"&&G("scroll",e):u!=null&&aa(e,o,u,a))}switch(n){case"input":di(e),Ds(e,r,!1);break;case"textarea":di(e),Is(e);break;case"option":r.value!=null&&e.setAttribute("value",""+Lt(r.value));break;case"select":e.multiple=!!r.multiple,o=r.value,o!=null?gn(e,!!r.multiple,o,!1):r.defaultValue!=null&&gn(e,!!r.multiple,r.defaultValue,!0);break;default:typeof i.onClick=="function"&&(e.onclick=Ii)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return he(t),null;case 6:if(e&&t.stateNode!=null)Uf(e,t,e.memoizedProps,r);else{if(typeof r!="string"&&t.stateNode===null)throw Error(P(166));if(n=tn(Vr.current),tn(ot.current),Tr(t)){if(r=t.stateNode,n=t.memoizedProps,r[it]=t,(o=r.nodeValue!==n)&&(e=Ne,e!==null))switch(e.tag){case 3:Ni(r.nodeValue,n,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&Ni(r.nodeValue,n,(e.mode&1)!==0)}o&&(t.flags|=4)}else r=(n.nodeType===9?n:n.ownerDocument).createTextNode(r),r[it]=t,t.stateNode=r}return he(t),null;case 13:if(Y(J),r=t.memoizedState,X&&Le!==null&&(t.mode&1)!==0&&(t.flags&128)===0){for(r=Le;r;)r=vt(r.nextSibling);return On(),t.flags|=98560,t}if(r!==null&&r.dehydrated!==null){if(r=Tr(t),e===null){if(!r)throw Error(P(318));if(r=t.memoizedState,r=r!==null?r.dehydrated:null,!r)throw Error(P(317));r[it]=t}else On(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4;return he(t),null}return Je!==null&&(Zl(Je),Je=null),(t.flags&128)!==0?(t.lanes=n,t):(r=r!==null,n=!1,e===null?Tr(t):n=e.memoizedState!==null,r!==n&&r&&(t.child.flags|=8192,(t.mode&1)!==0&&(e===null||(J.current&1)!==0?ue===0&&(ue=3):bl())),t.updateQueue!==null&&(t.flags|=4),he(t),null);case 4:return In(),Nl(e,t),e===null&&xr(t.stateNode.containerInfo),he(t),null;case 10:return fl(t.type._context),he(t),null;case 17:return ke(t.type)&&zi(),he(t),null;case 19:if(Y(J),o=t.memoizedState,o===null)return he(t),null;if(r=(t.flags&128)!==0,a=o.rendering,a===null)if(r)Or(o,!1);else{if(ue!==0||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(a=Xi(e),a!==null){for(t.flags|=128,Or(o,!1),r=a.updateQueue,r!==null&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;n!==null;)o=n,e=r,o.flags&=14680066,a=o.alternate,a===null?(o.childLanes=0,o.lanes=e,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=a.childLanes,o.lanes=a.lanes,o.child=a.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=a.memoizedProps,o.memoizedState=a.memoizedState,o.updateQueue=a.updateQueue,o.type=a.type,e=a.dependencies,o.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return W(J,J.current&1|2),t.child}e=e.sibling}o.tail!==null&&re()>jn&&(t.flags|=128,r=!0,Or(o,!1),t.lanes=4194304)}else{if(!r)if(e=Xi(a),e!==null){if(t.flags|=128,r=!0,n=e.updateQueue,n!==null&&(t.updateQueue=n,t.flags|=4),Or(o,!0),o.tail===null&&o.tailMode==="hidden"&&!a.alternate&&!X)return he(t),null}else 2*re()-o.renderingStartTime>jn&&n!==1073741824&&(t.flags|=128,r=!0,Or(o,!1),t.lanes=4194304);o.isBackwards?(a.sibling=t.child,t.child=a):(n=o.last,n!==null?n.sibling=a:t.child=a,o.last=a)}return o.tail!==null?(t=o.tail,o.rendering=t,o.tail=t.sibling,o.renderingStartTime=re(),t.sibling=null,n=J.current,W(J,r?n&1|2:n&1),t):(he(t),null);case 22:case 23:return ql(),r=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==r&&(t.flags|=8192),r&&(t.mode&1)!==0?(Ie&1073741824)!==0&&(he(t),t.subtreeFlags&6&&(t.flags|=8192)):he(t),null;case 24:return null;case 25:return null}throw Error(P(156,t.tag))}var i0=pt.ReactCurrentOwner,_e=!1;function xe(e,t,n,r){t.child=e===null?cf(t,null,n,r):Nn(t,e.child,n,r)}function Bf(e,t,n,r,i){n=n.render;var o=t.ref;return Rn(t,i),r=Ll(e,t,n,r,o,i),n=_l(),e!==null&&!_e?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,wt(e,t,i)):(X&&n&&hl(t),t.flags|=1,xe(e,t,r,i),t.child)}function $f(e,t,n,r,i){if(e===null){var o=n.type;return typeof o=="function"&&!eu(o)&&o.defaultProps===void 0&&n.compare===null&&n.defaultProps===void 0?(t.tag=15,t.type=o,Hf(e,t,o,r,i)):(e=ho(n.type,null,r,t,t.mode,i),e.ref=t.ref,e.return=t,t.child=e)}if(o=e.child,(e.lanes&i)===0){var a=o.memoizedProps;if(n=n.compare,n=n!==null?n:yr,n(a,r)&&e.ref===t.ref)return wt(e,t,i)}return t.flags|=1,e=Wt(o,r),e.ref=t.ref,e.return=t,t.child=e}function Hf(e,t,n,r,i){if(e!==null){var o=e.memoizedProps;if(yr(o,r)&&e.ref===t.ref)if(_e=!1,t.pendingProps=r=o,(e.lanes&i)!==0)(e.flags&131072)!==0&&(_e=!0);else return t.lanes=e.lanes,wt(e,t,i)}return Il(e,t,n,r,i)}function Wf(e,t,n){var r=t.pendingProps,i=r.children,o=e!==null?e.memoizedState:null;if(r.mode==="hidden")if((t.mode&1)===0)t.memoizedState={baseLanes:0,cachePool:null,transitions:null},W(zn,Ie),Ie|=n;else if((n&1073741824)!==0)t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=o!==null?o.baseLanes:n,W(zn,Ie),Ie|=r;else return e=o!==null?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,W(zn,Ie),Ie|=e,null;else o!==null?(r=o.baseLanes|n,t.memoizedState=null):r=n,W(zn,Ie),Ie|=r;return xe(e,t,i,n),t.child}function Kf(e,t){var n=t.ref;(e===null&&n!==null||e!==null&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Il(e,t,n,r,i){var o=ke(n)?qt:ve.current;return o=Vn(t,o),Rn(t,i),n=Ll(e,t,n,r,o,i),r=_l(),e!==null&&!_e?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~i,wt(e,t,i)):(X&&r&&hl(t),t.flags|=1,xe(e,t,n,i),t.child)}function Qf(e,t,n,r,i){if(ke(n)){var o=!0;ji(t)}else o=!1;if(Rn(t,i),t.stateNode===null)e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2),tf(t,n,r),ml(t,n,r,i),r=!0;else if(e===null){var a=t.stateNode,l=t.memoizedProps;a.props=l;var u=a.context,s=n.contextType;typeof s=="object"&&s!==null?s=ze(s):(s=ke(n)?qt:ve.current,s=Vn(t,s));var c=n.getDerivedStateFromProps,d=typeof c=="function"||typeof a.getSnapshotBeforeUpdate=="function";d||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(l!==r||u!==s)&&nf(t,a,r,s),Ft=!1;var f=t.memoizedState;a.state=f,Wi(t,r,a,i),u=t.memoizedState,l!==r||f!==u||Te.current||Ft?(typeof c=="function"&&(vl(t,n,c,r),u=t.memoizedState),(l=Ft||ef(t,n,l,r,f,u,s))?(d||typeof a.UNSAFE_componentWillMount!="function"&&typeof a.componentWillMount!="function"||(typeof a.componentWillMount=="function"&&a.componentWillMount(),typeof a.UNSAFE_componentWillMount=="function"&&a.UNSAFE_componentWillMount()),typeof a.componentDidMount=="function"&&(t.flags|=4194308)):(typeof a.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=u),a.props=r,a.state=u,a.context=s,r=l):(typeof a.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{a=t.stateNode,Zc(e,t),l=t.memoizedProps,s=t.type===t.elementType?l:Xe(t.type,l),a.props=s,d=t.pendingProps,f=a.context,u=n.contextType,typeof u=="object"&&u!==null?u=ze(u):(u=ke(n)?qt:ve.current,u=Vn(t,u));var v=n.getDerivedStateFromProps;(c=typeof v=="function"||typeof a.getSnapshotBeforeUpdate=="function")||typeof a.UNSAFE_componentWillReceiveProps!="function"&&typeof a.componentWillReceiveProps!="function"||(l!==d||f!==u)&&nf(t,a,r,u),Ft=!1,f=t.memoizedState,a.state=f,Wi(t,r,a,i);var h=t.memoizedState;l!==d||f!==h||Te.current||Ft?(typeof v=="function"&&(vl(t,n,v,r),h=t.memoizedState),(s=Ft||ef(t,n,s,r,f,h,u)||!1)?(c||typeof a.UNSAFE_componentWillUpdate!="function"&&typeof a.componentWillUpdate!="function"||(typeof a.componentWillUpdate=="function"&&a.componentWillUpdate(r,h,u),typeof a.UNSAFE_componentWillUpdate=="function"&&a.UNSAFE_componentWillUpdate(r,h,u)),typeof a.componentDidUpdate=="function"&&(t.flags|=4),typeof a.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof a.componentDidUpdate!="function"||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=h),a.props=r,a.state=h,a.context=u,r=s):(typeof a.componentDidUpdate!="function"||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=4),typeof a.getSnapshotBeforeUpdate!="function"||l===e.memoizedProps&&f===e.memoizedState||(t.flags|=1024),r=!1)}return Fl(e,t,n,r,o,i)}function Fl(e,t,n,r,i,o){Kf(e,t);var a=(t.flags&128)!==0;if(!r&&!a)return i&&Yc(t,n,!1),wt(e,t,o);r=t.stateNode,i0.current=t;var l=a&&typeof n.getDerivedStateFromError!="function"?null:r.render();return t.flags|=1,e!==null&&a?(t.child=Nn(t,e.child,null,o),t.child=Nn(t,null,l,o)):xe(e,t,l,o),t.memoizedState=r.state,i&&Yc(t,n,!0),t.child}function Gf(e){var t=e.stateNode;t.pendingContext?Qc(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Qc(e,t.context,!1),xl(e,t.containerInfo)}function Yf(e,t,n,r,i){return On(),wl(i),t.flags|=256,xe(e,t,n,r),t.child}var to={dehydrated:null,treeContext:null,retryLane:0};function no(e){return{baseLanes:e,cachePool:null,transitions:null}}function Xf(e,t){return{baseLanes:e.baseLanes|t,cachePool:null,transitions:e.transitions}}function Zf(e,t,n){var r=t.pendingProps,i=J.current,o=!1,a=(t.flags&128)!==0,l;if((l=a)||(l=e!==null&&e.memoizedState===null?!1:(i&2)!==0),l?(o=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(i|=1),W(J,i&1),e===null)return Sl(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?((t.mode&1)===0?t.lanes=1:e.data==="$!"?t.lanes=8:t.lanes=1073741824,null):(i=r.children,e=r.fallback,o?(r=t.mode,o=t.child,i={mode:"hidden",children:i},(r&1)===0&&o!==null?(o.childLanes=0,o.pendingProps=i):o=go(i,r,0,null),e=un(e,r,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=no(n),t.memoizedState=to,e):zl(t,i));if(i=e.memoizedState,i!==null){if(l=i.dehydrated,l!==null){if(a)return t.flags&256?(t.flags&=-257,ro(e,t,n,Error(P(422)))):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(o=r.fallback,i=t.mode,r=go({mode:"visible",children:r.children},i,0,null),o=un(o,i,n,null),o.flags|=2,r.return=t,o.return=t,r.sibling=o,t.child=r,(t.mode&1)!==0&&Nn(t,e.child,null,n),t.child.memoizedState=no(n),t.memoizedState=to,o);if((t.mode&1)===0)t=ro(e,t,n,null);else if(l.data==="$!")t=ro(e,t,n,Error(P(419)));else if(r=(n&e.childLanes)!==0,_e||r){if(r=le,r!==null){switch(n&-n){case 4:o=2;break;case 16:o=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:o=32;break;case 536870912:o=268435456;break;default:o=0}r=(o&(r.suspendedLanes|n))!==0?0:o,r!==0&&r!==i.retryLane&&(i.retryLane=r,He(e,r,-1))}bl(),t=ro(e,t,n,Error(P(421)))}else l.data==="$?"?(t.flags|=128,t.child=e.child,t=h0.bind(null,e),l._reactRetry=t,t=null):(n=i.treeContext,Le=vt(l.nextSibling),Ne=t,X=!0,Je=null,n!==null&&(je[Ue++]=yt,je[Ue++]=St,je[Ue++]=bt,yt=n.id,St=n.overflow,bt=t),t=zl(t,t.pendingProps.children),t.flags|=4096);return t}return o?(r=qf(e,t,r.children,r.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=i===null?no(n):Xf(i,n),o.childLanes=e.childLanes&~n,t.memoizedState=to,r):(n=Jf(e,t,r.children,n),t.memoizedState=null,n)}return o?(r=qf(e,t,r.children,r.fallback,n),o=t.child,i=e.child.memoizedState,o.memoizedState=i===null?no(n):Xf(i,n),o.childLanes=e.childLanes&~n,t.memoizedState=to,r):(n=Jf(e,t,r.children,n),t.memoizedState=null,n)}function zl(e,t){return t=go({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function Jf(e,t,n,r){var i=e.child;return e=i.sibling,n=Wt(i,{mode:"visible",children:n}),(t.mode&1)===0&&(n.lanes=r),n.return=t,n.sibling=null,e!==null&&(r=t.deletions,r===null?(t.deletions=[e],t.flags|=16):r.push(e)),t.child=n}function qf(e,t,n,r,i){var o=t.mode;e=e.child;var a=e.sibling,l={mode:"hidden",children:n};return(o&1)===0&&t.child!==e?(n=t.child,n.childLanes=0,n.pendingProps=l,t.deletions=null):(n=Wt(e,l),n.subtreeFlags=e.subtreeFlags&14680064),a!==null?r=Wt(a,r):(r=un(r,o,i,null),r.flags|=2),r.return=t,n.return=t,n.sibling=r,t.child=n,r}function ro(e,t,n,r){return r!==null&&wl(r),Nn(t,e.child,null,n),e=zl(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function bf(e,t,n){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),dl(e.return,t,n)}function jl(e,t,n,r,i){var o=e.memoizedState;o===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:i}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=n,o.tailMode=i)}function ed(e,t,n){var r=t.pendingProps,i=r.revealOrder,o=r.tail;if(xe(e,t,r.children,n),r=J.current,(r&2)!==0)r=r&1|2,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&bf(e,n,t);else if(e.tag===19)bf(e,n,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(W(J,r),(t.mode&1)===0)t.memoizedState=null;else switch(i){case"forwards":for(n=t.child,i=null;n!==null;)e=n.alternate,e!==null&&Xi(e)===null&&(i=n),n=n.sibling;n=i,n===null?(i=t.child,t.child=null):(i=n.sibling,n.sibling=null),jl(t,!1,i,n,o);break;case"backwards":for(n=null,i=t.child,t.child=null;i!==null;){if(e=i.alternate,e!==null&&Xi(e)===null){t.child=i;break}e=i.sibling,i.sibling=n,n=i,i=e}jl(t,!0,n,null,o);break;case"together":jl(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function wt(e,t,n){if(e!==null&&(t.dependencies=e.dependencies),rn|=t.lanes,(n&t.childLanes)===0)return null;if(e!==null&&t.child!==e.child)throw Error(P(153));if(t.child!==null){for(e=t.child,n=Wt(e,e.pendingProps),t.child=n,n.return=t;e.sibling!==null;)e=e.sibling,n=n.sibling=Wt(e,e.pendingProps),n.return=t;n.sibling=null}return t.child}function o0(e,t,n){switch(t.tag){case 3:Gf(t),On();break;case 5:ff(t);break;case 1:ke(t.type)&&ji(t);break;case 4:xl(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,i=t.memoizedProps.value;W(Bi,r._currentValue),r._currentValue=i;break;case 13:if(r=t.memoizedState,r!==null)return r.dehydrated!==null?(W(J,J.current&1),t.flags|=128,null):(n&t.child.childLanes)!==0?Zf(e,t,n):(W(J,J.current&1),e=wt(e,t,n),e!==null?e.sibling:null);W(J,J.current&1);break;case 19:if(r=(n&t.childLanes)!==0,(e.flags&128)!==0){if(r)return ed(e,t,n);t.flags|=128}if(i=t.memoizedState,i!==null&&(i.rendering=null,i.tail=null,i.lastEffect=null),W(J,J.current),r)break;return null;case 22:case 23:return t.lanes=0,Wf(e,t,n)}return wt(e,t,n)}function a0(e,t){switch(gl(t),t.tag){case 1:return ke(t.type)&&zi(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return In(),Y(Te),Y(ve),Pl(),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 5:return El(t),null;case 13:if(Y(J),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(P(340));On()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return Y(J),null;case 4:return In(),null;case 10:return fl(t.type._context),null;case 22:case 23:return ql(),null;case 24:return null;default:return null}}var io=!1,ge=!1,l0=typeof WeakSet=="function"?WeakSet:Set,M=null;function Fn(e,t){var n=e.ref;if(n!==null)if(typeof n=="function")try{n(null)}catch(r){ee(e,t,r)}else n.current=null}function Ul(e,t,n){try{n()}catch(r){ee(e,t,r)}}var td=!1;function u0(e,t){if(tl=Pi,e=Mc(),Ga(e)){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{n=(n=e.ownerDocument)&&n.defaultView||window;var r=n.getSelection&&n.getSelection();if(r&&r.rangeCount!==0){n=r.anchorNode;var i=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{n.nodeType,o.nodeType}catch{n=null;break e}var a=0,l=-1,u=-1,s=0,c=0,d=e,f=null;t:for(;;){for(var v;d!==n||i!==0&&d.nodeType!==3||(l=a+i),d!==o||r!==0&&d.nodeType!==3||(u=a+r),d.nodeType===3&&(a+=d.nodeValue.length),(v=d.firstChild)!==null;)f=d,d=v;for(;;){if(d===e)break t;if(f===n&&++s===i&&(l=a),f===o&&++c===r&&(u=a),(v=d.nextSibling)!==null)break;d=f,f=d.parentNode}d=v}n=l===-1||u===-1?null:{start:l,end:u}}else n=null}n=n||{start:0,end:0}}else n=null;for(nl={focusedElem:e,selectionRange:n},Pi=!1,M=t;M!==null;)if(t=M,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,M=e;else for(;M!==null;){t=M;try{var h=t.alternate;if((t.flags&1024)!==0)switch(t.tag){case 0:case 11:case 15:break;case 1:if(h!==null){var y=h.memoizedProps,x=h.memoizedState,m=t.stateNode,p=m.getSnapshotBeforeUpdate(t.elementType===t.type?y:Xe(t.type,y),x);m.__reactInternalSnapshotBeforeUpdate=p}break;case 3:var g=t.stateNode.containerInfo;if(g.nodeType===1)g.textContent="";else if(g.nodeType===9){var S=g.body;S!=null&&(S.textContent="")}break;case 5:case 6:case 4:case 17:break;default:throw Error(P(163))}}catch(w){ee(t,t.return,w)}if(e=t.sibling,e!==null){e.return=t.return,M=e;break}M=t.return}return h=td,td=!1,h}function Nr(e,t,n){var r=t.updateQueue;if(r=r!==null?r.lastEffect:null,r!==null){var i=r=r.next;do{if((i.tag&e)===e){var o=i.destroy;i.destroy=void 0,o!==void 0&&Ul(t,n,o)}i=i.next}while(i!==r)}}function oo(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function Bl(e){var t=e.ref;if(t!==null){var n=e.stateNode;switch(e.tag){case 5:e=n;break;default:e=n}typeof t=="function"?t(e):t.current=e}}function nd(e){var t=e.alternate;t!==null&&(e.alternate=null,nd(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[it],delete t[Cr],delete t[al],delete t[Kh],delete t[Qh])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function rd(e){return e.tag===5||e.tag===3||e.tag===4}function id(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||rd(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function $l(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.nodeType===8?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(n.nodeType===8?(t=n.parentNode,t.insertBefore(e,n)):(t=n,t.appendChild(e)),n=n._reactRootContainer,n!=null||t.onclick!==null||(t.onclick=Ii));else if(r!==4&&(e=e.child,e!==null))for($l(e,t,n),e=e.sibling;e!==null;)$l(e,t,n),e=e.sibling}function Hl(e,t,n){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(r!==4&&(e=e.child,e!==null))for(Hl(e,t,n),e=e.sibling;e!==null;)Hl(e,t,n),e=e.sibling}var de=null,qe=!1;function jt(e,t,n){for(n=n.child;n!==null;)od(e,t,n),n=n.sibling}function od(e,t,n){if(rt&&typeof rt.onCommitFiberUnmount=="function")try{rt.onCommitFiberUnmount(yi,n)}catch{}switch(n.tag){case 5:ge||Fn(n,t);case 6:var r=de,i=qe;de=null,jt(e,t,n),de=r,qe=i,de!==null&&(qe?(e=de,n=n.stateNode,e.nodeType===8?e.parentNode.removeChild(n):e.removeChild(n)):de.removeChild(n.stateNode));break;case 18:de!==null&&(qe?(e=de,n=n.stateNode,e.nodeType===8?ol(e.parentNode,n):e.nodeType===1&&ol(e,n),dr(e)):ol(de,n.stateNode));break;case 4:r=de,i=qe,de=n.stateNode.containerInfo,qe=!0,jt(e,t,n),de=r,qe=i;break;case 0:case 11:case 14:case 15:if(!ge&&(r=n.updateQueue,r!==null&&(r=r.lastEffect,r!==null))){i=r=r.next;do{var o=i,a=o.destroy;o=o.tag,a!==void 0&&((o&2)!==0||(o&4)!==0)&&Ul(n,t,a),i=i.next}while(i!==r)}jt(e,t,n);break;case 1:if(!ge&&(Fn(n,t),r=n.stateNode,typeof r.componentWillUnmount=="function"))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(l){ee(n,t,l)}jt(e,t,n);break;case 21:jt(e,t,n);break;case 22:n.mode&1?(ge=(r=ge)||n.memoizedState!==null,jt(e,t,n),ge=r):jt(e,t,n);break;default:jt(e,t,n)}}function ad(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var n=e.stateNode;n===null&&(n=e.stateNode=new l0),t.forEach(function(r){var i=g0.bind(null,e,r);n.has(r)||(n.add(r),r.then(i,i))})}}function be(e,t){var n=t.deletions;if(n!==null)for(var r=0;r<n.length;r++){var i=n[r];try{var o=e,a=t,l=a;e:for(;l!==null;){switch(l.tag){case 5:de=l.stateNode,qe=!1;break e;case 3:de=l.stateNode.containerInfo,qe=!0;break e;case 4:de=l.stateNode.containerInfo,qe=!0;break e}l=l.return}if(de===null)throw Error(P(160));od(o,a,i),de=null,qe=!1;var u=i.alternate;u!==null&&(u.return=null),i.return=null}catch(s){ee(i,t,s)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)ld(t,e),t=t.sibling}function ld(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(be(t,e),lt(e),r&4){try{Nr(3,e,e.return),oo(3,e)}catch(h){ee(e,e.return,h)}try{Nr(5,e,e.return)}catch(h){ee(e,e.return,h)}}break;case 1:be(t,e),lt(e),r&512&&n!==null&&Fn(n,n.return);break;case 5:if(be(t,e),lt(e),r&512&&n!==null&&Fn(n,n.return),e.flags&32){var i=e.stateNode;try{tr(i,"")}catch(h){ee(e,e.return,h)}}if(r&4&&(i=e.stateNode,i!=null)){var o=e.memoizedProps,a=n!==null?n.memoizedProps:o,l=e.type,u=e.updateQueue;if(e.updateQueue=null,u!==null)try{l==="input"&&o.type==="radio"&&o.name!=null&&As(i,o),Ca(l,a);var s=Ca(l,o);for(a=0;a<u.length;a+=2){var c=u[a],d=u[a+1];c==="style"?Us(i,d):c==="dangerouslySetInnerHTML"?zs(i,d):c==="children"?tr(i,d):aa(i,c,d,s)}switch(l){case"input":ya(i,o);break;case"textarea":Ns(i,o);break;case"select":var f=i._wrapperState.wasMultiple;i._wrapperState.wasMultiple=!!o.multiple;var v=o.value;v!=null?gn(i,!!o.multiple,v,!1):f!==!!o.multiple&&(o.defaultValue!=null?gn(i,!!o.multiple,o.defaultValue,!0):gn(i,!!o.multiple,o.multiple?[]:"",!1))}i[Cr]=o}catch(h){ee(e,e.return,h)}}break;case 6:if(be(t,e),lt(e),r&4){if(e.stateNode===null)throw Error(P(162));s=e.stateNode,c=e.memoizedProps;try{s.nodeValue=c}catch(h){ee(e,e.return,h)}}break;case 3:if(be(t,e),lt(e),r&4&&n!==null&&n.memoizedState.isDehydrated)try{dr(t.containerInfo)}catch(h){ee(e,e.return,h)}break;case 4:be(t,e),lt(e);break;case 13:be(t,e),lt(e),s=e.child,s.flags&8192&&s.memoizedState!==null&&(s.alternate===null||s.alternate.memoizedState===null)&&(Ql=re()),r&4&&ad(e);break;case 22:if(s=n!==null&&n.memoizedState!==null,e.mode&1?(ge=(c=ge)||s,be(t,e),ge=c):be(t,e),lt(e),r&8192){c=e.memoizedState!==null;e:for(d=null,f=e;;){if(f.tag===5){if(d===null){d=f;try{i=f.stateNode,c?(o=i.style,typeof o.setProperty=="function"?o.setProperty("display","none","important"):o.display="none"):(l=f.stateNode,u=f.memoizedProps.style,a=u!=null&&u.hasOwnProperty("display")?u.display:null,l.style.display=js("display",a))}catch(h){ee(e,e.return,h)}}}else if(f.tag===6){if(d===null)try{f.stateNode.nodeValue=c?"":f.memoizedProps}catch(h){ee(e,e.return,h)}}else if((f.tag!==22&&f.tag!==23||f.memoizedState===null||f===e)&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===e)break e;for(;f.sibling===null;){if(f.return===null||f.return===e)break e;d===f&&(d=null),f=f.return}d===f&&(d=null),f.sibling.return=f.return,f=f.sibling}if(c&&!s&&(e.mode&1)!==0)for(M=e,e=e.child;e!==null;){for(s=M=e;M!==null;){switch(c=M,d=c.child,c.tag){case 0:case 11:case 14:case 15:Nr(4,c,c.return);break;case 1:if(Fn(c,c.return),o=c.stateNode,typeof o.componentWillUnmount=="function"){f=c,v=c.return;try{i=f,o.props=i.memoizedProps,o.state=i.memoizedState,o.componentWillUnmount()}catch(h){ee(f,v,h)}}break;case 5:Fn(c,c.return);break;case 22:if(c.memoizedState!==null){cd(s);continue}}d!==null?(d.return=c,M=d):cd(s)}e=e.sibling}}break;case 19:be(t,e),lt(e),r&4&&ad(e);break;case 21:break;default:be(t,e),lt(e)}}function lt(e){var t=e.flags;if(t&2){try{e:{for(var n=e.return;n!==null;){if(rd(n)){var r=n;break e}n=n.return}throw Error(P(160))}switch(r.tag){case 5:var i=r.stateNode;r.flags&32&&(tr(i,""),r.flags&=-33);var o=id(e);Hl(e,o,i);break;case 3:case 4:var a=r.stateNode.containerInfo,l=id(e);$l(e,l,a);break;default:throw Error(P(161))}}catch(u){ee(e,e.return,u)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function s0(e,t,n){M=e,ud(e)}function ud(e,t,n){for(var r=(e.mode&1)!==0;M!==null;){var i=M,o=i.child;if(i.tag===22&&r){var a=i.memoizedState!==null||io;if(!a){var l=i.alternate,u=l!==null&&l.memoizedState!==null||ge;l=io;var s=ge;if(io=a,(ge=u)&&!s)for(M=i;M!==null;)a=M,u=a.child,a.tag===22&&a.memoizedState!==null?fd(i):u!==null?(u.return=a,M=u):fd(i);for(;o!==null;)M=o,ud(o),o=o.sibling;M=i,io=l,ge=s}sd(e)}else(i.subtreeFlags&8772)!==0&&o!==null?(o.return=i,M=o):sd(e)}}function sd(e){for(;M!==null;){var t=M;if((t.flags&8772)!==0){var n=t.alternate;try{if((t.flags&8772)!==0)switch(t.tag){case 0:case 11:case 15:ge||oo(5,t);break;case 1:var r=t.stateNode;if(t.flags&4&&!ge)if(n===null)r.componentDidMount();else{var i=t.elementType===t.type?n.memoizedProps:Xe(t.type,n.memoizedProps);r.componentDidUpdate(i,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var o=t.updateQueue;o!==null&&qc(t,o,r);break;case 3:var a=t.updateQueue;if(a!==null){if(n=null,t.child!==null)switch(t.child.tag){case 5:n=t.child.stateNode;break;case 1:n=t.child.stateNode}qc(t,a,n)}break;case 5:var l=t.stateNode;if(n===null&&t.flags&4){n=l;var u=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":u.autoFocus&&n.focus();break;case"img":u.src&&(n.src=u.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var s=t.alternate;if(s!==null){var c=s.memoizedState;if(c!==null){var d=c.dehydrated;d!==null&&dr(d)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(P(163))}ge||t.flags&512&&Bl(t)}catch(f){ee(t,t.return,f)}}if(t===e){M=null;break}if(n=t.sibling,n!==null){n.return=t.return,M=n;break}M=t.return}}function cd(e){for(;M!==null;){var t=M;if(t===e){M=null;break}var n=t.sibling;if(n!==null){n.return=t.return,M=n;break}M=t.return}}function fd(e){for(;M!==null;){var t=M;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{oo(4,t)}catch(u){ee(t,n,u)}break;case 1:var r=t.stateNode;if(typeof r.componentDidMount=="function"){var i=t.return;try{r.componentDidMount()}catch(u){ee(t,i,u)}}var o=t.return;try{Bl(t)}catch(u){ee(t,o,u)}break;case 5:var a=t.return;try{Bl(t)}catch(u){ee(t,a,u)}}}catch(u){ee(t,t.return,u)}if(t===e){M=null;break}var l=t.sibling;if(l!==null){l.return=t.return,M=l;break}M=t.return}}var c0=Math.ceil,ao=pt.ReactCurrentDispatcher,Wl=pt.ReactCurrentOwner,$e=pt.ReactCurrentBatchConfig,j=0,le=null,oe=null,pe=0,Ie=0,zn=Ot(0),ue=0,Ir=null,rn=0,lo=0,Kl=0,Fr=null,Ve=null,Ql=0,jn=1/0,xt=null,uo=!1,Gl=null,Ut=null,so=!1,Bt=null,co=0,zr=0,Yl=null,fo=-1,po=0;function Ee(){return(j&6)!==0?re():fo!==-1?fo:fo=re()}function $t(e){return(e.mode&1)===0?1:(j&2)!==0&&pe!==0?pe&-pe:Yh.transition!==null?(po===0&&(po=tc()),po):(e=B,e!==0||(e=window.event,e=e===void 0?16:cc(e.type)),e)}function He(e,t,n){if(50<zr)throw zr=0,Yl=null,Error(P(185));var r=vo(e,t);return r===null?null:(lr(r,t,n),((j&2)===0||r!==le)&&(r===le&&((j&2)===0&&(lo|=t),ue===4&&Ht(r,pe)),Me(r,n),t===1&&j===0&&(e.mode&1)===0&&(jn=re()+500,Ui&&It())),r)}function vo(e,t){e.lanes|=t;var n=e.alternate;for(n!==null&&(n.lanes|=t),n=e,e=e.return;e!==null;)e.childLanes|=t,n=e.alternate,n!==null&&(n.childLanes|=t),n=e,e=e.return;return n.tag===3?n.stateNode:null}function dd(e){return(le!==null||Ze!==null)&&(e.mode&1)!==0&&(j&2)===0}function Me(e,t){var n=e.callbackNode;Ym(e,t);var r=xi(e,e===le?pe:0);if(r===0)n!==null&&qs(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(n!=null&&qs(n),t===1)e.tag===0?Gh(vd.bind(null,e)):Xc(vd.bind(null,e)),Hh(function(){j===0&&It()}),n=null;else{switch(nc(r)){case 1:n=Ma;break;case 4:n=bs;break;case 16:n=gi;break;case 536870912:n=ec;break;default:n=gi}n=Ed(n,pd.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function pd(e,t){if(fo=-1,po=0,(j&6)!==0)throw Error(P(327));var n=e.callbackNode;if(Un()&&e.callbackNode!==n)return null;var r=xi(e,e===le?pe:0);if(r===0)return null;if((r&30)!==0||(r&e.expiredLanes)!==0||t)t=mo(e,r);else{t=r;var i=j;j|=2;var o=hd();(le!==e||pe!==t)&&(xt=null,jn=re()+500,an(e,t));do try{p0();break}catch(l){md(e,l)}while(1);cl(),ao.current=o,j=i,oe!==null?t=0:(le=null,pe=0,t=ue)}if(t!==0){if(t===2&&(i=Ra(e),i!==0&&(r=i,t=Xl(e,i))),t===1)throw n=Ir,an(e,0),Ht(e,r),Me(e,re()),n;if(t===6)Ht(e,r);else{if(i=e.current.alternate,(r&30)===0&&!f0(i)&&(t=mo(e,r),t===2&&(o=Ra(e),o!==0&&(r=o,t=Xl(e,o))),t===1))throw n=Ir,an(e,0),Ht(e,r),Me(e,re()),n;switch(e.finishedWork=i,e.finishedLanes=r,t){case 0:case 1:throw Error(P(345));case 2:ln(e,Ve,xt);break;case 3:if(Ht(e,r),(r&130023424)===r&&(t=Ql+500-re(),10<t)){if(xi(e,0)!==0)break;if(i=e.suspendedLanes,(i&r)!==r){Ee(),e.pingedLanes|=e.suspendedLanes&i;break}e.timeoutHandle=il(ln.bind(null,e,Ve,xt),t);break}ln(e,Ve,xt);break;case 4:if(Ht(e,r),(r&4194240)===r)break;for(t=e.eventTimes,i=-1;0<r;){var a=31-Ge(r);o=1<<a,a=t[a],a>i&&(i=a),r&=~o}if(r=i,r=re()-r,r=(120>r?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*c0(r/1960))-r,10<r){e.timeoutHandle=il(ln.bind(null,e,Ve,xt),r);break}ln(e,Ve,xt);break;case 5:ln(e,Ve,xt);break;default:throw Error(P(329))}}}return Me(e,re()),e.callbackNode===n?pd.bind(null,e):null}function Xl(e,t){var n=Fr;return e.current.memoizedState.isDehydrated&&(an(e,t).flags|=256),e=mo(e,t),e!==2&&(t=Ve,Ve=n,t!==null&&Zl(t)),e}function Zl(e){Ve===null?Ve=e:Ve.push.apply(Ve,e)}function f0(e){for(var t=e;;){if(t.flags&16384){var n=t.updateQueue;if(n!==null&&(n=n.stores,n!==null))for(var r=0;r<n.length;r++){var i=n[r],o=i.getSnapshot;i=i.value;try{if(!Ye(o(),i))return!1}catch{return!1}}}if(n=t.child,t.subtreeFlags&16384&&n!==null)n.return=t,t=n;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Ht(e,t){for(t&=~Kl,t&=~lo,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Ge(t),r=1<<n;e[n]=-1,t&=~r}}function vd(e){if((j&6)!==0)throw Error(P(327));Un();var t=xi(e,0);if((t&1)===0)return Me(e,re()),null;var n=mo(e,t);if(e.tag!==0&&n===2){var r=Ra(e);r!==0&&(t=r,n=Xl(e,r))}if(n===1)throw n=Ir,an(e,0),Ht(e,t),Me(e,re()),n;if(n===6)throw Error(P(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,ln(e,Ve,xt),Me(e,re()),null}function Jl(e,t){var n=j;j|=1;try{return e(t)}finally{j=n,j===0&&(jn=re()+500,Ui&&It())}}function on(e){Bt!==null&&Bt.tag===0&&(j&6)===0&&Un();var t=j;j|=1;var n=$e.transition,r=B;try{if($e.transition=null,B=1,e)return e()}finally{B=r,$e.transition=n,j=t,(j&6)===0&&It()}}function ql(){Ie=zn.current,Y(zn)}function an(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(n!==-1&&(e.timeoutHandle=-1,$h(n)),oe!==null)for(n=oe.return;n!==null;){var r=n;switch(gl(r),r.tag){case 1:r=r.type.childContextTypes,r!=null&&zi();break;case 3:In(),Y(Te),Y(ve),Pl();break;case 5:El(r);break;case 4:In();break;case 13:Y(J);break;case 19:Y(J);break;case 10:fl(r.type._context);break;case 22:case 23:ql()}n=n.return}if(le=e,oe=e=Wt(e.current,null),pe=Ie=t,ue=0,Ir=null,Kl=lo=rn=0,Ve=Fr=null,Ze!==null){for(t=0;t<Ze.length;t++)if(n=Ze[t],r=n.interleaved,r!==null){n.interleaved=null;var i=r.next,o=n.pending;if(o!==null){var a=o.next;o.next=i,r.next=a}n.pending=r}Ze=null}return e}function md(e,t){do{var n=oe;try{if(cl(),Zi.current=eo,Ji){for(var r=q.memoizedState;r!==null;){var i=r.queue;i!==null&&(i.pending=null),r=r.next}Ji=!1}if(nn=0,se=ae=q=null,Mr=!1,Rr=0,Wl.current=null,n===null||n.return===null){ue=1,Ir=t,oe=null;break}e:{var o=e,a=n.return,l=n,u=t;if(t=pe,l.flags|=32768,u!==null&&typeof u=="object"&&typeof u.then=="function"){var s=u,c=l,d=c.tag;if((c.mode&1)===0&&(d===0||d===11||d===15)){var f=c.alternate;f?(c.updateQueue=f.updateQueue,c.memoizedState=f.memoizedState,c.lanes=f.lanes):(c.updateQueue=null,c.memoizedState=null)}var v=If(a);if(v!==null){v.flags&=-257,Ff(v,a,l,o,t),v.mode&1&&Nf(o,s,t),t=v,u=s;var h=t.updateQueue;if(h===null){var y=new Set;y.add(u),t.updateQueue=y}else h.add(u);break e}else{if((t&1)===0){Nf(o,s,t),bl();break e}u=Error(P(426))}}else if(X&&l.mode&1){var x=If(a);if(x!==null){(x.flags&65536)===0&&(x.flags|=256),Ff(x,a,l,o,t),wl(u);break e}}o=u,ue!==4&&(ue=2),Fr===null?Fr=[o]:Fr.push(o),u=Dl(u,l),l=a;do{switch(l.tag){case 3:l.flags|=65536,t&=-t,l.lanes|=t;var m=Df(l,u,t);Jc(l,m);break e;case 1:o=u;var p=l.type,g=l.stateNode;if((l.flags&128)===0&&(typeof p.getDerivedStateFromError=="function"||g!==null&&typeof g.componentDidCatch=="function"&&(Ut===null||!Ut.has(g)))){l.flags|=65536,t&=-t,l.lanes|=t;var S=Of(l,o,t);Jc(l,S);break e}}l=l.return}while(l!==null)}yd(n)}catch(w){t=w,oe===n&&n!==null&&(oe=n=n.return);continue}break}while(1)}function hd(){var e=ao.current;return ao.current=eo,e===null?eo:e}function bl(){(ue===0||ue===3||ue===2)&&(ue=4),le===null||(rn&268435455)===0&&(lo&268435455)===0||Ht(le,pe)}function mo(e,t){var n=j;j|=2;var r=hd();(le!==e||pe!==t)&&(xt=null,an(e,t));do try{d0();break}catch(i){md(e,i)}while(1);if(cl(),j=n,ao.current=r,oe!==null)throw Error(P(261));return le=null,pe=0,ue}function d0(){for(;oe!==null;)gd(oe)}function p0(){for(;oe!==null&&!jm();)gd(oe)}function gd(e){var t=xd(e.alternate,e,Ie);e.memoizedProps=e.pendingProps,t===null?yd(e):oe=t,Wl.current=null}function yd(e){var t=e;do{var n=t.alternate;if(e=t.return,(t.flags&32768)===0){if(n=r0(n,t,Ie),n!==null){oe=n;return}}else{if(n=a0(n,t),n!==null){n.flags&=32767,oe=n;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{ue=6,oe=null;return}}if(t=t.sibling,t!==null){oe=t;return}oe=t=e}while(t!==null);ue===0&&(ue=5)}function ln(e,t,n){var r=B,i=$e.transition;try{$e.transition=null,B=1,v0(e,t,n,r)}finally{$e.transition=i,B=r}return null}function v0(e,t,n,r){do Un();while(Bt!==null);if((j&6)!==0)throw Error(P(327));n=e.finishedWork;var i=e.finishedLanes;if(n===null)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(P(177));e.callbackNode=null,e.callbackPriority=0;var o=n.lanes|n.childLanes;if(Xm(e,o),e===le&&(oe=le=null,pe=0),(n.subtreeFlags&2064)===0&&(n.flags&2064)===0||so||(so=!0,Ed(gi,function(){return Un(),null})),o=(n.flags&15990)!==0,(n.subtreeFlags&15990)!==0||o){o=$e.transition,$e.transition=null;var a=B;B=1;var l=j;j|=4,Wl.current=null,u0(e,n),ld(n,e),Nh(nl),Pi=!!tl,nl=tl=null,e.current=n,s0(n),Um(),j=l,B=a,$e.transition=o}else e.current=n;if(so&&(so=!1,Bt=e,co=i),o=e.pendingLanes,o===0&&(Ut=null),Hm(n.stateNode),Me(e,re()),t!==null)for(r=e.onRecoverableError,n=0;n<t.length;n++)r(t[n]);if(uo)throw uo=!1,e=Gl,Gl=null,e;return(co&1)!==0&&e.tag!==0&&Un(),o=e.pendingLanes,(o&1)!==0?e===Yl?zr++:(zr=0,Yl=e):zr=0,It(),null}function Un(){if(Bt!==null){var e=nc(co),t=$e.transition,n=B;try{if($e.transition=null,B=16>e?16:e,Bt===null)var r=!1;else{if(e=Bt,Bt=null,co=0,(j&6)!==0)throw Error(P(331));var i=j;for(j|=4,M=e.current;M!==null;){var o=M,a=o.child;if((M.flags&16)!==0){var l=o.deletions;if(l!==null){for(var u=0;u<l.length;u++){var s=l[u];for(M=s;M!==null;){var c=M;switch(c.tag){case 0:case 11:case 15:Nr(8,c,o)}var d=c.child;if(d!==null)d.return=c,M=d;else for(;M!==null;){c=M;var f=c.sibling,v=c.return;if(nd(c),c===s){M=null;break}if(f!==null){f.return=v,M=f;break}M=v}}}var h=o.alternate;if(h!==null){var y=h.child;if(y!==null){h.child=null;do{var x=y.sibling;y.sibling=null,y=x}while(y!==null)}}M=o}}if((o.subtreeFlags&2064)!==0&&a!==null)a.return=o,M=a;else e:for(;M!==null;){if(o=M,(o.flags&2048)!==0)switch(o.tag){case 0:case 11:case 15:Nr(9,o,o.return)}var m=o.sibling;if(m!==null){m.return=o.return,M=m;break e}M=o.return}}var p=e.current;for(M=p;M!==null;){a=M;var g=a.child;if((a.subtreeFlags&2064)!==0&&g!==null)g.return=a,M=g;else e:for(a=p;M!==null;){if(l=M,(l.flags&2048)!==0)try{switch(l.tag){case 0:case 11:case 15:oo(9,l)}}catch(w){ee(l,l.return,w)}if(l===a){M=null;break e}var S=l.sibling;if(S!==null){S.return=l.return,M=S;break e}M=l.return}}if(j=i,It(),rt&&typeof rt.onPostCommitFiberRoot=="function")try{rt.onPostCommitFiberRoot(yi,e)}catch{}r=!0}return r}finally{B=n,$e.transition=t}}return!1}function Sd(e,t,n){t=Dl(n,t),t=Df(e,t,1),zt(e,t),t=Ee(),e=vo(e,1),e!==null&&(lr(e,1,t),Me(e,t))}function ee(e,t,n){if(e.tag===3)Sd(e,e,n);else for(;t!==null;){if(t.tag===3){Sd(t,e,n);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(Ut===null||!Ut.has(r))){e=Dl(n,e),e=Of(t,e,1),zt(t,e),e=Ee(),t=vo(t,1),t!==null&&(lr(t,1,e),Me(t,e));break}}t=t.return}}function m0(e,t,n){var r=e.pingCache;r!==null&&r.delete(t),t=Ee(),e.pingedLanes|=e.suspendedLanes&n,le===e&&(pe&n)===n&&(ue===4||ue===3&&(pe&130023424)===pe&&500>re()-Ql?an(e,0):Kl|=n),Me(e,t)}function wd(e,t){t===0&&((e.mode&1)===0?t=1:(t=wi,wi<<=1,(wi&130023424)===0&&(wi=4194304)));var n=Ee();e=vo(e,t),e!==null&&(lr(e,t,n),Me(e,n))}function h0(e){var t=e.memoizedState,n=0;t!==null&&(n=t.retryLane),wd(e,n)}function g0(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,i=e.memoizedState;i!==null&&(n=i.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(P(314))}r!==null&&r.delete(t),wd(e,n)}var xd;xd=function(e,t,n){if(e!==null)if(e.memoizedProps!==t.pendingProps||Te.current)_e=!0;else{if((e.lanes&n)===0&&(t.flags&128)===0)return _e=!1,o0(e,t,n);_e=(e.flags&131072)!==0}else _e=!1,X&&(t.flags&1048576)!==0&&rf(t,Gi,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps;var i=Vn(t,ve.current);Rn(t,n),i=Ll(null,t,r,e,i,n);var o=_l();return t.flags|=1,typeof i=="object"&&i!==null&&typeof i.render=="function"&&i.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,ke(r)?(o=!0,ji(t)):o=!1,t.memoizedState=i.state!==null&&i.state!==void 0?i.state:null,pl(t),i.updater=Ki,t.stateNode=i,i._reactInternals=t,ml(t,r,e,n),t=Fl(null,t,r,!0,o,n)):(t.tag=0,X&&o&&hl(t),xe(null,t,i,n),t=t.child),t;case 16:r=t.elementType;e:{switch(e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,i=r._init,r=i(r._payload),t.type=r,i=t.tag=S0(r),e=Xe(r,e),i){case 0:t=Il(null,t,r,e,n);break e;case 1:t=Qf(null,t,r,e,n);break e;case 11:t=Bf(null,t,r,e,n);break e;case 14:t=$f(null,t,r,Xe(r.type,e),n);break e}throw Error(P(306,r,""))}return t;case 0:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Xe(r,i),Il(e,t,r,i,n);case 1:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Xe(r,i),Qf(e,t,r,i,n);case 3:e:{if(Gf(t),e===null)throw Error(P(387));r=t.pendingProps,o=t.memoizedState,i=o.element,Zc(e,t),Wi(t,r,null,n);var a=t.memoizedState;if(r=a.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:a.cache,pendingSuspenseBoundaries:a.pendingSuspenseBoundaries,transitions:a.transitions},t.updateQueue.baseState=o,t.memoizedState=o,t.flags&256){i=Error(P(423)),t=Yf(e,t,r,n,i);break e}else if(r!==i){i=Error(P(424)),t=Yf(e,t,r,n,i);break e}else for(Le=vt(t.stateNode.containerInfo.firstChild),Ne=t,X=!0,Je=null,n=cf(t,null,r,n),t.child=n;n;)n.flags=n.flags&-3|4096,n=n.sibling;else{if(On(),r===i){t=wt(e,t,n);break e}xe(e,t,r,n)}t=t.child}return t;case 5:return ff(t),e===null&&Sl(t),r=t.type,i=t.pendingProps,o=e!==null?e.memoizedProps:null,a=i.children,rl(r,i)?a=null:o!==null&&rl(r,o)&&(t.flags|=32),Kf(e,t),xe(e,t,a,n),t.child;case 6:return e===null&&Sl(t),null;case 13:return Zf(e,t,n);case 4:return xl(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=Nn(t,null,r,n):xe(e,t,r,n),t.child;case 11:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Xe(r,i),Bf(e,t,r,i,n);case 7:return xe(e,t,t.pendingProps,n),t.child;case 8:return xe(e,t,t.pendingProps.children,n),t.child;case 12:return xe(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,i=t.pendingProps,o=t.memoizedProps,a=i.value,W(Bi,r._currentValue),r._currentValue=a,o!==null)if(Ye(o.value,a)){if(o.children===i.children&&!Te.current){t=wt(e,t,n);break e}}else for(o=t.child,o!==null&&(o.return=t);o!==null;){var l=o.dependencies;if(l!==null){a=o.child;for(var u=l.firstContext;u!==null;){if(u.context===r){if(o.tag===1){u=gt(-1,n&-n),u.tag=2;var s=o.updateQueue;if(s!==null){s=s.shared;var c=s.pending;c===null?u.next=u:(u.next=c.next,c.next=u),s.pending=u}}o.lanes|=n,u=o.alternate,u!==null&&(u.lanes|=n),dl(o.return,n,t),l.lanes|=n;break}u=u.next}}else if(o.tag===10)a=o.type===t.type?null:o.child;else if(o.tag===18){if(a=o.return,a===null)throw Error(P(341));a.lanes|=n,l=a.alternate,l!==null&&(l.lanes|=n),dl(a,n,t),a=o.sibling}else a=o.child;if(a!==null)a.return=o;else for(a=o;a!==null;){if(a===t){a=null;break}if(o=a.sibling,o!==null){o.return=a.return,a=o;break}a=a.return}o=a}xe(e,t,i.children,n),t=t.child}return t;case 9:return i=t.type,r=t.pendingProps.children,Rn(t,n),i=ze(i),r=r(i),t.flags|=1,xe(e,t,r,n),t.child;case 14:return r=t.type,i=Xe(r,t.pendingProps),i=Xe(r.type,i),$f(e,t,r,i,n);case 15:return Hf(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,i=t.pendingProps,i=t.elementType===r?i:Xe(r,i),e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,ke(r)?(e=!0,ji(t)):e=!1,Rn(t,n),tf(t,r,i),ml(t,r,i,n),Fl(null,t,r,!0,e,n);case 19:return ed(e,t,n);case 22:return Wf(e,t,n)}throw Error(P(156,t.tag))};function Ed(e,t){return Js(e,t)}function y0(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function We(e,t,n,r){return new y0(e,t,n,r)}function eu(e){return e=e.prototype,!(!e||!e.isReactComponent)}function S0(e){if(typeof e=="function")return eu(e)?1:0;if(e!=null){if(e=e.$$typeof,e===sa)return 11;if(e===da)return 14}return 2}function Wt(e,t){var n=e.alternate;return n===null?(n=We(e.tag,t,e.key,e.mode),n.elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=e.flags&14680064,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function ho(e,t,n,r,i,o){var a=2;if(r=e,typeof e=="function")eu(e)&&(a=1);else if(typeof e=="string")a=5;else e:switch(e){case hn:return un(n.children,i,o,t);case la:a=8,i|=8;break;case ua:return e=We(12,n,t,i|2),e.elementType=ua,e.lanes=o,e;case ca:return e=We(13,n,t,i),e.elementType=ca,e.lanes=o,e;case fa:return e=We(19,n,t,i),e.elementType=fa,e.lanes=o,e;case Ls:return go(n,i,o,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case Ts:a=10;break e;case ks:a=9;break e;case sa:a=11;break e;case da:a=14;break e;case kt:a=16,r=null;break e}throw Error(P(130,e==null?e:typeof e,""))}return t=We(a,n,t,i),t.elementType=e,t.type=r,t.lanes=o,t}function un(e,t,n,r){return e=We(7,e,r,t),e.lanes=n,e}function go(e,t,n,r){return e=We(22,e,r,t),e.elementType=Ls,e.lanes=n,e.stateNode={},e}function tu(e,t,n){return e=We(6,e,null,t),e.lanes=n,e}function nu(e,t,n){return t=We(4,e.children!==null?e.children:[],e.key,t),t.lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function w0(e,t,n,r,i){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=Aa(0),this.expirationTimes=Aa(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Aa(0),this.identifierPrefix=r,this.onRecoverableError=i,this.mutableSourceEagerHydrationData=null}function ru(e,t,n,r,i,o,a,l,u){return e=new w0(e,t,n,l,u),t===1?(t=1,o===!0&&(t|=8)):t=0,o=We(3,null,null,t),e.current=o,o.stateNode=e,o.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},pl(o),e}function x0(e,t,n){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:mn,key:r==null?null:""+r,children:e,containerInfo:t,implementation:n}}function Cd(e){if(!e)return Nt;e=e._reactInternals;e:{if(Zt(e)!==e||e.tag!==1)throw Error(P(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(ke(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(P(171))}if(e.tag===1){var n=e.type;if(ke(n))return Gc(e,n,t)}return t}function Pd(e,t,n,r,i,o,a,l,u){return e=ru(n,r,!0,e,i,o,a,l,u),e.context=Cd(null),n=e.current,r=Ee(),i=$t(n),o=gt(r,i),o.callback=t!=null?t:null,zt(n,o),e.current.lanes=i,lr(e,i,r),Me(e,r),e}function yo(e,t,n,r){var i=t.current,o=Ee(),a=$t(i);return n=Cd(n),t.context===null?t.context=n:t.pendingContext=n,t=gt(o,a),t.payload={element:e},r=r===void 0?null:r,r!==null&&(t.callback=r),zt(i,t),e=He(i,a,o),e!==null&&Hi(e,i,a),a}function So(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function Td(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var n=e.retryLane;e.retryLane=n!==0&&n<t?n:t}}function iu(e,t){Td(e,t),(e=e.alternate)&&Td(e,t)}function E0(){return null}var kd=typeof reportError=="function"?reportError:function(e){console.error(e)};function ou(e){this._internalRoot=e}wo.prototype.render=ou.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(P(409));yo(e,t,null,null)},wo.prototype.unmount=ou.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;on(function(){yo(null,e,null,null)}),t[mt]=null}};function wo(e){this._internalRoot=e}wo.prototype.unstable_scheduleHydration=function(e){if(e){var t=oc();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Rt.length&&t!==0&&t<Rt[n].priority;n++);Rt.splice(n,0,e),n===0&&uc(e)}};function au(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function xo(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function Ld(){}function C0(e,t,n,r,i){if(i){if(typeof r=="function"){var o=r;r=function(){var s=So(a);o.call(s)}}var a=Pd(t,r,e,0,null,!1,!1,"",Ld);return e._reactRootContainer=a,e[mt]=a.current,xr(e.nodeType===8?e.parentNode:e),on(),a}for(;i=e.lastChild;)e.removeChild(i);if(typeof r=="function"){var l=r;r=function(){var s=So(u);l.call(s)}}var u=ru(e,0,!1,null,null,!1,!1,"",Ld);return e._reactRootContainer=u,e[mt]=u.current,xr(e.nodeType===8?e.parentNode:e),on(function(){yo(t,u,n,r)}),u}function Eo(e,t,n,r,i){var o=n._reactRootContainer;if(o){var a=o;if(typeof i=="function"){var l=i;i=function(){var u=So(a);l.call(u)}}yo(t,a,e,i)}else a=C0(n,t,e,i,r);return So(a)}rc=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=ar(t.pendingLanes);n!==0&&(Da(t,n|1),Me(t,re()),(j&6)===0&&(jn=re()+500,It()))}break;case 13:var r=Ee();on(function(){return He(e,1,r)}),iu(e,1)}},Oa=function(e){if(e.tag===13){var t=Ee();He(e,134217728,t),iu(e,134217728)}},ic=function(e){if(e.tag===13){var t=Ee(),n=$t(e);He(e,n,t),iu(e,n)}},oc=function(){return B},ac=function(e,t){var n=B;try{return B=e,t()}finally{B=n}},ka=function(e,t,n){switch(t){case"input":if(ya(e,n),t=n.name,n.type==="radio"&&t!=null){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var i=Fi(r);if(!i)throw Error(P(90));Ms(r),ya(r,i)}}}break;case"textarea":Ns(e,n);break;case"select":t=n.value,t!=null&&gn(e,!!n.multiple,t,!1)}},Ws=Jl,Ks=on;var P0={usingClientEntryPoint:!1,Events:[Pr,Ln,Fi,$s,Hs,Jl]},jr={findFiberByHostInstance:Jt,bundleType:0,version:"18.1.0",rendererPackageName:"react-dom"},T0={bundleType:jr.bundleType,version:jr.version,rendererPackageName:jr.rendererPackageName,rendererConfig:jr.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:pt.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Xs(e),e===null?null:e.stateNode},findFiberByHostInstance:jr.findFiberByHostInstance||E0,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.1.0-next-22edb9f77-20220426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__!="undefined"){var Co=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Co.isDisabled&&Co.supportsFiber)try{yi=Co.inject(T0),rt=Co}catch{}}Ae.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=P0,Ae.createPortal=function(e,t){var n=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!au(t))throw Error(P(200));return x0(e,t,null,n)},Ae.createRoot=function(e,t){if(!au(e))throw Error(P(299));var n=!1,r="",i=kd;return t!=null&&(t.unstable_strictMode===!0&&(n=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onRecoverableError!==void 0&&(i=t.onRecoverableError)),t=ru(e,1,!1,null,null,n,!1,r,i),e[mt]=t.current,xr(e.nodeType===8?e.parentNode:e),new ou(t)},Ae.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(P(188)):(e=Object.keys(e).join(","),Error(P(268,e)));return e=Xs(t),e=e===null?null:e.stateNode,e},Ae.flushSync=function(e){return on(e)},Ae.hydrate=function(e,t,n){if(!xo(t))throw Error(P(200));return Eo(null,e,t,!0,n)},Ae.hydrateRoot=function(e,t,n){if(!au(e))throw Error(P(405));var r=n!=null&&n.hydratedSources||null,i=!1,o="",a=kd;if(n!=null&&(n.unstable_strictMode===!0&&(i=!0),n.identifierPrefix!==void 0&&(o=n.identifierPrefix),n.onRecoverableError!==void 0&&(a=n.onRecoverableError)),t=Pd(t,null,e,1,n!=null?n:null,i,!1,o,a),e[mt]=t.current,xr(e),r)for(e=0;e<r.length;e++)n=r[e],i=n._getVersion,i=i(n._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[n,i]:t.mutableSourceEagerHydrationData.push(n,i);return new wo(t)},Ae.render=function(e,t,n){if(!xo(t))throw Error(P(200));return Eo(null,e,t,!1,n)},Ae.unmountComponentAtNode=function(e){if(!xo(e))throw Error(P(40));return e._reactRootContainer?(on(function(){Eo(null,null,e,!1,function(){e._reactRootContainer=null,e[mt]=null})}),!0):!1},Ae.unstable_batchedUpdates=Jl,Ae.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!xo(n))throw Error(P(200));if(e==null||e._reactInternals===void 0)throw Error(P(38));return Eo(e,t,n,!1,r)},Ae.version="18.1.0-next-22edb9f77-20220426";function _d(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__=="undefined"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(_d)}catch(e){console.error(e)}}_d(),ys.exports=Ae;var k0=ys.exports,lu=function(e,t){return lu=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,r){n.__proto__=r}||function(n,r){for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(n[i]=r[i])},lu(e,t)};function Vd(e,t){if(typeof t!="function"&&t!==null)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");lu(e,t);function n(){this.constructor=e}e.prototype=t===null?Object.create(t):(n.prototype=t.prototype,new n)}var k=function(){return k=Object.assign||function(t){for(var n,r=1,i=arguments.length;r<i;r++){n=arguments[r];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(t[o]=n[o])}return t},k.apply(this,arguments)};function Ke(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(e!=null&&typeof Object.getOwnPropertySymbols=="function")for(var i=0,r=Object.getOwnPropertySymbols(e);i<r.length;i++)t.indexOf(r[i])<0&&Object.prototype.propertyIsEnumerable.call(e,r[i])&&(n[r[i]]=e[r[i]]);return n}function L0(e){var t=typeof Symbol=="function"&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&typeof e.length=="number")return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function te(e,t){var n=typeof Symbol=="function"&&e[Symbol.iterator];if(!n)return e;var r=n.call(e),i,o=[],a;try{for(;(t===void 0||t-- >0)&&!(i=r.next()).done;)o.push(i.value)}catch(l){a={error:l}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(a)throw a.error}}return o}function et(e,t,n){if(n||arguments.length===2)for(var r=0,i=t.length,o;r<i;r++)(o||!(r in t))&&(o||(o=Array.prototype.slice.call(t,0,r)),o[r]=t[r]);return e.concat(o||Array.prototype.slice.call(t))}var _0="production",uu=typeof process=="undefined"||process.env===void 0?_0:"production",Et=function(e){return{isEnabled:function(t){return e.some(function(n){return!!t[n]})}}},Ur={measureLayout:Et(["layout","layoutId","drag"]),animation:Et(["animate","exit","variants","whileHover","whileTap","whileFocus","whileDrag","whileInView"]),exit:Et(["exit"]),drag:Et(["drag","dragControls"]),focus:Et(["whileFocus"]),hover:Et(["whileHover","onHoverStart","onHoverEnd"]),tap:Et(["whileTap","onTap","onTapStart","onTapCancel"]),pan:Et(["onPan","onPanStart","onPanSessionStart","onPanEnd"]),inView:Et(["whileInView","onViewportEnter","onViewportLeave"])};function V0(e){for(var t in e)e[t]!==null&&(t==="projectionNodeConstructor"?Ur.projectionNodeConstructor=e[t]:Ur[t].Component=e[t])}var M0=function(){},Po=function(){},Md=L.exports.createContext({strict:!1}),Rd=Object.keys(Ur),R0=Rd.length;function A0(e,t,n){var r=[],i=L.exports.useContext(Md);if(!t)return null;uu!=="production"&&n&&i.strict;for(var o=0;o<R0;o++){var a=Rd[o],l=Ur[a],u=l.isEnabled,s=l.Component;u(e)&&s&&r.push(L.exports.createElement(s,k({key:a},e,{visualElement:t})))}return r}var su=L.exports.createContext({transformPagePoint:function(e){return e},isStatic:!1,reducedMotion:"never"}),To=L.exports.createContext({});function D0(){return L.exports.useContext(To).visualElement}var Br=L.exports.createContext(null),Bn=typeof document!="undefined",ko=Bn?L.exports.useLayoutEffect:L.exports.useEffect,cu={current:null},Ad=!1;function O0(){if(Ad=!0,!!Bn)if(window.matchMedia){var e=window.matchMedia("(prefers-reduced-motion)"),t=function(){return cu.current=e.matches};e.addListener(t),t()}else cu.current=!1}function N0(){!Ad&&O0();var e=te(L.exports.useState(cu.current),1),t=e[0];return t}function I0(){var e=N0(),t=L.exports.useContext(su).reducedMotion;return t==="never"?!1:t==="always"?!0:e}function F0(e,t,n,r){var i=L.exports.useContext(Md),o=D0(),a=L.exports.useContext(Br),l=I0(),u=L.exports.useRef(void 0);r||(r=i.renderer),!u.current&&r&&(u.current=r(e,{visualState:t,parent:o,props:n,presenceId:a==null?void 0:a.id,blockInitialAnimation:(a==null?void 0:a.initial)===!1,shouldReduceMotion:l}));var s=u.current;return ko(function(){s==null||s.syncRender()}),L.exports.useEffect(function(){var c;(c=s==null?void 0:s.animationState)===null||c===void 0||c.animateChanges()}),ko(function(){return function(){return s==null?void 0:s.notifyUnmount()}},[]),s}function $n(e){return typeof e=="object"&&Object.prototype.hasOwnProperty.call(e,"current")}function z0(e,t,n){return L.exports.useCallback(function(r){var i;r&&((i=e.mount)===null||i===void 0||i.call(e,r)),t&&(r?t.mount(r):t.unmount()),n&&(typeof n=="function"?n(r):$n(n)&&(n.current=r))},[t])}function Dd(e){return Array.isArray(e)}function tt(e){return typeof e=="string"||Dd(e)}function j0(e){var t={};return e.forEachValue(function(n,r){return t[r]=n.get()}),t}function U0(e){var t={};return e.forEachValue(function(n,r){return t[r]=n.getVelocity()}),t}function Od(e,t,n,r,i){var o;return r===void 0&&(r={}),i===void 0&&(i={}),typeof t=="function"&&(t=t(n!=null?n:e.custom,r,i)),typeof t=="string"&&(t=(o=e.variants)===null||o===void 0?void 0:o[t]),typeof t=="function"&&(t=t(n!=null?n:e.custom,r,i)),t}function Lo(e,t,n){var r=e.getProps();return Od(r,t,n!=null?n:r.custom,j0(e),U0(e))}function _o(e){var t;return typeof((t=e.animate)===null||t===void 0?void 0:t.start)=="function"||tt(e.initial)||tt(e.animate)||tt(e.whileHover)||tt(e.whileDrag)||tt(e.whileTap)||tt(e.whileFocus)||tt(e.exit)}function Nd(e){return Boolean(_o(e)||e.variants)}function B0(e,t){if(_o(e)){var n=e.initial,r=e.animate;return{initial:n===!1||tt(n)?n:void 0,animate:tt(r)?r:void 0}}return e.inherit!==!1?t:{}}function $0(e){var t=B0(e,L.exports.useContext(To)),n=t.initial,r=t.animate;return L.exports.useMemo(function(){return{initial:n,animate:r}},[Id(n),Id(r)])}function Id(e){return Array.isArray(e)?e.join(" "):e}function $r(e){var t=L.exports.useRef(null);return t.current===null&&(t.current=e()),t.current}const Fd=1/60*1e3,H0=typeof performance!="undefined"?()=>performance.now():()=>Date.now(),zd=typeof window!="undefined"?e=>window.requestAnimationFrame(e):e=>setTimeout(()=>e(H0()),Fd);function W0(e){let t=[],n=[],r=0,i=!1,o=!1;const a=new WeakSet,l={schedule:(u,s=!1,c=!1)=>{const d=c&&i,f=d?t:n;return s&&a.add(u),f.indexOf(u)===-1&&(f.push(u),d&&i&&(r=t.length)),u},cancel:u=>{const s=n.indexOf(u);s!==-1&&n.splice(s,1),a.delete(u)},process:u=>{if(i){o=!0;return}if(i=!0,[t,n]=[n,t],n.length=0,r=t.length,r)for(let s=0;s<r;s++){const c=t[s];c(u),a.has(c)&&(l.schedule(c),e())}i=!1,o&&(o=!1,l.process(u))}};return l}const K0=40;let fu=!0,Hr=!1,du=!1;const Hn={delta:0,timestamp:0},Wr=["read","update","preRender","render","postRender"],Vo=Wr.reduce((e,t)=>(e[t]=W0(()=>Hr=!0),e),{}),nt=Wr.reduce((e,t)=>{const n=Vo[t];return e[t]=(r,i=!1,o=!1)=>(Hr||G0(),n.schedule(r,i,o)),e},{}),Wn=Wr.reduce((e,t)=>(e[t]=Vo[t].cancel,e),{}),pu=Wr.reduce((e,t)=>(e[t]=()=>Vo[t].process(Hn),e),{}),Q0=e=>Vo[e].process(Hn),jd=e=>{Hr=!1,Hn.delta=fu?Fd:Math.max(Math.min(e-Hn.timestamp,K0),1),Hn.timestamp=e,du=!0,Wr.forEach(Q0),du=!1,Hr&&(fu=!1,zd(jd))},G0=()=>{Hr=!0,fu=!0,du||zd(jd)},Mo=()=>Hn,Ro=(e,t,n)=>Math.min(Math.max(n,e),t),vu=.001,Y0=.01,Ud=10,X0=.05,Z0=1;function J0({duration:e=800,bounce:t=.25,velocity:n=0,mass:r=1}){let i,o;M0(e<=Ud*1e3);let a=1-t;a=Ro(X0,Z0,a),e=Ro(Y0,Ud,e/1e3),a<1?(i=s=>{const c=s*a,d=c*e,f=c-n,v=mu(s,a),h=Math.exp(-d);return vu-f/v*h},o=s=>{const d=s*a*e,f=d*n+n,v=Math.pow(a,2)*Math.pow(s,2)*e,h=Math.exp(-d),y=mu(Math.pow(s,2),a);return(-i(s)+vu>0?-1:1)*((f-v)*h)/y}):(i=s=>{const c=Math.exp(-s*e),d=(s-n)*e+1;return-vu+c*d},o=s=>{const c=Math.exp(-s*e),d=(n-s)*(e*e);return c*d});const l=5/e,u=b0(i,o,l);if(e=e*1e3,isNaN(u))return{stiffness:100,damping:10,duration:e};{const s=Math.pow(u,2)*r;return{stiffness:s,damping:a*2*Math.sqrt(r*s),duration:e}}}const q0=12;function b0(e,t,n){let r=n;for(let i=1;i<q0;i++)r=r-e(r)/t(r);return r}function mu(e,t){return e*Math.sqrt(1-t*t)}const eg=["duration","bounce"],tg=["stiffness","damping","mass"];function Bd(e,t){return t.some(n=>e[n]!==void 0)}function ng(e){let t=Object.assign({velocity:0,stiffness:100,damping:10,mass:1,isResolvedFromDuration:!1},e);if(!Bd(e,tg)&&Bd(e,eg)){const n=J0(e);t=Object.assign(Object.assign(Object.assign({},t),n),{velocity:0,mass:1}),t.isResolvedFromDuration=!0}return t}function hu(e){var{from:t=0,to:n=1,restSpeed:r=2,restDelta:i}=e,o=Ke(e,["from","to","restSpeed","restDelta"]);const a={done:!1,value:t};let{stiffness:l,damping:u,mass:s,velocity:c,duration:d,isResolvedFromDuration:f}=ng(o),v=$d,h=$d;function y(){const x=c?-(c/1e3):0,m=n-t,p=u/(2*Math.sqrt(l*s)),g=Math.sqrt(l/s)/1e3;if(i===void 0&&(i=Math.min(Math.abs(n-t)/100,.4)),p<1){const S=mu(g,p);v=w=>{const T=Math.exp(-p*g*w);return n-T*((x+p*g*m)/S*Math.sin(S*w)+m*Math.cos(S*w))},h=w=>{const T=Math.exp(-p*g*w);return p*g*T*(Math.sin(S*w)*(x+p*g*m)/S+m*Math.cos(S*w))-T*(Math.cos(S*w)*(x+p*g*m)-S*m*Math.sin(S*w))}}else if(p===1)v=S=>n-Math.exp(-g*S)*(m+(x+g*m)*S);else{const S=g*Math.sqrt(p*p-1);v=w=>{const T=Math.exp(-p*g*w),C=Math.min(S*w,300);return n-T*((x+p*g*m)*Math.sinh(C)+S*m*Math.cosh(C))/S}}}return y(),{next:x=>{const m=v(x);if(f)a.done=x>=d;else{const p=h(x)*1e3,g=Math.abs(p)<=r,S=Math.abs(n-m)<=i;a.done=g&&S}return a.value=a.done?n:m,a},flipTarget:()=>{c=-c,[t,n]=[n,t],y()}}}hu.needsInterpolation=(e,t)=>typeof e=="string"||typeof t=="string";const $d=e=>0,Kr=(e,t,n)=>{const r=t-e;return r===0?1:(n-e)/r},ne=(e,t,n)=>-n*e+n*t+e,Hd=(e,t)=>n=>Math.max(Math.min(n,t),e),Qr=e=>e%1?Number(e.toFixed(5)):e,Gr=/(-)?([\d]*\.?[\d])+/g,gu=/(#[0-9a-f]{6}|#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))/gi,rg=/^(#[0-9a-f]{3}|#(?:[0-9a-f]{2}){2,4}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2,3}\s*\/*\s*[\d\.]+%?\))$/i;function Yr(e){return typeof e=="string"}const sn={test:e=>typeof e=="number",parse:parseFloat,transform:e=>e},Xr=Object.assign(Object.assign({},sn),{transform:Hd(0,1)}),Ao=Object.assign(Object.assign({},sn),{default:1}),Zr=e=>({test:t=>Yr(t)&&t.endsWith(e)&&t.split(" ").length===1,parse:parseFloat,transform:t=>`${t}${e}`}),Kt=Zr("deg"),ut=Zr("%"),O=Zr("px"),ig=Zr("vh"),og=Zr("vw"),Wd=Object.assign(Object.assign({},ut),{parse:e=>ut.parse(e)/100,transform:e=>ut.transform(e*100)}),yu=(e,t)=>n=>Boolean(Yr(n)&&rg.test(n)&&n.startsWith(e)||t&&Object.prototype.hasOwnProperty.call(n,t)),Kd=(e,t,n)=>r=>{if(!Yr(r))return r;const[i,o,a,l]=r.match(Gr);return{[e]:parseFloat(i),[t]:parseFloat(o),[n]:parseFloat(a),alpha:l!==void 0?parseFloat(l):1}},cn={test:yu("hsl","hue"),parse:Kd("hue","saturation","lightness"),transform:({hue:e,saturation:t,lightness:n,alpha:r=1})=>"hsla("+Math.round(e)+", "+ut.transform(Qr(t))+", "+ut.transform(Qr(n))+", "+Qr(Xr.transform(r))+")"},ag=Hd(0,255),Su=Object.assign(Object.assign({},sn),{transform:e=>Math.round(ag(e))}),Qt={test:yu("rgb","red"),parse:Kd("red","green","blue"),transform:({red:e,green:t,blue:n,alpha:r=1})=>"rgba("+Su.transform(e)+", "+Su.transform(t)+", "+Su.transform(n)+", "+Qr(Xr.transform(r))+")"};function lg(e){let t="",n="",r="",i="";return e.length>5?(t=e.substr(1,2),n=e.substr(3,2),r=e.substr(5,2),i=e.substr(7,2)):(t=e.substr(1,1),n=e.substr(2,1),r=e.substr(3,1),i=e.substr(4,1),t+=t,n+=n,r+=r,i+=i),{red:parseInt(t,16),green:parseInt(n,16),blue:parseInt(r,16),alpha:i?parseInt(i,16)/255:1}}const wu={test:yu("#"),parse:lg,transform:Qt.transform},Ce={test:e=>Qt.test(e)||wu.test(e)||cn.test(e),parse:e=>Qt.test(e)?Qt.parse(e):cn.test(e)?cn.parse(e):wu.parse(e),transform:e=>Yr(e)?e:e.hasOwnProperty("red")?Qt.transform(e):cn.transform(e)},Qd="${c}",Gd="${n}";function ug(e){var t,n,r,i;return isNaN(e)&&Yr(e)&&((n=(t=e.match(Gr))===null||t===void 0?void 0:t.length)!==null&&n!==void 0?n:0)+((i=(r=e.match(gu))===null||r===void 0?void 0:r.length)!==null&&i!==void 0?i:0)>0}function Yd(e){typeof e=="number"&&(e=`${e}`);const t=[];let n=0;const r=e.match(gu);r&&(n=r.length,e=e.replace(gu,Qd),t.push(...r.map(Ce.parse)));const i=e.match(Gr);return i&&(e=e.replace(Gr,Gd),t.push(...i.map(sn.parse))),{values:t,numColors:n,tokenised:e}}function Xd(e){return Yd(e).values}function Zd(e){const{values:t,numColors:n,tokenised:r}=Yd(e),i=t.length;return o=>{let a=r;for(let l=0;l<i;l++)a=a.replace(l<n?Qd:Gd,l<n?Ce.transform(o[l]):Qr(o[l]));return a}}const sg=e=>typeof e=="number"?0:e;function cg(e){const t=Xd(e);return Zd(e)(t.map(sg))}const Ct={test:ug,parse:Xd,createTransformer:Zd,getAnimatableNone:cg},fg=new Set(["brightness","contrast","saturate","opacity"]);function dg(e){let[t,n]=e.slice(0,-1).split("(");if(t==="drop-shadow")return e;const[r]=n.match(Gr)||[];if(!r)return e;const i=n.replace(r,"");let o=fg.has(t)?1:0;return r!==n&&(o*=100),t+"("+o+i+")"}const pg=/([a-z-]*)\(.*?\)/g,xu=Object.assign(Object.assign({},Ct),{getAnimatableNone:e=>{const t=e.match(pg);return t?t.map(dg).join(" "):e}});function Eu(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*(2/3-n)*6:e}function Jd({hue:e,saturation:t,lightness:n,alpha:r}){e/=360,t/=100,n/=100;let i=0,o=0,a=0;if(!t)i=o=a=n;else{const l=n<.5?n*(1+t):n+t-n*t,u=2*n-l;i=Eu(u,l,e+1/3),o=Eu(u,l,e),a=Eu(u,l,e-1/3)}return{red:Math.round(i*255),green:Math.round(o*255),blue:Math.round(a*255),alpha:r}}const vg=(e,t,n)=>{const r=e*e,i=t*t;return Math.sqrt(Math.max(0,n*(i-r)+r))},mg=[wu,Qt,cn],qd=e=>mg.find(t=>t.test(e)),bd=(e,t)=>{let n=qd(e),r=qd(t),i=n.parse(e),o=r.parse(t);n===cn&&(i=Jd(i),n=Qt),r===cn&&(o=Jd(o),r=Qt);const a=Object.assign({},i);return l=>{for(const u in a)u!=="alpha"&&(a[u]=vg(i[u],o[u],l));return a.alpha=ne(i.alpha,o.alpha,l),n.transform(a)}},Cu=e=>typeof e=="number",hg=(e,t)=>n=>t(e(n)),Do=(...e)=>e.reduce(hg);function ep(e,t){return Cu(e)?n=>ne(e,t,n):Ce.test(e)?bd(e,t):rp(e,t)}const tp=(e,t)=>{const n=[...e],r=n.length,i=e.map((o,a)=>ep(o,t[a]));return o=>{for(let a=0;a<r;a++)n[a]=i[a](o);return n}},gg=(e,t)=>{const n=Object.assign(Object.assign({},e),t),r={};for(const i in n)e[i]!==void 0&&t[i]!==void 0&&(r[i]=ep(e[i],t[i]));return i=>{for(const o in r)n[o]=r[o](i);return n}};function np(e){const t=Ct.parse(e),n=t.length;let r=0,i=0,o=0;for(let a=0;a<n;a++)r||typeof t[a]=="number"?r++:t[a].hue!==void 0?o++:i++;return{parsed:t,numNumbers:r,numRGB:i,numHSL:o}}const rp=(e,t)=>{const n=Ct.createTransformer(t),r=np(e),i=np(t);return r.numHSL===i.numHSL&&r.numRGB===i.numRGB&&r.numNumbers>=i.numNumbers?Do(tp(r.parsed,i.parsed),n):a=>`${a>0?t:e}`},yg=(e,t)=>n=>ne(e,t,n);function Sg(e){if(typeof e=="number")return yg;if(typeof e=="string")return Ce.test(e)?bd:rp;if(Array.isArray(e))return tp;if(typeof e=="object")return gg}function wg(e,t,n){const r=[],i=n||Sg(e[0]),o=e.length-1;for(let a=0;a<o;a++){let l=i(e[a],e[a+1]);if(t){const u=Array.isArray(t)?t[a]:t;l=Do(u,l)}r.push(l)}return r}function xg([e,t],[n]){return r=>n(Kr(e,t,r))}function Eg(e,t){const n=e.length,r=n-1;return i=>{let o=0,a=!1;if(i<=e[0]?a=!0:i>=e[r]&&(o=r-1,a=!0),!a){let u=1;for(;u<n&&!(e[u]>i||u===r);u++);o=u-1}const l=Kr(e[o],e[o+1],i);return t[o](l)}}function ip(e,t,{clamp:n=!0,ease:r,mixer:i}={}){const o=e.length;Po(o===t.length),Po(!r||!Array.isArray(r)||r.length===o-1),e[0]>e[o-1]&&(e=[].concat(e),t=[].concat(t),e.reverse(),t.reverse());const a=wg(t,r,i),l=o===2?xg(e,a):Eg(e,a);return n?u=>l(Ro(e[0],e[o-1],u)):l}const Oo=e=>t=>1-e(1-t),Pu=e=>t=>t<=.5?e(2*t)/2:(2-e(2*(1-t)))/2,Cg=e=>t=>Math.pow(t,e),op=e=>t=>t*t*((e+1)*t-e),Pg=e=>{const t=op(e);return n=>(n*=2)<1?.5*t(n):.5*(2-Math.pow(2,-10*(n-1)))},ap=1.525,Tg=4/11,kg=8/11,Lg=9/10,Tu=e=>e,ku=Cg(2),_g=Oo(ku),lp=Pu(ku),up=e=>1-Math.sin(Math.acos(e)),Lu=Oo(up),Vg=Pu(Lu),_u=op(ap),Mg=Oo(_u),Rg=Pu(_u),Ag=Pg(ap),Dg=4356/361,Og=35442/1805,Ng=16061/1805,No=e=>{if(e===1||e===0)return e;const t=e*e;return e<Tg?7.5625*t:e<kg?9.075*t-9.9*e+3.4:e<Lg?Dg*t-Og*e+Ng:10.8*e*e-20.52*e+10.72},Ig=Oo(No),Fg=e=>e<.5?.5*(1-No(1-e*2)):.5*No(e*2-1)+.5;function zg(e,t){return e.map(()=>t||lp).splice(0,e.length-1)}function jg(e){const t=e.length;return e.map((n,r)=>r!==0?r/(t-1):0)}function Ug(e,t){return e.map(n=>n*t)}function Io({from:e=0,to:t=1,ease:n,offset:r,duration:i=300}){const o={done:!1,value:e},a=Array.isArray(t)?t:[e,t],l=Ug(r&&r.length===a.length?r:jg(a),i);function u(){return ip(l,a,{ease:Array.isArray(n)?n:zg(a,n)})}let s=u();return{next:c=>(o.value=s(c),o.done=c>=i,o),flipTarget:()=>{a.reverse(),s=u()}}}function Bg({velocity:e=0,from:t=0,power:n=.8,timeConstant:r=350,restDelta:i=.5,modifyTarget:o}){const a={done:!1,value:t};let l=n*e;const u=t+l,s=o===void 0?u:o(u);return s!==u&&(l=s-t),{next:c=>{const d=-l*Math.exp(-c/r);return a.done=!(d>i||d<-i),a.value=a.done?s:s+d,a},flipTarget:()=>{}}}const sp={keyframes:Io,spring:hu,decay:Bg};function $g(e){if(Array.isArray(e.to))return Io;if(sp[e.type])return sp[e.type];const t=new Set(Object.keys(e));return t.has("ease")||t.has("duration")&&!t.has("dampingRatio")?Io:t.has("dampingRatio")||t.has("stiffness")||t.has("mass")||t.has("damping")||t.has("restSpeed")||t.has("restDelta")?hu:Io}function cp(e,t,n=0){return e-t-n}function Hg(e,t,n=0,r=!0){return r?cp(t+-e,t,n):t-(e-t)+n}function Wg(e,t,n,r){return r?e>=t+n:e<=-n}const Kg=e=>{const t=({delta:n})=>e(n);return{start:()=>nt.update(t,!0),stop:()=>Wn.update(t)}};function fp(e){var t,n,{from:r,autoplay:i=!0,driver:o=Kg,elapsed:a=0,repeat:l=0,repeatType:u="loop",repeatDelay:s=0,onPlay:c,onStop:d,onComplete:f,onRepeat:v,onUpdate:h}=e,y=Ke(e,["from","autoplay","driver","elapsed","repeat","repeatType","repeatDelay","onPlay","onStop","onComplete","onRepeat","onUpdate"]);let{to:x}=y,m,p=0,g=y.duration,S,w=!1,T=!0,C;const E=$g(y);!((n=(t=E).needsInterpolation)===null||n===void 0)&&n.call(t,r,x)&&(C=ip([0,100],[r,x],{clamp:!1}),r=0,x=100);const R=E(Object.assign(Object.assign({},y),{from:r,to:x}));function A(){p++,u==="reverse"?(T=p%2===0,a=Hg(a,g,s,T)):(a=cp(a,g,s),u==="mirror"&&R.flipTarget()),w=!1,v&&v()}function $(){m.stop(),f&&f()}function ce(Pe){if(T||(Pe=-Pe),a+=Pe,!w){const Re=R.next(Math.max(0,a));S=Re.value,C&&(S=C(S)),w=T?Re.done:a<=0}h==null||h(S),w&&(p===0&&(g!=null||(g=a)),p<l?Wg(a,g,s,T)&&A():$())}function ie(){c==null||c(),m=o(ce),m.start()}return i&&ie(),{stop:()=>{d==null||d(),m.stop()}}}function dp(e,t){return t?e*(1e3/t):0}function Qg({from:e=0,velocity:t=0,min:n,max:r,power:i=.8,timeConstant:o=750,bounceStiffness:a=500,bounceDamping:l=10,restDelta:u=1,modifyTarget:s,driver:c,onUpdate:d,onComplete:f,onStop:v}){let h;function y(g){return n!==void 0&&g<n||r!==void 0&&g>r}function x(g){return n===void 0?r:r===void 0||Math.abs(n-g)<Math.abs(r-g)?n:r}function m(g){h==null||h.stop(),h=fp(Object.assign(Object.assign({},g),{driver:c,onUpdate:S=>{var w;d==null||d(S),(w=g.onUpdate)===null||w===void 0||w.call(g,S)},onComplete:f,onStop:v}))}function p(g){m(Object.assign({type:"spring",stiffness:a,damping:l,restDelta:u},g))}if(y(e))p({from:e,velocity:t,to:x(e)});else{let g=i*t+e;typeof s!="undefined"&&(g=s(g));const S=x(g),w=S===n?-1:1;let T,C;const E=R=>{T=C,C=R,t=dp(R-T,Mo().delta),(w===1&&R>S||w===-1&&R<S)&&p({from:R,to:S,velocity:t})};m({type:"decay",from:e,velocity:t,timeConstant:o,power:i,restDelta:u,modifyTarget:s,onUpdate:y(g)?E:void 0})}return{stop:()=>h==null?void 0:h.stop()}}const Vu=e=>e.hasOwnProperty("x")&&e.hasOwnProperty("y"),pp=e=>Vu(e)&&e.hasOwnProperty("z"),Fo=(e,t)=>Math.abs(e-t);function vp(e,t){if(Cu(e)&&Cu(t))return Fo(e,t);if(Vu(e)&&Vu(t)){const n=Fo(e.x,t.x),r=Fo(e.y,t.y),i=pp(e)&&pp(t)?Fo(e.z,t.z):0;return Math.sqrt(Math.pow(n,2)+Math.pow(r,2)+Math.pow(i,2))}}const mp=(e,t)=>1-3*t+3*e,hp=(e,t)=>3*t-6*e,gp=e=>3*e,zo=(e,t,n)=>((mp(t,n)*e+hp(t,n))*e+gp(t))*e,yp=(e,t,n)=>3*mp(t,n)*e*e+2*hp(t,n)*e+gp(t),Gg=1e-7,Yg=10;function Xg(e,t,n,r,i){let o,a,l=0;do a=t+(n-t)/2,o=zo(a,r,i)-e,o>0?n=a:t=a;while(Math.abs(o)>Gg&&++l<Yg);return a}const Zg=8,Jg=.001;function qg(e,t,n,r){for(let i=0;i<Zg;++i){const o=yp(t,n,r);if(o===0)return t;t-=(zo(t,n,r)-e)/o}return t}const jo=11,Uo=1/(jo-1);function bg(e,t,n,r){if(e===t&&n===r)return Tu;const i=new Float32Array(jo);for(let a=0;a<jo;++a)i[a]=zo(a*Uo,e,n);function o(a){let l=0,u=1;const s=jo-1;for(;u!==s&&i[u]<=a;++u)l+=Uo;--u;const c=(a-i[u])/(i[u+1]-i[u]),d=l+c*Uo,f=yp(d,e,n);return f>=Jg?qg(a,d,e,n):f===0?d:Xg(a,l,l+Uo,e,n)}return a=>a===0||a===1?a:zo(o(a),t,r)}function Mu(e,t){e.indexOf(t)===-1&&e.push(t)}function Ru(e,t){var n=e.indexOf(t);n>-1&&e.splice(n,1)}var Jr=function(){function e(){this.subscriptions=[]}return e.prototype.add=function(t){var n=this;return Mu(this.subscriptions,t),function(){return Ru(n.subscriptions,t)}},e.prototype.notify=function(t,n,r){var i=this.subscriptions.length;if(!!i)if(i===1)this.subscriptions[0](t,n,r);else for(var o=0;o<i;o++){var a=this.subscriptions[o];a&&a(t,n,r)}},e.prototype.getSize=function(){return this.subscriptions.length},e.prototype.clear=function(){this.subscriptions.length=0},e}(),ey=function(e){return!isNaN(parseFloat(e))},ty=function(){function e(t){var n=this;this.version="6.3.11",this.timeDelta=0,this.lastUpdated=0,this.updateSubscribers=new Jr,this.velocityUpdateSubscribers=new Jr,this.renderSubscribers=new Jr,this.canTrackVelocity=!1,this.updateAndNotify=function(r,i){i===void 0&&(i=!0),n.prev=n.current,n.current=r;var o=Mo(),a=o.delta,l=o.timestamp;n.lastUpdated!==l&&(n.timeDelta=a,n.lastUpdated=l,nt.postRender(n.scheduleVelocityCheck)),n.prev!==n.current&&n.updateSubscribers.notify(n.current),n.velocityUpdateSubscribers.getSize()&&n.velocityUpdateSubscribers.notify(n.getVelocity()),i&&n.renderSubscribers.notify(n.current)},this.scheduleVelocityCheck=function(){return nt.postRender(n.velocityCheck)},this.velocityCheck=function(r){var i=r.timestamp;i!==n.lastUpdated&&(n.prev=n.current,n.velocityUpdateSubscribers.notify(n.getVelocity()))},this.hasAnimated=!1,this.prev=this.current=t,this.canTrackVelocity=ey(this.current)}return e.prototype.onChange=function(t){return this.updateSubscribers.add(t)},e.prototype.clearListeners=function(){this.updateSubscribers.clear()},e.prototype.onRenderRequest=function(t){return t(this.get()),this.renderSubscribers.add(t)},e.prototype.attach=function(t){this.passiveEffect=t},e.prototype.set=function(t,n){n===void 0&&(n=!0),!n||!this.passiveEffect?this.updateAndNotify(t,n):this.passiveEffect(t,this.updateAndNotify)},e.prototype.get=function(){return this.current},e.prototype.getPrevious=function(){return this.prev},e.prototype.getVelocity=function(){return this.canTrackVelocity?dp(parseFloat(this.current)-parseFloat(this.prev),this.timeDelta):0},e.prototype.start=function(t){var n=this;return this.stop(),new Promise(function(r){n.hasAnimated=!0,n.stopAnimation=t(r)}).then(function(){return n.clearAnimation()})},e.prototype.stop=function(){this.stopAnimation&&this.stopAnimation(),this.clearAnimation()},e.prototype.isAnimating=function(){return!!this.stopAnimation},e.prototype.clearAnimation=function(){this.stopAnimation=null},e.prototype.destroy=function(){this.updateSubscribers.clear(),this.renderSubscribers.clear(),this.stop()},e}();function Kn(e){return new ty(e)}var Pt=function(e){return Boolean(e!==null&&typeof e=="object"&&e.getVelocity)},Bo=function(e){return e*1e3},ny={linear:Tu,easeIn:ku,easeInOut:lp,easeOut:_g,circIn:up,circInOut:Vg,circOut:Lu,backIn:_u,backInOut:Rg,backOut:Mg,anticipate:Ag,bounceIn:Ig,bounceInOut:Fg,bounceOut:No},Sp=function(e){if(Array.isArray(e)){Po(e.length===4);var t=te(e,4),n=t[0],r=t[1],i=t[2],o=t[3];return bg(n,r,i,o)}else if(typeof e=="string")return ny[e];return e},ry=function(e){return Array.isArray(e)&&typeof e[0]!="number"},wp=function(e,t){return e==="zIndex"?!1:!!(typeof t=="number"||Array.isArray(t)||typeof t=="string"&&Ct.test(t)&&!t.startsWith("url("))},qr=function(e){return Array.isArray(e)},fn=function(){return{type:"spring",stiffness:500,damping:25,restSpeed:10}},$o=function(e){return{type:"spring",stiffness:550,damping:e===0?2*Math.sqrt(550):30,restSpeed:10}},Au=function(){return{type:"keyframes",ease:"linear",duration:.3}},iy=function(e){return{type:"keyframes",duration:.8,values:e}},xp={x:fn,y:fn,z:fn,rotate:fn,rotateX:fn,rotateY:fn,rotateZ:fn,scaleX:$o,scaleY:$o,scale:$o,opacity:Au,backgroundColor:Au,color:Au,default:$o},oy=function(e,t){var n;return qr(t)?n=iy:n=xp[e]||xp.default,k({to:t},n(t))},Ep=k(k({},sn),{transform:Math.round}),Cp={borderWidth:O,borderTopWidth:O,borderRightWidth:O,borderBottomWidth:O,borderLeftWidth:O,borderRadius:O,radius:O,borderTopLeftRadius:O,borderTopRightRadius:O,borderBottomRightRadius:O,borderBottomLeftRadius:O,width:O,maxWidth:O,height:O,maxHeight:O,size:O,top:O,right:O,bottom:O,left:O,padding:O,paddingTop:O,paddingRight:O,paddingBottom:O,paddingLeft:O,margin:O,marginTop:O,marginRight:O,marginBottom:O,marginLeft:O,rotate:Kt,rotateX:Kt,rotateY:Kt,rotateZ:Kt,scale:Ao,scaleX:Ao,scaleY:Ao,scaleZ:Ao,skew:Kt,skewX:Kt,skewY:Kt,distance:O,translateX:O,translateY:O,translateZ:O,x:O,y:O,z:O,perspective:O,transformPerspective:O,opacity:Xr,originX:Wd,originY:Wd,originZ:O,zIndex:Ep,fillOpacity:Xr,strokeOpacity:Xr,numOctaves:Ep},ay=k(k({},Cp),{color:Ce,backgroundColor:Ce,outlineColor:Ce,fill:Ce,stroke:Ce,borderColor:Ce,borderTopColor:Ce,borderRightColor:Ce,borderBottomColor:Ce,borderLeftColor:Ce,filter:xu,WebkitFilter:xu}),Du=function(e){return ay[e]};function Ou(e,t){var n,r=Du(e);return r!==xu&&(r=Ct),(n=r.getAnimatableNone)===null||n===void 0?void 0:n.call(r,t)}var ly={current:!1},uy=function(e){return Boolean(e&&typeof e=="object"&&e.mix&&e.toValue)},Pp=function(e){return qr(e)?e[e.length-1]||0:e};function sy(e){e.when,e.delay,e.delayChildren,e.staggerChildren,e.staggerDirection,e.repeat,e.repeatType,e.repeatDelay,e.from;var t=Ke(e,["when","delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from"]);return!!Object.keys(t).length}function cy(e){var t=e.ease,n=e.times,r=e.yoyo,i=e.flip,o=e.loop,a=Ke(e,["ease","times","yoyo","flip","loop"]),l=k({},a);return n&&(l.offset=n),a.duration&&(l.duration=Bo(a.duration)),a.repeatDelay&&(l.repeatDelay=Bo(a.repeatDelay)),t&&(l.ease=ry(t)?t.map(Sp):Sp(t)),a.type==="tween"&&(l.type="keyframes"),(r||o||i)&&(r?l.repeatType="reverse":o?l.repeatType="loop":i&&(l.repeatType="mirror"),l.repeat=o||r||i||a.repeat),a.type!=="spring"&&(l.type="keyframes"),l}function fy(e,t){var n,r,i=Nu(e,t)||{};return(r=(n=i.delay)!==null&&n!==void 0?n:e.delay)!==null&&r!==void 0?r:0}function dy(e){return Array.isArray(e.to)&&e.to[0]===null&&(e.to=et([],te(e.to),!1),e.to[0]=e.from),e}function py(e,t,n){var r;return Array.isArray(t.to)&&((r=e.duration)!==null&&r!==void 0||(e.duration=.8)),dy(t),sy(e)||(e=k(k({},e),oy(n,t.to))),k(k({},t),cy(e))}function vy(e,t,n,r,i){var o,a=Nu(r,e),l=(o=a.from)!==null&&o!==void 0?o:t.get(),u=wp(e,n);l==="none"&&u&&typeof n=="string"?l=Ou(e,n):Tp(l)&&typeof n=="string"?l=kp(n):!Array.isArray(n)&&Tp(n)&&typeof l=="string"&&(n=kp(l));var s=wp(e,l);function c(){var f={from:l,to:n,velocity:t.getVelocity(),onComplete:i,onUpdate:function(v){return t.set(v)}};return a.type==="inertia"||a.type==="decay"?Qg(k(k({},f),a)):fp(k(k({},py(a,f,e)),{onUpdate:function(v){var h;f.onUpdate(v),(h=a.onUpdate)===null||h===void 0||h.call(a,v)},onComplete:function(){var v;f.onComplete(),(v=a.onComplete)===null||v===void 0||v.call(a)}}))}function d(){var f,v,h=Pp(n);return t.set(h),i(),(f=a==null?void 0:a.onUpdate)===null||f===void 0||f.call(a,h),(v=a==null?void 0:a.onComplete)===null||v===void 0||v.call(a),{stop:function(){}}}return!s||!u||a.type===!1?d:c}function Tp(e){return e===0||typeof e=="string"&&parseFloat(e)===0&&e.indexOf(" ")===-1}function kp(e){return typeof e=="number"?0:Ou("",e)}function Nu(e,t){return e[t]||e.default||e}function Iu(e,t,n,r){return r===void 0&&(r={}),ly.current&&(r={type:!1}),t.start(function(i){var o,a,l=vy(e,t,n,r,i),u=fy(r,e),s=function(){return a=l()};return u?o=window.setTimeout(s,Bo(u)):s(),function(){clearTimeout(o),a==null||a.stop()}})}function my(e,t,n){n===void 0&&(n={});var r=Pt(e)?e:Kn(e);return Iu("",r,t,n),{stop:function(){return r.stop()},isAnimating:function(){return r.isAnimating()}}}var Lp=["TopLeft","TopRight","BottomLeft","BottomRight"],hy=Lp.length,_p=function(e){return typeof e=="string"?parseFloat(e):e},Vp=function(e){return typeof e=="number"||O.test(e)};function gy(e,t,n,r,i,o){var a,l,u,s;i?(e.opacity=ne(0,(a=n.opacity)!==null&&a!==void 0?a:1,yy(r)),e.opacityExit=ne((l=t.opacity)!==null&&l!==void 0?l:1,0,Sy(r))):o&&(e.opacity=ne((u=t.opacity)!==null&&u!==void 0?u:1,(s=n.opacity)!==null&&s!==void 0?s:1,r));for(var c=0;c<hy;c++){var d="border".concat(Lp[c],"Radius"),f=Mp(t,d),v=Mp(n,d);if(!(f===void 0&&v===void 0)){f||(f=0),v||(v=0);var h=f===0||v===0||Vp(f)===Vp(v);h?(e[d]=Math.max(ne(_p(f),_p(v),r),0),(ut.test(v)||ut.test(f))&&(e[d]+="%")):e[d]=v}}(t.rotate||n.rotate)&&(e.rotate=ne(t.rotate||0,n.rotate||0,r))}function Mp(e,t){var n;return(n=e[t])!==null&&n!==void 0?n:e.borderRadius}var yy=Rp(0,.5,Lu),Sy=Rp(.5,.95,Tu);function Rp(e,t,n){return function(r){return r<e?0:r>t?1:n(Kr(e,t,r))}}function Ap(e,t){e.min=t.min,e.max=t.max}function st(e,t){Ap(e.x,t.x),Ap(e.y,t.y)}function Fu(e){return e===void 0||e===1}function Dp(e){var t=e.scale,n=e.scaleX,r=e.scaleY;return!Fu(t)||!Fu(n)||!Fu(r)}function Gt(e){return Dp(e)||Op(e.x)||Op(e.y)||e.z||e.rotate||e.rotateX||e.rotateY}function Op(e){return e&&e!=="0%"}function Ho(e,t,n){var r=e-n,i=t*r;return n+i}function Np(e,t,n,r,i){return i!==void 0&&(e=Ho(e,i,r)),Ho(e,n,r)+t}function zu(e,t,n,r,i){t===void 0&&(t=0),n===void 0&&(n=1),e.min=Np(e.min,t,n,r,i),e.max=Np(e.max,t,n,r,i)}function Ip(e,t){var n=t.x,r=t.y;zu(e.x,n.translate,n.scale,n.originPoint),zu(e.y,r.translate,r.scale,r.originPoint)}function wy(e,t,n,r){var i,o;r===void 0&&(r=!1);var a=n.length;if(!!a){t.x=t.y=1;for(var l,u,s=0;s<a;s++)l=n[s],u=l.projectionDelta,((o=(i=l.instance)===null||i===void 0?void 0:i.style)===null||o===void 0?void 0:o.display)!=="contents"&&(r&&l.options.layoutScroll&&l.scroll&&l!==l.root&&Gn(e,{x:-l.scroll.x,y:-l.scroll.y}),u&&(t.x*=u.x.scale,t.y*=u.y.scale,Ip(e,u)),r&&Gt(l.latestValues)&&Gn(e,l.latestValues))}}function Qn(e,t){e.min=e.min+t,e.max=e.max+t}function Fp(e,t,n){var r=te(n,3),i=r[0],o=r[1],a=r[2],l=t[a]!==void 0?t[a]:.5,u=ne(e.min,e.max,l);zu(e,t[i],t[o],u,t.scale)}var xy=["x","scaleX","originX"],Ey=["y","scaleY","originY"];function Gn(e,t){Fp(e.x,t,xy),Fp(e.y,t,Ey)}function Tt(e){return e.max-e.min}function zp(e,t,n){return t===void 0&&(t=0),n===void 0&&(n=.01),vp(e,t)<n}function jp(e,t,n,r){r===void 0&&(r=.5),e.origin=r,e.originPoint=ne(t.min,t.max,e.origin),e.scale=Tt(n)/Tt(t),(zp(e.scale,1,1e-4)||isNaN(e.scale))&&(e.scale=1),e.translate=ne(n.min,n.max,e.origin)-e.originPoint,(zp(e.translate)||isNaN(e.translate))&&(e.translate=0)}function br(e,t,n,r){jp(e.x,t.x,n.x,r==null?void 0:r.originX),jp(e.y,t.y,n.y,r==null?void 0:r.originY)}function Up(e,t,n){e.min=n.min+t.min,e.max=e.min+Tt(t)}function Cy(e,t,n){Up(e.x,t.x,n.x),Up(e.y,t.y,n.y)}function Bp(e,t,n){e.min=t.min-n.min,e.max=e.min+Tt(t)}function ei(e,t,n){Bp(e.x,t.x,n.x),Bp(e.y,t.y,n.y)}function $p(e,t,n,r,i){return e-=t,e=Ho(e,1/n,r),i!==void 0&&(e=Ho(e,1/i,r)),e}function Py(e,t,n,r,i,o,a){if(t===void 0&&(t=0),n===void 0&&(n=1),r===void 0&&(r=.5),o===void 0&&(o=e),a===void 0&&(a=e),ut.test(t)){t=parseFloat(t);var l=ne(a.min,a.max,t/100);t=l-a.min}if(typeof t=="number"){var u=ne(o.min,o.max,r);e===o&&(u-=t),e.min=$p(e.min,t,n,u,i),e.max=$p(e.max,t,n,u,i)}}function Hp(e,t,n,r,i){var o=te(n,3),a=o[0],l=o[1],u=o[2];Py(e,t[a],t[l],t[u],t.scale,r,i)}var Ty=["x","scaleX","originX"],ky=["y","scaleY","originY"];function Wp(e,t,n,r){Hp(e.x,t,Ty,n==null?void 0:n.x,r==null?void 0:r.x),Hp(e.y,t,ky,n==null?void 0:n.y,r==null?void 0:r.y)}var Kp=function(){return{translate:0,scale:1,origin:0,originPoint:0}},ti=function(){return{x:Kp(),y:Kp()}},Qp=function(){return{min:0,max:0}},ye=function(){return{x:Qp(),y:Qp()}};function Gp(e){return e.translate===0&&e.scale===1}function Yp(e){return Gp(e.x)&&Gp(e.y)}function Xp(e,t){return e.x.min===t.x.min&&e.x.max===t.x.max&&e.y.min===t.y.min&&e.y.max===t.y.max}var Ly=function(){function e(){this.members=[]}return e.prototype.add=function(t){Mu(this.members,t),t.scheduleRender()},e.prototype.remove=function(t){if(Ru(this.members,t),t===this.prevLead&&(this.prevLead=void 0),t===this.lead){var n=this.members[this.members.length-1];n&&this.promote(n)}},e.prototype.relegate=function(t){var n=this.members.findIndex(function(a){return t===a});if(n===0)return!1;for(var r,i=n;i>=0;i--){var o=this.members[i];if(o.isPresent!==!1){r=o;break}}return r?(this.promote(r),!0):!1},e.prototype.promote=function(t,n){var r,i=this.lead;if(t!==i&&(this.prevLead=i,this.lead=t,t.show(),i)){i.instance&&i.scheduleRender(),t.scheduleRender(),t.resumeFrom=i,n&&(t.resumeFrom.preserveOpacity=!0),i.snapshot&&(t.snapshot=i.snapshot,t.snapshot.latestValues=i.animationValues||i.latestValues,t.snapshot.isShared=!0),!((r=t.root)===null||r===void 0)&&r.isUpdating&&(t.isLayoutDirty=!0);var o=t.options.crossfade;o===!1&&i.hide()}},e.prototype.exitAnimationComplete=function(){this.members.forEach(function(t){var n,r,i,o,a;(r=(n=t.options).onExitComplete)===null||r===void 0||r.call(n),(a=(i=t.resumingFrom)===null||i===void 0?void 0:(o=i.options).onExitComplete)===null||a===void 0||a.call(o)})},e.prototype.scheduleRender=function(){this.members.forEach(function(t){t.instance&&t.scheduleRender(!1)})},e.prototype.removeLeadSnapshot=function(){this.lead&&this.lead.snapshot&&(this.lead.snapshot=void 0)},e}(),Wo={};function _y(e){Object.assign(Wo,e)}var Vy="translate3d(0px, 0px, 0) scale(1, 1) scale(1, 1)";function Zp(e,t,n){var r=e.x.translate/t.x,i=e.y.translate/t.y,o="translate3d(".concat(r,"px, ").concat(i,"px, 0) ");if(o+="scale(".concat(1/t.x,", ").concat(1/t.y,") "),n){var a=n.rotate,l=n.rotateX,u=n.rotateY;a&&(o+="rotate(".concat(a,"deg) ")),l&&(o+="rotateX(".concat(l,"deg) ")),u&&(o+="rotateY(".concat(u,"deg) "))}var s=e.x.scale*t.x,c=e.y.scale*t.y;return o+="scale(".concat(s,", ").concat(c,")"),o===Vy?"none":o}function ct(e){return[e("x"),e("y")]}var ju=["","X","Y","Z"],My=["translate","scale","rotate","skew"],ni=["transformPerspective","x","y","z"];My.forEach(function(e){return ju.forEach(function(t){return ni.push(e+t)})});function Ry(e,t){return ni.indexOf(e)-ni.indexOf(t)}var Ay=new Set(ni);function ri(e){return Ay.has(e)}var Dy=new Set(["originX","originY","originZ"]);function Jp(e){return Dy.has(e)}var Oy=function(e,t){return e.depth-t.depth},Ny=function(){function e(){this.children=[],this.isDirty=!1}return e.prototype.add=function(t){Mu(this.children,t),this.isDirty=!0},e.prototype.remove=function(t){Ru(this.children,t),this.isDirty=!0},e.prototype.forEach=function(t){this.isDirty&&this.children.sort(Oy),this.isDirty=!1,this.children.forEach(t)},e}();function Ko(e){var t=Pt(e)?e.get():e;return uy(t)?t.toValue():t}var qp=1e3,ii={hasAnimatedSinceResize:!0,hasEverUpdated:!1};function bp(e){var t=e.attachResizeListener,n=e.defaultParent,r=e.measureScroll,i=e.resetTransform;return function(){function o(a,l,u){var s=this;l===void 0&&(l={}),u===void 0&&(u=n==null?void 0:n()),this.children=new Set,this.options={},this.isTreeAnimating=!1,this.isAnimationBlocked=!1,this.isLayoutDirty=!1,this.updateManuallyBlocked=!1,this.updateBlockedByResize=!1,this.isUpdating=!1,this.isSVG=!1,this.needsReset=!1,this.shouldResetTransform=!1,this.treeScale={x:1,y:1},this.eventHandlers=new Map,this.potentialNodes=new Map,this.checkUpdateFailed=function(){s.isUpdating&&(s.isUpdating=!1,s.clearAllSnapshots())},this.updateProjection=function(){s.nodes.forEach(By),s.nodes.forEach($y)},this.hasProjected=!1,this.isVisible=!0,this.animationProgress=0,this.sharedNodes=new Map,this.id=a,this.latestValues=l,this.root=u?u.root||u:this,this.path=u?et(et([],te(u.path),!1),[u],!1):[],this.parent=u,this.depth=u?u.depth+1:0,a&&this.root.registerPotentialNode(a,this);for(var c=0;c<this.path.length;c++)this.path[c].shouldResetTransform=!0;this.root===this&&(this.nodes=new Ny)}return o.prototype.addEventListener=function(a,l){return this.eventHandlers.has(a)||this.eventHandlers.set(a,new Jr),this.eventHandlers.get(a).add(l)},o.prototype.notifyListeners=function(a){for(var l=[],u=1;u<arguments.length;u++)l[u-1]=arguments[u];var s=this.eventHandlers.get(a);s==null||s.notify.apply(s,et([],te(l),!1))},o.prototype.hasListeners=function(a){return this.eventHandlers.has(a)},o.prototype.registerPotentialNode=function(a,l){this.potentialNodes.set(a,l)},o.prototype.mount=function(a,l){var u=this,s;if(l===void 0&&(l=!1),!this.instance){this.isSVG=a instanceof SVGElement&&a.tagName!=="svg",this.instance=a;var c=this.options,d=c.layoutId,f=c.layout,v=c.visualElement;if(v&&!v.getInstance()&&v.mount(a),this.root.nodes.add(this),(s=this.parent)===null||s===void 0||s.children.add(this),this.id&&this.root.potentialNodes.delete(this.id),l&&(f||d)&&(this.isLayoutDirty=!0),t){var h,y=function(){return u.root.updateBlockedByResize=!1};t(a,function(){u.root.updateBlockedByResize=!0,clearTimeout(h),h=window.setTimeout(y,250),ii.hasAnimatedSinceResize&&(ii.hasAnimatedSinceResize=!1,u.nodes.forEach(Uy))})}d&&this.root.registerSharedNode(d,this),this.options.animate!==!1&&v&&(d||f)&&this.addEventListener("didUpdate",function(x){var m,p,g,S,w,T=x.delta,C=x.hasLayoutChanged,E=x.hasRelativeTargetChanged,R=x.layout;if(u.isTreeAnimationBlocked()){u.target=void 0,u.relativeTarget=void 0;return}var A=(p=(m=u.options.transition)!==null&&m!==void 0?m:v.getDefaultTransition())!==null&&p!==void 0?p:Gy,$=v.getProps(),ce=$.onLayoutAnimationStart,ie=$.onLayoutAnimationComplete,Pe=!u.targetLayout||!Xp(u.targetLayout,R)||E,Re=!C&&E;if(((g=u.resumeFrom)===null||g===void 0?void 0:g.instance)||Re||C&&(Pe||!u.currentAnimation)){u.resumeFrom&&(u.resumingFrom=u.resumeFrom,u.resumingFrom.resumingFrom=void 0),u.setAnimationOrigin(T,Re);var Fe=k(k({},Nu(A,"layout")),{onPlay:ce,onComplete:ie});v.shouldReduceMotion&&(Fe.delay=0,Fe.type=!1),u.startAnimation(Fe)}else!C&&u.animationProgress===0&&u.finishAnimation(),u.isLead()&&((w=(S=u.options).onExitComplete)===null||w===void 0||w.call(S));u.targetLayout=R})}},o.prototype.unmount=function(){var a,l;this.options.layoutId&&this.willUpdate(),this.root.nodes.remove(this),(a=this.getStack())===null||a===void 0||a.remove(this),(l=this.parent)===null||l===void 0||l.children.delete(this),this.instance=void 0,Wn.preRender(this.updateProjection)},o.prototype.blockUpdate=function(){this.updateManuallyBlocked=!0},o.prototype.unblockUpdate=function(){this.updateManuallyBlocked=!1},o.prototype.isUpdateBlocked=function(){return this.updateManuallyBlocked||this.updateBlockedByResize},o.prototype.isTreeAnimationBlocked=function(){var a;return this.isAnimationBlocked||((a=this.parent)===null||a===void 0?void 0:a.isTreeAnimationBlocked())||!1},o.prototype.startUpdate=function(){var a;this.isUpdateBlocked()||(this.isUpdating=!0,(a=this.nodes)===null||a===void 0||a.forEach(Hy))},o.prototype.willUpdate=function(a){var l,u,s;if(a===void 0&&(a=!0),this.root.isUpdateBlocked()){(u=(l=this.options).onExitComplete)===null||u===void 0||u.call(l);return}if(!this.root.isUpdating&&this.root.startUpdate(),!this.isLayoutDirty){this.isLayoutDirty=!0;for(var c=0;c<this.path.length;c++){var d=this.path[c];d.shouldResetTransform=!0,d.updateScroll()}var f=this.options,v=f.layoutId,h=f.layout;if(!(v===void 0&&!h)){var y=(s=this.options.visualElement)===null||s===void 0?void 0:s.getProps().transformTemplate;this.prevTransformTemplateValue=y==null?void 0:y(this.latestValues,""),this.updateSnapshot(),a&&this.notifyListeners("willUpdate")}}},o.prototype.didUpdate=function(){var a=this.isUpdateBlocked();if(a){this.unblockUpdate(),this.clearAllSnapshots(),this.nodes.forEach(ev);return}!this.isUpdating||(this.isUpdating=!1,this.potentialNodes.size&&(this.potentialNodes.forEach(Yy),this.potentialNodes.clear()),this.nodes.forEach(jy),this.nodes.forEach(Iy),this.nodes.forEach(Fy),this.clearAllSnapshots(),pu.update(),pu.preRender(),pu.render())},o.prototype.clearAllSnapshots=function(){this.nodes.forEach(zy),this.sharedNodes.forEach(Wy)},o.prototype.scheduleUpdateProjection=function(){nt.preRender(this.updateProjection,!1,!0)},o.prototype.scheduleCheckAfterUnmount=function(){var a=this;nt.postRender(function(){a.isLayoutDirty?a.root.didUpdate():a.root.checkUpdateFailed()})},o.prototype.updateSnapshot=function(){if(!(this.snapshot||!this.instance)){var a=this.measure(),l=this.removeTransform(this.removeElementScroll(a));iv(l),this.snapshot={measured:a,layout:l,latestValues:{}}}},o.prototype.updateLayout=function(){var a;if(!!this.instance&&(this.updateScroll(),!(!(this.options.alwaysMeasureLayout&&this.isLead())&&!this.isLayoutDirty))){if(this.resumeFrom&&!this.resumeFrom.instance)for(var l=0;l<this.path.length;l++){var u=this.path[l];u.updateScroll()}var s=this.measure();iv(s);var c=this.layout;this.layout={measured:s,actual:this.removeElementScroll(s)},this.layoutCorrected=ye(),this.isLayoutDirty=!1,this.projectionDelta=void 0,this.notifyListeners("measure",this.layout.actual),(a=this.options.visualElement)===null||a===void 0||a.notifyLayoutMeasure(this.layout.actual,c==null?void 0:c.actual)}},o.prototype.updateScroll=function(){this.options.layoutScroll&&this.instance&&(this.scroll=r(this.instance))},o.prototype.resetTransform=function(){var a;if(!!i){var l=this.isLayoutDirty||this.shouldResetTransform,u=this.projectionDelta&&!Yp(this.projectionDelta),s=(a=this.options.visualElement)===null||a===void 0?void 0:a.getProps().transformTemplate,c=s==null?void 0:s(this.latestValues,""),d=c!==this.prevTransformTemplateValue;l&&(u||Gt(this.latestValues)||d)&&(i(this.instance,c),this.shouldResetTransform=!1,this.scheduleRender())}},o.prototype.measure=function(){var a=this.options.visualElement;if(!a)return ye();var l=a.measureViewportBox(),u=this.root.scroll;return u&&(Qn(l.x,u.x),Qn(l.y,u.y)),l},o.prototype.removeElementScroll=function(a){var l=ye();st(l,a);for(var u=0;u<this.path.length;u++){var s=this.path[u],c=s.scroll,d=s.options;s!==this.root&&c&&d.layoutScroll&&(Qn(l.x,c.x),Qn(l.y,c.y))}return l},o.prototype.applyTransform=function(a,l){l===void 0&&(l=!1);var u=ye();st(u,a);for(var s=0;s<this.path.length;s++){var c=this.path[s];!l&&c.options.layoutScroll&&c.scroll&&c!==c.root&&Gn(u,{x:-c.scroll.x,y:-c.scroll.y}),Gt(c.latestValues)&&Gn(u,c.latestValues)}return Gt(this.latestValues)&&Gn(u,this.latestValues),u},o.prototype.removeTransform=function(a){var l,u=ye();st(u,a);for(var s=0;s<this.path.length;s++){var c=this.path[s];if(!!c.instance&&!!Gt(c.latestValues)){Dp(c.latestValues)&&c.updateSnapshot();var d=ye(),f=c.measure();st(d,f),Wp(u,c.latestValues,(l=c.snapshot)===null||l===void 0?void 0:l.layout,d)}}return Gt(this.latestValues)&&Wp(u,this.latestValues),u},o.prototype.setTargetDelta=function(a){this.targetDelta=a,this.root.scheduleUpdateProjection()},o.prototype.setOptions=function(a){var l;this.options=k(k(k({},this.options),a),{crossfade:(l=a.crossfade)!==null&&l!==void 0?l:!0})},o.prototype.clearMeasurements=function(){this.scroll=void 0,this.layout=void 0,this.snapshot=void 0,this.prevTransformTemplateValue=void 0,this.targetDelta=void 0,this.target=void 0,this.isLayoutDirty=!1},o.prototype.resolveTargetDelta=function(){var a,l=this.options,u=l.layout,s=l.layoutId;!this.layout||!(u||s)||(!this.targetDelta&&!this.relativeTarget&&(this.relativeParent=this.getClosestProjectingParent(),this.relativeParent&&this.relativeParent.layout&&(this.relativeTarget=ye(),this.relativeTargetOrigin=ye(),ei(this.relativeTargetOrigin,this.layout.actual,this.relativeParent.layout.actual),st(this.relativeTarget,this.relativeTargetOrigin))),!(!this.relativeTarget&&!this.targetDelta)&&(this.target||(this.target=ye(),this.targetWithTransforms=ye()),this.relativeTarget&&this.relativeTargetOrigin&&((a=this.relativeParent)===null||a===void 0?void 0:a.target)?Cy(this.target,this.relativeTarget,this.relativeParent.target):this.targetDelta?(Boolean(this.resumingFrom)?this.target=this.applyTransform(this.layout.actual):st(this.target,this.layout.actual),Ip(this.target,this.targetDelta)):st(this.target,this.layout.actual),this.attemptToResolveRelativeTarget&&(this.attemptToResolveRelativeTarget=!1,this.relativeParent=this.getClosestProjectingParent(),this.relativeParent&&Boolean(this.relativeParent.resumingFrom)===Boolean(this.resumingFrom)&&!this.relativeParent.options.layoutScroll&&this.relativeParent.target&&(this.relativeTarget=ye(),this.relativeTargetOrigin=ye(),ei(this.relativeTargetOrigin,this.target,this.relativeParent.target),st(this.relativeTarget,this.relativeTargetOrigin)))))},o.prototype.getClosestProjectingParent=function(){if(!(!this.parent||Gt(this.parent.latestValues)))return(this.parent.relativeTarget||this.parent.targetDelta)&&this.parent.layout?this.parent:this.parent.getClosestProjectingParent()},o.prototype.calcProjection=function(){var a,l=this.options,u=l.layout,s=l.layoutId;if(this.isTreeAnimating=Boolean(((a=this.parent)===null||a===void 0?void 0:a.isTreeAnimating)||this.currentAnimation||this.pendingAnimation),this.isTreeAnimating||(this.targetDelta=this.relativeTarget=void 0),!(!this.layout||!(u||s))){var c=this.getLead();st(this.layoutCorrected,this.layout.actual),wy(this.layoutCorrected,this.treeScale,this.path,Boolean(this.resumingFrom)||this!==c);var d=c.target;if(!!d){this.projectionDelta||(this.projectionDelta=ti(),this.projectionDeltaWithTransform=ti());var f=this.treeScale.x,v=this.treeScale.y,h=this.projectionTransform;br(this.projectionDelta,this.layoutCorrected,d,this.latestValues),this.projectionTransform=Zp(this.projectionDelta,this.treeScale),(this.projectionTransform!==h||this.treeScale.x!==f||this.treeScale.y!==v)&&(this.hasProjected=!0,this.scheduleRender(),this.notifyListeners("projectionUpdate",d))}}},o.prototype.hide=function(){this.isVisible=!1},o.prototype.show=function(){this.isVisible=!0},o.prototype.scheduleRender=function(a){var l,u,s;a===void 0&&(a=!0),(u=(l=this.options).scheduleRender)===null||u===void 0||u.call(l),a&&((s=this.getStack())===null||s===void 0||s.scheduleRender()),this.resumingFrom&&!this.resumingFrom.instance&&(this.resumingFrom=void 0)},o.prototype.setAnimationOrigin=function(a,l){var u=this,s;l===void 0&&(l=!1);var c=this.snapshot,d=(c==null?void 0:c.latestValues)||{},f=k({},this.latestValues),v=ti();this.relativeTarget=this.relativeTargetOrigin=void 0,this.attemptToResolveRelativeTarget=!l;var h=ye(),y=c==null?void 0:c.isShared,x=(((s=this.getStack())===null||s===void 0?void 0:s.members.length)||0)<=1,m=Boolean(y&&!x&&this.options.crossfade===!0&&!this.path.some(Qy));this.animationProgress=0,this.mixTargetDelta=function(p){var g,S=p/1e3;tv(v.x,a.x,S),tv(v.y,a.y,S),u.setTargetDelta(v),u.relativeTarget&&u.relativeTargetOrigin&&u.layout&&((g=u.relativeParent)===null||g===void 0?void 0:g.layout)&&(ei(h,u.layout.actual,u.relativeParent.layout.actual),Ky(u.relativeTarget,u.relativeTargetOrigin,h,S)),y&&(u.animationValues=f,gy(f,d,u.latestValues,S,m,x)),u.root.scheduleUpdateProjection(),u.scheduleRender(),u.animationProgress=S},this.mixTargetDelta(0)},o.prototype.startAnimation=function(a){var l=this,u,s;this.notifyListeners("animationStart"),(u=this.currentAnimation)===null||u===void 0||u.stop(),this.resumingFrom&&((s=this.resumingFrom.currentAnimation)===null||s===void 0||s.stop()),this.pendingAnimation&&(Wn.update(this.pendingAnimation),this.pendingAnimation=void 0),this.pendingAnimation=nt.update(function(){ii.hasAnimatedSinceResize=!0,l.currentAnimation=my(0,qp,k(k({},a),{onUpdate:function(c){var d;l.mixTargetDelta(c),(d=a.onUpdate)===null||d===void 0||d.call(a,c)},onComplete:function(){var c;(c=a.onComplete)===null||c===void 0||c.call(a),l.completeAnimation()}})),l.resumingFrom&&(l.resumingFrom.currentAnimation=l.currentAnimation),l.pendingAnimation=void 0})},o.prototype.completeAnimation=function(){var a;this.resumingFrom&&(this.resumingFrom.currentAnimation=void 0,this.resumingFrom.preserveOpacity=void 0),(a=this.getStack())===null||a===void 0||a.exitAnimationComplete(),this.resumingFrom=this.currentAnimation=this.animationValues=void 0,this.notifyListeners("animationComplete")},o.prototype.finishAnimation=function(){var a;this.currentAnimation&&((a=this.mixTargetDelta)===null||a===void 0||a.call(this,qp),this.currentAnimation.stop()),this.completeAnimation()},o.prototype.applyTransformsToTarget=function(){var a=this.getLead(),l=a.targetWithTransforms,u=a.target,s=a.layout,c=a.latestValues;!l||!u||!s||(st(l,u),Gn(l,c),br(this.projectionDeltaWithTransform,this.layoutCorrected,l,c))},o.prototype.registerSharedNode=function(a,l){var u,s,c;this.sharedNodes.has(a)||this.sharedNodes.set(a,new Ly);var d=this.sharedNodes.get(a);d.add(l),l.promote({transition:(u=l.options.initialPromotionConfig)===null||u===void 0?void 0:u.transition,preserveFollowOpacity:(c=(s=l.options.initialPromotionConfig)===null||s===void 0?void 0:s.shouldPreserveFollowOpacity)===null||c===void 0?void 0:c.call(s,l)})},o.prototype.isLead=function(){var a=this.getStack();return a?a.lead===this:!0},o.prototype.getLead=function(){var a,l=this.options.layoutId;return l?((a=this.getStack())===null||a===void 0?void 0:a.lead)||this:this},o.prototype.getPrevLead=function(){var a,l=this.options.layoutId;return l?(a=this.getStack())===null||a===void 0?void 0:a.prevLead:void 0},o.prototype.getStack=function(){var a=this.options.layoutId;if(a)return this.root.sharedNodes.get(a)},o.prototype.promote=function(a){var l=a===void 0?{}:a,u=l.needsReset,s=l.transition,c=l.preserveFollowOpacity,d=this.getStack();d&&d.promote(this,c),u&&(this.projectionDelta=void 0,this.needsReset=!0),s&&this.setOptions({transition:s})},o.prototype.relegate=function(){var a=this.getStack();return a?a.relegate(this):!1},o.prototype.resetRotation=function(){var a=this.options.visualElement;if(!!a){for(var l=!1,u={},s=0;s<ju.length;s++){var c=ju[s],d="rotate"+c;!a.getStaticValue(d)||(l=!0,u[d]=a.getStaticValue(d),a.setStaticValue(d,0))}if(!!l){a==null||a.syncRender();for(var d in u)a.setStaticValue(d,u[d]);a.scheduleRender()}}},o.prototype.getProjectionStyles=function(a){var l,u,s,c,d,f;a===void 0&&(a={});var v={};if(!this.instance||this.isSVG)return v;if(this.isVisible)v.visibility="";else return{visibility:"hidden"};var h=(l=this.options.visualElement)===null||l===void 0?void 0:l.getProps().transformTemplate;if(this.needsReset)return this.needsReset=!1,v.opacity="",v.pointerEvents=Ko(a.pointerEvents)||"",v.transform=h?h(this.latestValues,""):"none",v;var y=this.getLead();if(!this.projectionDelta||!this.layout||!y.target){var x={};return this.options.layoutId&&(x.opacity=(u=this.latestValues.opacity)!==null&&u!==void 0?u:1,x.pointerEvents=Ko(a.pointerEvents)||""),this.hasProjected&&!Gt(this.latestValues)&&(x.transform=h?h({},""):"none",this.hasProjected=!1),x}var m=y.animationValues||y.latestValues;this.applyTransformsToTarget(),v.transform=Zp(this.projectionDeltaWithTransform,this.treeScale,m),h&&(v.transform=h(m,v.transform));var p=this.projectionDelta,g=p.x,S=p.y;v.transformOrigin="".concat(g.origin*100,"% ").concat(S.origin*100,"% 0"),y.animationValues?v.opacity=y===this?(c=(s=m.opacity)!==null&&s!==void 0?s:this.latestValues.opacity)!==null&&c!==void 0?c:1:this.preserveOpacity?this.latestValues.opacity:m.opacityExit:v.opacity=y===this?(d=m.opacity)!==null&&d!==void 0?d:"":(f=m.opacityExit)!==null&&f!==void 0?f:0;for(var w in Wo)if(m[w]!==void 0){var T=Wo[w],C=T.correct,E=T.applyTo,R=C(m[w],y);if(E)for(var A=E.length,$=0;$<A;$++)v[E[$]]=R;else v[w]=R}return this.options.layoutId&&(v.pointerEvents=y===this?Ko(a.pointerEvents)||"":"none"),v},o.prototype.clearSnapshot=function(){this.resumeFrom=this.snapshot=void 0},o.prototype.resetTree=function(){this.root.nodes.forEach(function(a){var l;return(l=a.currentAnimation)===null||l===void 0?void 0:l.stop()}),this.root.nodes.forEach(ev),this.root.sharedNodes.clear()},o}()}function Iy(e){e.updateLayout()}function Fy(e){var t,n,r,i,o=(n=(t=e.resumeFrom)===null||t===void 0?void 0:t.snapshot)!==null&&n!==void 0?n:e.snapshot;if(e.isLead()&&e.layout&&o&&e.hasListeners("didUpdate")){var a=e.layout,l=a.actual,u=a.measured;e.options.animationType==="size"?ct(function(p){var g=o.isShared?o.measured[p]:o.layout[p],S=Tt(g);g.min=l[p].min,g.max=g.min+S}):e.options.animationType==="position"&&ct(function(p){var g=o.isShared?o.measured[p]:o.layout[p],S=Tt(l[p]);g.max=g.min+S});var s=ti();br(s,l,o.layout);var c=ti();o.isShared?br(c,e.applyTransform(u,!0),o.measured):br(c,l,o.layout);var d=!Yp(s),f=!1;if(!e.resumeFrom&&(e.relativeParent=e.getClosestProjectingParent(),e.relativeParent&&!e.relativeParent.resumeFrom)){var v=e.relativeParent,h=v.snapshot,y=v.layout;if(h&&y){var x=ye();ei(x,o.layout,h.layout);var m=ye();ei(m,l,y.actual),Xp(x,m)||(f=!0)}}e.notifyListeners("didUpdate",{layout:l,snapshot:o,delta:c,layoutDelta:s,hasLayoutChanged:d,hasRelativeTargetChanged:f})}else e.isLead()&&((i=(r=e.options).onExitComplete)===null||i===void 0||i.call(r));e.options.transition=void 0}function zy(e){e.clearSnapshot()}function ev(e){e.clearMeasurements()}function jy(e){var t=e.options.visualElement;t!=null&&t.getProps().onBeforeLayoutMeasure&&t.notifyBeforeLayoutMeasure(),e.resetTransform()}function Uy(e){e.finishAnimation(),e.targetDelta=e.relativeTarget=e.target=void 0}function By(e){e.resolveTargetDelta()}function $y(e){e.calcProjection()}function Hy(e){e.resetRotation()}function Wy(e){e.removeLeadSnapshot()}function tv(e,t,n){e.translate=ne(t.translate,0,n),e.scale=ne(t.scale,1,n),e.origin=t.origin,e.originPoint=t.originPoint}function nv(e,t,n,r){e.min=ne(t.min,n.min,r),e.max=ne(t.max,n.max,r)}function Ky(e,t,n,r){nv(e.x,t.x,n.x,r),nv(e.y,t.y,n.y,r)}function Qy(e){return e.animationValues&&e.animationValues.opacityExit!==void 0}var Gy={duration:.45,ease:[.4,0,.1,1]};function Yy(e,t){for(var n=e.root,r=e.path.length-1;r>=0;r--)if(Boolean(e.path[r].instance)){n=e.path[r];break}var i=n&&n!==e.root?n.instance:document,o=i.querySelector('[data-projection-id="'.concat(t,'"]'));o&&e.mount(o,!0)}function rv(e){e.min=Math.round(e.min),e.max=Math.round(e.max)}function iv(e){rv(e.x),rv(e.y)}var Xy=1;function Zy(){return $r(function(){if(ii.hasEverUpdated)return Xy++})}var Uu=L.exports.createContext({}),ov=L.exports.createContext({});function Jy(e,t,n,r){var i,o=t.layoutId,a=t.layout,l=t.drag,u=t.dragConstraints,s=t.layoutScroll,c=L.exports.useContext(ov);!r||!n||(n==null?void 0:n.projection)||(n.projection=new r(e,n.getLatestValues(),(i=n.parent)===null||i===void 0?void 0:i.projection),n.projection.setOptions({layoutId:o,layout:a,alwaysMeasureLayout:Boolean(l)||u&&$n(u),visualElement:n,scheduleRender:function(){return n.scheduleRender()},animationType:typeof a=="string"?a:"both",initialPromotionConfig:c,layoutScroll:s}))}var qy=function(e){Vd(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.getSnapshotBeforeUpdate=function(){return this.updateProps(),null},t.prototype.componentDidUpdate=function(){},t.prototype.updateProps=function(){var n=this.props,r=n.visualElement,i=n.props;r&&r.setProps(i)},t.prototype.render=function(){return this.props.children},t}(Q.Component);function by(e){var t=e.preloadedFeatures,n=e.createVisualElement,r=e.projectionNodeConstructor,i=e.useRender,o=e.useVisualState,a=e.Component;t&&V0(t);function l(u,s){var c=e1(u);u=k(k({},u),{layoutId:c});var d=L.exports.useContext(su),f=null,v=$0(u),h=d.isStatic?void 0:Zy(),y=o(u,d.isStatic);return!d.isStatic&&Bn&&(v.visualElement=F0(a,y,k(k({},d),u),n),Jy(h,u,v.visualElement,r||Ur.projectionNodeConstructor),f=A0(u,v.visualElement,t)),L.exports.createElement(qy,{visualElement:v.visualElement,props:k(k({},d),u)},f,L.exports.createElement(To.Provider,{value:v},i(a,u,h,z0(y,v.visualElement,s),y,d.isStatic,v.visualElement)))}return L.exports.forwardRef(l)}function e1(e){var t,n=e.layoutId,r=(t=L.exports.useContext(Uu))===null||t===void 0?void 0:t.id;return r&&n!==void 0?r+"-"+n:n}function t1(e){function t(r,i){return i===void 0&&(i={}),by(e(r,i))}if(typeof Proxy=="undefined")return t;var n=new Map;return new Proxy(t,{get:function(r,i){return n.has(i)||n.set(i,t(i)),n.get(i)}})}var n1=["animate","circle","defs","desc","ellipse","g","image","line","filter","marker","mask","metadata","path","pattern","polygon","polyline","rect","stop","svg","switch","symbol","text","tspan","use","view"];function Bu(e){return typeof e!="string"||e.includes("-")?!1:!!(n1.indexOf(e)>-1||/[A-Z]/.test(e))}function av(e,t){var n=t.layout,r=t.layoutId;return ri(e)||Jp(e)||(n||r!==void 0)&&(!!Wo[e]||e==="opacity")}var r1={x:"translateX",y:"translateY",z:"translateZ",transformPerspective:"perspective"};function i1(e,t,n,r){var i=e.transform,o=e.transformKeys,a=t.enableHardwareAcceleration,l=a===void 0?!0:a,u=t.allowTransformNone,s=u===void 0?!0:u,c="";o.sort(Ry);for(var d=!1,f=o.length,v=0;v<f;v++){var h=o[v];c+="".concat(r1[h]||h,"(").concat(i[h],") "),h==="z"&&(d=!0)}return!d&&l?c+="translateZ(0)":c=c.trim(),r?c=r(i,n?"":c):s&&n&&(c="none"),c}function o1(e){var t=e.originX,n=t===void 0?"50%":t,r=e.originY,i=r===void 0?"50%":r,o=e.originZ,a=o===void 0?0:o;return"".concat(n," ").concat(i," ").concat(a)}function lv(e){return e.startsWith("--")}var a1=function(e,t){return t&&typeof e=="number"?t.transform(e):e};function $u(e,t,n,r){var i,o=e.style,a=e.vars,l=e.transform,u=e.transformKeys,s=e.transformOrigin;u.length=0;var c=!1,d=!1,f=!0;for(var v in t){var h=t[v];if(lv(v)){a[v]=h;continue}var y=Cp[v],x=a1(h,y);if(ri(v)){if(c=!0,l[v]=x,u.push(v),!f)continue;h!==((i=y.default)!==null&&i!==void 0?i:0)&&(f=!1)}else Jp(v)?(s[v]=x,d=!0):o[v]=x}c?o.transform=i1(e,n,f,r):r?o.transform=r({},""):!t.transform&&o.transform&&(o.transform="none"),d&&(o.transformOrigin=o1(s))}var Hu=function(){return{style:{},transform:{},transformKeys:[],transformOrigin:{},vars:{}}};function uv(e,t,n){for(var r in t)!Pt(t[r])&&!av(r,n)&&(e[r]=t[r])}function l1(e,t,n){var r=e.transformTemplate;return L.exports.useMemo(function(){var i=Hu();$u(i,t,{enableHardwareAcceleration:!n},r);var o=i.vars,a=i.style;return k(k({},o),a)},[t])}function u1(e,t,n){var r=e.style||{},i={};return uv(i,r,e),Object.assign(i,l1(e,t,n)),e.transformValues&&(i=e.transformValues(i)),i}function s1(e,t,n){var r={},i=u1(e,t,n);return Boolean(e.drag)&&e.dragListener!==!1&&(r.draggable=!1,i.userSelect=i.WebkitUserSelect=i.WebkitTouchCallout="none",i.touchAction=e.drag===!0?"none":"pan-".concat(e.drag==="x"?"y":"x")),r.style=i,r}var c1=new Set(["initial","animate","exit","style","variants","transition","transformTemplate","transformValues","custom","inherit","layout","layoutId","layoutDependency","onLayoutAnimationStart","onLayoutAnimationComplete","onLayoutMeasure","onBeforeLayoutMeasure","onAnimationStart","onAnimationComplete","onUpdate","onDragStart","onDrag","onDragEnd","onMeasureDragConstraints","onDirectionLock","onDragTransitionEnd","drag","dragControls","dragListener","dragConstraints","dragDirectionLock","dragSnapToOrigin","_dragX","_dragY","dragElastic","dragMomentum","dragPropagation","dragTransition","whileDrag","onPan","onPanStart","onPanEnd","onPanSessionStart","onTap","onTapStart","onTapCancel","onHoverStart","onHoverEnd","whileFocus","whileTap","whileHover","whileInView","onViewportEnter","onViewportLeave","viewport","layoutScroll"]);function Qo(e){return c1.has(e)}var sv=function(e){return!Qo(e)};function f1(e){!e||(sv=function(t){return t.startsWith("on")?!Qo(t):e(t)})}try{f1(require("@emotion/is-prop-valid").default)}catch{}function d1(e,t,n){var r={};for(var i in e)(sv(i)||n===!0&&Qo(i)||!t&&!Qo(i)||e.draggable&&i.startsWith("onDrag"))&&(r[i]=e[i]);return r}function cv(e,t,n){return typeof e=="string"?e:O.transform(t+n*e)}function p1(e,t,n){var r=cv(t,e.x,e.width),i=cv(n,e.y,e.height);return"".concat(r," ").concat(i)}var v1={offset:"stroke-dashoffset",array:"stroke-dasharray"},m1={offset:"strokeDashoffset",array:"strokeDasharray"};function h1(e,t,n,r,i){n===void 0&&(n=1),r===void 0&&(r=0),i===void 0&&(i=!0),e.pathLength=1;var o=i?v1:m1;e[o.offset]=O.transform(-r);var a=O.transform(t),l=O.transform(n);e[o.array]="".concat(a," ").concat(l)}function Wu(e,t,n,r){var i=t.attrX,o=t.attrY,a=t.originX,l=t.originY,u=t.pathLength,s=t.pathSpacing,c=s===void 0?1:s,d=t.pathOffset,f=d===void 0?0:d,v=Ke(t,["attrX","attrY","originX","originY","pathLength","pathSpacing","pathOffset"]);$u(e,v,n,r),e.attrs=e.style,e.style={};var h=e.attrs,y=e.style,x=e.dimensions;h.transform&&(x&&(y.transform=h.transform),delete h.transform),x&&(a!==void 0||l!==void 0||y.transform)&&(y.transformOrigin=p1(x,a!==void 0?a:.5,l!==void 0?l:.5)),i!==void 0&&(h.x=i),o!==void 0&&(h.y=o),u!==void 0&&h1(h,u,c,f,!1)}var fv=function(){return k(k({},Hu()),{attrs:{}})};function g1(e,t){var n=L.exports.useMemo(function(){var i=fv();return Wu(i,t,{enableHardwareAcceleration:!1},e.transformTemplate),k(k({},i.attrs),{style:k({},i.style)})},[t]);if(e.style){var r={};uv(r,e.style,e),n.style=k(k({},r),n.style)}return n}function y1(e){e===void 0&&(e=!1);var t=function(n,r,i,o,a,l){var u=a.latestValues,s=Bu(n)?g1:s1,c=s(r,u,l),d=d1(r,typeof n=="string",e),f=k(k(k({},d),c),{ref:o});return i&&(f["data-projection-id"]=i),L.exports.createElement(n,f)};return t}var S1=/([a-z])([A-Z])/g,w1="$1-$2",dv=function(e){return e.replace(S1,w1).toLowerCase()};function pv(e,t,n,r){var i=t.style,o=t.vars;Object.assign(e.style,i,r&&r.getProjectionStyles(n));for(var a in o)e.style.setProperty(a,o[a])}var vv=new Set(["baseFrequency","diffuseConstant","kernelMatrix","kernelUnitLength","keySplines","keyTimes","limitingConeAngle","markerHeight","markerWidth","numOctaves","targetX","targetY","surfaceScale","specularConstant","specularExponent","stdDeviation","tableValues","viewBox","gradientTransform","pathLength"]);function mv(e,t,n,r){pv(e,t,void 0,r);for(var i in t.attrs)e.setAttribute(vv.has(i)?i:dv(i),t.attrs[i])}function Ku(e){var t=e.style,n={};for(var r in t)(Pt(t[r])||av(r,e))&&(n[r]=t[r]);return n}function hv(e){var t=Ku(e);for(var n in e)if(Pt(e[n])){var r=n==="x"||n==="y"?"attr"+n.toUpperCase():n;t[r]=e[n]}return t}function Qu(e){return typeof e=="object"&&typeof e.start=="function"}function gv(e,t,n,r){var i=e.scrapeMotionValuesFromProps,o=e.createRenderState,a=e.onMount,l={latestValues:x1(t,n,r,i),renderState:o()};return a&&(l.mount=function(u){return a(t,u,l)}),l}var yv=function(e){return function(t,n){var r=L.exports.useContext(To),i=L.exports.useContext(Br);return n?gv(e,t,r,i):$r(function(){return gv(e,t,r,i)})}};function x1(e,t,n,r){var i={},o=(n==null?void 0:n.initial)===!1,a=r(e);for(var l in a)i[l]=Ko(a[l]);var u=e.initial,s=e.animate,c=_o(e),d=Nd(e);t&&d&&!c&&e.inherit!==!1&&(u!=null||(u=t.initial),s!=null||(s=t.animate));var f=o||u===!1,v=f?s:u;if(v&&typeof v!="boolean"&&!Qu(v)){var h=Array.isArray(v)?v:[v];h.forEach(function(y){var x=Od(e,y);if(!!x){var m=x.transitionEnd;x.transition;var p=Ke(x,["transitionEnd","transition"]);for(var g in p){var S=p[g];if(Array.isArray(S)){var w=f?S.length-1:0;S=S[w]}S!==null&&(i[g]=S)}for(var g in m)i[g]=m[g]}})}return i}var E1={useVisualState:yv({scrapeMotionValuesFromProps:hv,createRenderState:fv,onMount:function(e,t,n){var r=n.renderState,i=n.latestValues;try{r.dimensions=typeof t.getBBox=="function"?t.getBBox():t.getBoundingClientRect()}catch{r.dimensions={x:0,y:0,width:0,height:0}}Wu(r,i,{enableHardwareAcceleration:!1},e.transformTemplate),mv(t,r)}})},C1={useVisualState:yv({scrapeMotionValuesFromProps:Ku,createRenderState:Hu})};function P1(e,t,n,r,i){var o=t.forwardMotionProps,a=o===void 0?!1:o,l=Bu(e)?E1:C1;return k(k({},l),{preloadedFeatures:n,useRender:y1(a),createVisualElement:r,projectionNodeConstructor:i,Component:e})}var K;(function(e){e.Animate="animate",e.Hover="whileHover",e.Tap="whileTap",e.Drag="whileDrag",e.Focus="whileFocus",e.InView="whileInView",e.Exit="exit"})(K||(K={}));function Go(e,t,n,r){return r===void 0&&(r={passive:!0}),e.addEventListener(t,n,r),function(){return e.removeEventListener(t,n)}}function Gu(e,t,n,r){L.exports.useEffect(function(){var i=e.current;if(n&&i)return Go(i,t,n,r)},[e,t,n,r])}function T1(e){var t=e.whileFocus,n=e.visualElement,r=function(){var o;(o=n.animationState)===null||o===void 0||o.setActive(K.Focus,!0)},i=function(){var o;(o=n.animationState)===null||o===void 0||o.setActive(K.Focus,!1)};Gu(n,"focus",t?r:void 0),Gu(n,"blur",t?i:void 0)}function Sv(e){return typeof PointerEvent!="undefined"&&e instanceof PointerEvent?e.pointerType==="mouse":e instanceof MouseEvent}function wv(e){var t=!!e.touches;return t}function k1(e){return function(t){var n=t instanceof MouseEvent,r=!n||n&&t.button===0;r&&e(t)}}var L1={pageX:0,pageY:0};function _1(e,t){t===void 0&&(t="page");var n=e.touches[0]||e.changedTouches[0],r=n||L1;return{x:r[t+"X"],y:r[t+"Y"]}}function V1(e,t){return t===void 0&&(t="page"),{x:e[t+"X"],y:e[t+"Y"]}}function Yu(e,t){return t===void 0&&(t="page"),{point:wv(e)?_1(e,t):V1(e,t)}}var xv=function(e,t){t===void 0&&(t=!1);var n=function(r){return e(r,Yu(r))};return t?k1(n):n},M1=function(){return Bn&&window.onpointerdown===null},R1=function(){return Bn&&window.ontouchstart===null},A1=function(){return Bn&&window.onmousedown===null},D1={pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointercancel:"mousecancel",pointerover:"mouseover",pointerout:"mouseout",pointerenter:"mouseenter",pointerleave:"mouseleave"},O1={pointerdown:"touchstart",pointermove:"touchmove",pointerup:"touchend",pointercancel:"touchcancel"};function Ev(e){return M1()?e:R1()?O1[e]:A1()?D1[e]:e}function Yn(e,t,n,r){return Go(e,Ev(t),xv(n,t==="pointerdown"),r)}function Yo(e,t,n,r){return Gu(e,Ev(t),n&&xv(n,t==="pointerdown"),r)}function Cv(e){var t=null;return function(){var n=function(){t=null};return t===null?(t=e,n):!1}}var Pv=Cv("dragHorizontal"),Tv=Cv("dragVertical");function kv(e){var t=!1;if(e==="y")t=Tv();else if(e==="x")t=Pv();else{var n=Pv(),r=Tv();n&&r?t=function(){n(),r()}:(n&&n(),r&&r())}return t}function Lv(){var e=kv(!0);return e?(e(),!1):!0}function _v(e,t,n){return function(r,i){var o;!Sv(r)||Lv()||((o=e.animationState)===null||o===void 0||o.setActive(K.Hover,t),n==null||n(r,i))}}function N1(e){var t=e.onHoverStart,n=e.onHoverEnd,r=e.whileHover,i=e.visualElement;Yo(i,"pointerenter",t||r?_v(i,!0,t):void 0,{passive:!t}),Yo(i,"pointerleave",n||r?_v(i,!1,n):void 0,{passive:!n})}var Vv=function(e,t){return t?e===t?!0:Vv(e,t.parentElement):!1};function Xu(e){return L.exports.useEffect(function(){return function(){return e()}},[])}function I1(e){var t=e.onTap,n=e.onTapStart,r=e.onTapCancel,i=e.whileTap,o=e.visualElement,a=t||n||r||i,l=L.exports.useRef(!1),u=L.exports.useRef(null),s={passive:!(n||t||r||h)};function c(){var y;(y=u.current)===null||y===void 0||y.call(u),u.current=null}function d(){var y;return c(),l.current=!1,(y=o.animationState)===null||y===void 0||y.setActive(K.Tap,!1),!Lv()}function f(y,x){!d()||(Vv(o.getInstance(),y.target)?t==null||t(y,x):r==null||r(y,x))}function v(y,x){!d()||r==null||r(y,x)}function h(y,x){var m;c(),!l.current&&(l.current=!0,u.current=Do(Yn(window,"pointerup",f,s),Yn(window,"pointercancel",v,s)),(m=o.animationState)===null||m===void 0||m.setActive(K.Tap,!0),n==null||n(y,x))}Yo(o,"pointerdown",a?h:void 0,s),Xu(c)}var Mv=new Set;function F1(e,t,n){e||Mv.has(t)||(console.warn(t),n&&console.warn(n),Mv.add(t))}var Zu=new WeakMap,Ju=new WeakMap,z1=function(e){var t;(t=Zu.get(e.target))===null||t===void 0||t(e)},j1=function(e){e.forEach(z1)};function U1(e){var t=e.root,n=Ke(e,["root"]),r=t||document;Ju.has(r)||Ju.set(r,{});var i=Ju.get(r),o=JSON.stringify(n);return i[o]||(i[o]=new IntersectionObserver(j1,k({root:t},n))),i[o]}function B1(e,t,n){var r=U1(t);return Zu.set(e,n),r.observe(e),function(){Zu.delete(e),r.unobserve(e)}}function $1(e){var t=e.visualElement,n=e.whileInView,r=e.onViewportEnter,i=e.onViewportLeave,o=e.viewport,a=o===void 0?{}:o,l=L.exports.useRef({hasEnteredView:!1,isInView:!1}),u=Boolean(n||r||i);a.once&&l.current.hasEnteredView&&(u=!1);var s=typeof IntersectionObserver=="undefined"?K1:W1;s(u,l.current,t,a)}var H1={some:0,all:1};function W1(e,t,n,r){var i=r.root,o=r.margin,a=r.amount,l=a===void 0?"some":a,u=r.once;L.exports.useEffect(function(){if(!!e){var s={root:i==null?void 0:i.current,rootMargin:o,threshold:typeof l=="number"?l:H1[l]},c=function(d){var f,v=d.isIntersecting;if(t.isInView!==v&&(t.isInView=v,!(u&&!v&&t.hasEnteredView))){v&&(t.hasEnteredView=!0),(f=n.animationState)===null||f===void 0||f.setActive(K.InView,v);var h=n.getProps(),y=v?h.onViewportEnter:h.onViewportLeave;y==null||y(d)}};return B1(n.getInstance(),s,c)}},[e,i,o,l])}function K1(e,t,n,r){var i=r.fallback,o=i===void 0?!0:i;L.exports.useEffect(function(){!e||!o||(uu!=="production"&&F1(!1,"IntersectionObserver not available on this device. whileInView animations will trigger on mount."),requestAnimationFrame(function(){var a;t.hasEnteredView=!0;var l=n.getProps().onViewportEnter;l==null||l(null),(a=n.animationState)===null||a===void 0||a.setActive(K.InView,!0)}))},[e])}var Yt=function(e){return function(t){return e(t),null}},Q1={inView:Yt($1),tap:Yt(I1),focus:Yt(T1),hover:Yt(N1)},G1=0,Y1=function(){return G1++},Rv=function(){return $r(Y1)};function Av(){var e=L.exports.useContext(Br);if(e===null)return[!0,null];var t=e.isPresent,n=e.onExitComplete,r=e.register,i=Rv();L.exports.useEffect(function(){return r(i)},[]);var o=function(){return n==null?void 0:n(i)};return!t&&n?[!1,o]:[!0]}function Dv(e,t){if(!Array.isArray(t))return!1;var n=t.length;if(n!==e.length)return!1;for(var r=0;r<n;r++)if(t[r]!==e[r])return!1;return!0}var X1=function(e){return/^\-?\d*\.?\d+$/.test(e)},Z1=function(e){return/^0[^.\s]+$/.test(e)},Ov=function(e){return function(t){return t.test(e)}},J1={test:function(e){return e==="auto"},parse:function(e){return e}},Nv=[sn,O,ut,Kt,og,ig,J1],oi=function(e){return Nv.find(Ov(e))},q1=et(et([],te(Nv),!1),[Ce,Ct],!1),b1=function(e){return q1.find(Ov(e))};function eS(e,t,n){e.hasValue(t)?e.getValue(t).set(n):e.addValue(t,Kn(n))}function tS(e,t){var n=Lo(e,t),r=n?e.makeTargetAnimatable(n,!1):{},i=r.transitionEnd,o=i===void 0?{}:i;r.transition;var a=Ke(r,["transitionEnd","transition"]);a=k(k({},a),o);for(var l in a){var u=Pp(a[l]);eS(e,l,u)}}function nS(e,t,n){var r,i,o,a,l=Object.keys(t).filter(function(v){return!e.hasValue(v)}),u=l.length;if(!!u)for(var s=0;s<u;s++){var c=l[s],d=t[c],f=null;Array.isArray(d)&&(f=d[0]),f===null&&(f=(i=(r=n[c])!==null&&r!==void 0?r:e.readValue(c))!==null&&i!==void 0?i:t[c]),f!=null&&(typeof f=="string"&&(X1(f)||Z1(f))?f=parseFloat(f):!b1(f)&&Ct.test(d)&&(f=Ou(c,d)),e.addValue(c,Kn(f)),(o=(a=n)[c])!==null&&o!==void 0||(a[c]=f),e.setBaseTarget(c,f))}}function rS(e,t){if(!!t){var n=t[e]||t.default||t;return n.from}}function iS(e,t,n){var r,i,o={};for(var a in e)o[a]=(r=rS(a,t))!==null&&r!==void 0?r:(i=n.getValue(a))===null||i===void 0?void 0:i.get();return o}function oS(e,t,n){n===void 0&&(n={}),e.notifyAnimationStart(t);var r;if(Array.isArray(t)){var i=t.map(function(a){return qu(e,a,n)});r=Promise.all(i)}else if(typeof t=="string")r=qu(e,t,n);else{var o=typeof t=="function"?Lo(e,t,n.custom):t;r=Iv(e,o,n)}return r.then(function(){return e.notifyAnimationComplete(t)})}function qu(e,t,n){var r;n===void 0&&(n={});var i=Lo(e,t,n.custom),o=(i||{}).transition,a=o===void 0?e.getDefaultTransition()||{}:o;n.transitionOverride&&(a=n.transitionOverride);var l=i?function(){return Iv(e,i,n)}:function(){return Promise.resolve()},u=!((r=e.variantChildren)===null||r===void 0)&&r.size?function(v){v===void 0&&(v=0);var h=a.delayChildren,y=h===void 0?0:h,x=a.staggerChildren,m=a.staggerDirection;return aS(e,t,y+v,x,m,n)}:function(){return Promise.resolve()},s=a.when;if(s){var c=te(s==="beforeChildren"?[l,u]:[u,l],2),d=c[0],f=c[1];return d().then(f)}else return Promise.all([l(),u(n.delay)])}function Iv(e,t,n){var r,i=n===void 0?{}:n,o=i.delay,a=o===void 0?0:o,l=i.transitionOverride,u=i.type,s=e.makeTargetAnimatable(t),c=s.transition,d=c===void 0?e.getDefaultTransition():c,f=s.transitionEnd,v=Ke(s,["transition","transitionEnd"]);l&&(d=l);var h=[],y=u&&((r=e.animationState)===null||r===void 0?void 0:r.getState()[u]);for(var x in v){var m=e.getValue(x),p=v[x];if(!(!m||p===void 0||y&&uS(y,x))){var g=k({delay:a},d);e.shouldReduceMotion&&ri(x)&&(g=k(k({},g),{type:!1,delay:0}));var S=Iu(x,m,p,g);h.push(S)}}return Promise.all(h).then(function(){f&&tS(e,f)})}function aS(e,t,n,r,i,o){n===void 0&&(n=0),r===void 0&&(r=0),i===void 0&&(i=1);var a=[],l=(e.variantChildren.size-1)*r,u=i===1?function(s){return s===void 0&&(s=0),s*r}:function(s){return s===void 0&&(s=0),l-s*r};return Array.from(e.variantChildren).sort(lS).forEach(function(s,c){a.push(qu(s,t,k(k({},o),{delay:n+u(c)})).then(function(){return s.notifyAnimationComplete(t)}))}),Promise.all(a)}function lS(e,t){return e.sortNodePosition(t)}function uS(e,t){var n=e.protectedKeys,r=e.needsAnimating,i=n.hasOwnProperty(t)&&r[t]!==!0;return r[t]=!1,i}var bu=[K.Animate,K.InView,K.Focus,K.Hover,K.Tap,K.Drag,K.Exit],sS=et([],te(bu),!1).reverse(),cS=bu.length;function fS(e){return function(t){return Promise.all(t.map(function(n){var r=n.animation,i=n.options;return oS(e,r,i)}))}}function dS(e){var t=fS(e),n=vS(),r={},i=!0,o=function(c,d){var f=Lo(e,d);if(f){f.transition;var v=f.transitionEnd,h=Ke(f,["transition","transitionEnd"]);c=k(k(k({},c),h),v)}return c};function a(c){return r[c]!==void 0}function l(c){t=c(e)}function u(c,d){for(var f,v=e.getProps(),h=e.getVariantContext(!0)||{},y=[],x=new Set,m={},p=1/0,g=function(C){var E=sS[C],R=n[E],A=(f=v[E])!==null&&f!==void 0?f:h[E],$=tt(A),ce=E===d?R.isActive:null;ce===!1&&(p=C);var ie=A===h[E]&&A!==v[E]&&$;if(ie&&i&&e.manuallyAnimateOnMount&&(ie=!1),R.protectedKeys=k({},m),!R.isActive&&ce===null||!A&&!R.prevProp||Qu(A)||typeof A=="boolean")return"continue";var Pe=pS(R.prevProp,A),Re=Pe||E===d&&R.isActive&&!ie&&$||C>p&&$,Fe=Array.isArray(A)?A:[A],Qe=Fe.reduce(o,{});ce===!1&&(Qe={});var V=R.prevResolvedValues,N=V===void 0?{}:V,I=k(k({},N),Qe),H=function(D){Re=!0,x.delete(D),R.needsAnimating[D]=!0};for(var U in I){var z=Qe[U],_=N[U];m.hasOwnProperty(U)||(z!==_?qr(z)&&qr(_)?!Dv(z,_)||Pe?H(U):R.protectedKeys[U]=!0:z!==void 0?H(U):x.add(U):z!==void 0&&x.has(U)?H(U):R.protectedKeys[U]=!0)}R.prevProp=A,R.prevResolvedValues=Qe,R.isActive&&(m=k(k({},m),Qe)),i&&e.blockInitialAnimation&&(Re=!1),Re&&!ie&&y.push.apply(y,et([],te(Fe.map(function(D){return{animation:D,options:k({type:E},c)}})),!1))},S=0;S<cS;S++)g(S);if(r=k({},m),x.size){var w={};x.forEach(function(C){var E=e.getBaseTarget(C);E!==void 0&&(w[C]=E)}),y.push({animation:w})}var T=Boolean(y.length);return i&&v.initial===!1&&!e.manuallyAnimateOnMount&&(T=!1),i=!1,T?t(y):Promise.resolve()}function s(c,d,f){var v;if(n[c].isActive===d)return Promise.resolve();(v=e.variantChildren)===null||v===void 0||v.forEach(function(x){var m;return(m=x.animationState)===null||m===void 0?void 0:m.setActive(c,d)}),n[c].isActive=d;var h=u(f,c);for(var y in n)n[y].protectedKeys={};return h}return{isAnimated:a,animateChanges:u,setActive:s,setAnimateFunction:l,getState:function(){return n}}}function pS(e,t){return typeof t=="string"?t!==e:Dd(t)?!Dv(t,e):!1}function dn(e){return e===void 0&&(e=!1),{isActive:e,protectedKeys:{},needsAnimating:{},prevResolvedValues:{}}}function vS(){var e;return e={},e[K.Animate]=dn(!0),e[K.InView]=dn(),e[K.Hover]=dn(),e[K.Tap]=dn(),e[K.Drag]=dn(),e[K.Focus]=dn(),e[K.Exit]=dn(),e}var mS={animation:Yt(function(e){var t=e.visualElement,n=e.animate;t.animationState||(t.animationState=dS(t)),Qu(n)&&L.exports.useEffect(function(){return n.subscribe(t)},[n])}),exit:Yt(function(e){var t=e.custom,n=e.visualElement,r=te(Av(),2),i=r[0],o=r[1],a=L.exports.useContext(Br);L.exports.useEffect(function(){var l,u;n.isPresent=i;var s=(l=n.animationState)===null||l===void 0?void 0:l.setActive(K.Exit,!i,{custom:(u=a==null?void 0:a.custom)!==null&&u!==void 0?u:t});!i&&(s==null||s.then(o))},[i])})},Fv=function(){function e(t,n,r){var i=this,o=r===void 0?{}:r,a=o.transformPagePoint;if(this.startEvent=null,this.lastMoveEvent=null,this.lastMoveEventInfo=null,this.handlers={},this.updatePoint=function(){if(!!(i.lastMoveEvent&&i.lastMoveEventInfo)){var f=ts(i.lastMoveEventInfo,i.history),v=i.startEvent!==null,h=vp(f.offset,{x:0,y:0})>=3;if(!(!v&&!h)){var y=f.point,x=Mo().timestamp;i.history.push(k(k({},y),{timestamp:x}));var m=i.handlers,p=m.onStart,g=m.onMove;v||(p&&p(i.lastMoveEvent,f),i.startEvent=i.lastMoveEvent),g&&g(i.lastMoveEvent,f)}}},this.handlePointerMove=function(f,v){if(i.lastMoveEvent=f,i.lastMoveEventInfo=es(v,i.transformPagePoint),Sv(f)&&f.buttons===0){i.handlePointerUp(f,v);return}nt.update(i.updatePoint,!0)},this.handlePointerUp=function(f,v){i.end();var h=i.handlers,y=h.onEnd,x=h.onSessionEnd,m=ts(es(v,i.transformPagePoint),i.history);i.startEvent&&y&&y(f,m),x&&x(f,m)},!(wv(t)&&t.touches.length>1)){this.handlers=n,this.transformPagePoint=a;var l=Yu(t),u=es(l,this.transformPagePoint),s=u.point,c=Mo().timestamp;this.history=[k(k({},s),{timestamp:c})];var d=n.onSessionStart;d&&d(t,ts(u,this.history)),this.removeListeners=Do(Yn(window,"pointermove",this.handlePointerMove),Yn(window,"pointerup",this.handlePointerUp),Yn(window,"pointercancel",this.handlePointerUp))}}return e.prototype.updateHandlers=function(t){this.handlers=t},e.prototype.end=function(){this.removeListeners&&this.removeListeners(),Wn.update(this.updatePoint)},e}();function es(e,t){return t?{point:t(e.point)}:e}function zv(e,t){return{x:e.x-t.x,y:e.y-t.y}}function ts(e,t){var n=e.point;return{point:n,delta:zv(n,jv(t)),offset:zv(n,hS(t)),velocity:gS(t,.1)}}function hS(e){return e[0]}function jv(e){return e[e.length-1]}function gS(e,t){if(e.length<2)return{x:0,y:0};for(var n=e.length-1,r=null,i=jv(e);n>=0&&(r=e[n],!(i.timestamp-r.timestamp>Bo(t)));)n--;if(!r)return{x:0,y:0};var o=(i.timestamp-r.timestamp)/1e3;if(o===0)return{x:0,y:0};var a={x:(i.x-r.x)/o,y:(i.y-r.y)/o};return a.x===1/0&&(a.x=0),a.y===1/0&&(a.y=0),a}function yS(e,t,n){var r=t.min,i=t.max;return r!==void 0&&e<r?e=n?ne(r,e,n.min):Math.max(e,r):i!==void 0&&e>i&&(e=n?ne(i,e,n.max):Math.min(e,i)),e}function Uv(e,t,n){return{min:t!==void 0?e.min+t:void 0,max:n!==void 0?e.max+n-(e.max-e.min):void 0}}function SS(e,t){var n=t.top,r=t.left,i=t.bottom,o=t.right;return{x:Uv(e.x,r,o),y:Uv(e.y,n,i)}}function Bv(e,t){var n,r=t.min-e.min,i=t.max-e.max;return t.max-t.min<e.max-e.min&&(n=te([i,r],2),r=n[0],i=n[1]),{min:r,max:i}}function wS(e,t){return{x:Bv(e.x,t.x),y:Bv(e.y,t.y)}}function xS(e,t){var n=.5,r=Tt(e),i=Tt(t);return i>r?n=Kr(t.min,t.max-r,e.min):r>i&&(n=Kr(e.min,e.max-i,t.min)),Ro(0,1,n)}function ES(e,t){var n={};return t.min!==void 0&&(n.min=t.min-e.min),t.max!==void 0&&(n.max=t.max-e.min),n}var ns=.35;function CS(e){return e===void 0&&(e=ns),e===!1?e=0:e===!0&&(e=ns),{x:$v(e,"left","right"),y:$v(e,"top","bottom")}}function $v(e,t,n){return{min:Hv(e,t),max:Hv(e,n)}}function Hv(e,t){var n;return typeof e=="number"?e:(n=e[t])!==null&&n!==void 0?n:0}function Wv(e){var t=e.top,n=e.left,r=e.right,i=e.bottom;return{x:{min:n,max:r},y:{min:t,max:i}}}function PS(e){var t=e.x,n=e.y;return{top:n.min,right:t.max,bottom:n.max,left:t.min}}function TS(e,t){if(!t)return e;var n=t({x:e.left,y:e.top}),r=t({x:e.right,y:e.bottom});return{top:n.y,left:n.x,bottom:r.y,right:r.x}}function Kv(e,t){return Wv(TS(e.getBoundingClientRect(),t))}function kS(e,t,n){var r=Kv(e,n),i=t.scroll;return i&&(Qn(r.x,i.x),Qn(r.y,i.y)),r}var LS=new WeakMap,_S=function(){function e(t){this.openGlobalLock=null,this.isDragging=!1,this.currentDirection=null,this.originPoint={x:0,y:0},this.constraints=!1,this.hasMutatedConstraints=!1,this.elastic=ye(),this.visualElement=t}return e.prototype.start=function(t,n){var r=this,i=n===void 0?{}:n,o=i.snapToCursor,a=o===void 0?!1:o;if(this.visualElement.isPresent!==!1){var l=function(d){r.stopAnimation(),a&&r.snapToCursor(Yu(d,"page").point)},u=function(d,f){var v,h=r.getProps(),y=h.drag,x=h.dragPropagation,m=h.onDragStart;y&&!x&&(r.openGlobalLock&&r.openGlobalLock(),r.openGlobalLock=kv(y),!r.openGlobalLock)||(r.isDragging=!0,r.currentDirection=null,r.resolveConstraints(),r.visualElement.projection&&(r.visualElement.projection.isAnimationBlocked=!0,r.visualElement.projection.target=void 0),ct(function(p){var g,S,w=r.getAxisMotionValue(p).get()||0;if(ut.test(w)){var T=(S=(g=r.visualElement.projection)===null||g===void 0?void 0:g.layout)===null||S===void 0?void 0:S.actual[p];if(T){var C=Tt(T);w=C*(parseFloat(w)/100)}}r.originPoint[p]=w}),m==null||m(d,f),(v=r.visualElement.animationState)===null||v===void 0||v.setActive(K.Drag,!0))},s=function(d,f){var v=r.getProps(),h=v.dragPropagation,y=v.dragDirectionLock,x=v.onDirectionLock,m=v.onDrag;if(!(!h&&!r.openGlobalLock)){var p=f.offset;if(y&&r.currentDirection===null){r.currentDirection=VS(p),r.currentDirection!==null&&(x==null||x(r.currentDirection));return}r.updateAxis("x",f.point,p),r.updateAxis("y",f.point,p),r.visualElement.syncRender(),m==null||m(d,f)}},c=function(d,f){return r.stop(d,f)};this.panSession=new Fv(t,{onSessionStart:l,onStart:u,onMove:s,onSessionEnd:c},{transformPagePoint:this.visualElement.getTransformPagePoint()})}},e.prototype.stop=function(t,n){var r=this.isDragging;if(this.cancel(),!!r){var i=n.velocity;this.startAnimation(i);var o=this.getProps().onDragEnd;o==null||o(t,n)}},e.prototype.cancel=function(){var t,n;this.isDragging=!1,this.visualElement.projection&&(this.visualElement.projection.isAnimationBlocked=!1),(t=this.panSession)===null||t===void 0||t.end(),this.panSession=void 0;var r=this.getProps().dragPropagation;!r&&this.openGlobalLock&&(this.openGlobalLock(),this.openGlobalLock=null),(n=this.visualElement.animationState)===null||n===void 0||n.setActive(K.Drag,!1)},e.prototype.updateAxis=function(t,n,r){var i=this.getProps().drag;if(!(!r||!Xo(t,i,this.currentDirection))){var o=this.getAxisMotionValue(t),a=this.originPoint[t]+r[t];this.constraints&&this.constraints[t]&&(a=yS(a,this.constraints[t],this.elastic[t])),o.set(a)}},e.prototype.resolveConstraints=function(){var t=this,n=this.getProps(),r=n.dragConstraints,i=n.dragElastic,o=(this.visualElement.projection||{}).layout,a=this.constraints;r&&$n(r)?this.constraints||(this.constraints=this.resolveRefConstraints()):r&&o?this.constraints=SS(o.actual,r):this.constraints=!1,this.elastic=CS(i),a!==this.constraints&&o&&this.constraints&&!this.hasMutatedConstraints&&ct(function(l){t.getAxisMotionValue(l)&&(t.constraints[l]=ES(o.actual[l],t.constraints[l]))})},e.prototype.resolveRefConstraints=function(){var t=this.getProps(),n=t.dragConstraints,r=t.onMeasureDragConstraints;if(!n||!$n(n))return!1;var i=n.current,o=this.visualElement.projection;if(!o||!o.layout)return!1;var a=kS(i,o.root,this.visualElement.getTransformPagePoint()),l=wS(o.layout.actual,a);if(r){var u=r(PS(l));this.hasMutatedConstraints=!!u,u&&(l=Wv(u))}return l},e.prototype.startAnimation=function(t){var n=this,r=this.getProps(),i=r.drag,o=r.dragMomentum,a=r.dragElastic,l=r.dragTransition,u=r.dragSnapToOrigin,s=r.onDragTransitionEnd,c=this.constraints||{},d=ct(function(f){var v;if(!!Xo(f,i,n.currentDirection)){var h=(v=c==null?void 0:c[f])!==null&&v!==void 0?v:{};u&&(h={min:0,max:0});var y=a?200:1e6,x=a?40:1e7,m=k(k({type:"inertia",velocity:o?t[f]:0,bounceStiffness:y,bounceDamping:x,timeConstant:750,restDelta:1,restSpeed:10},l),h);return n.startAxisValueAnimation(f,m)}});return Promise.all(d).then(s)},e.prototype.startAxisValueAnimation=function(t,n){var r=this.getAxisMotionValue(t);return Iu(t,r,0,n)},e.prototype.stopAnimation=function(){var t=this;ct(function(n){return t.getAxisMotionValue(n).stop()})},e.prototype.getAxisMotionValue=function(t){var n,r,i="_drag"+t.toUpperCase(),o=this.visualElement.getProps()[i];return o||this.visualElement.getValue(t,(r=(n=this.visualElement.getProps().initial)===null||n===void 0?void 0:n[t])!==null&&r!==void 0?r:0)},e.prototype.snapToCursor=function(t){var n=this;ct(function(r){var i=n.getProps().drag;if(!!Xo(r,i,n.currentDirection)){var o=n.visualElement.projection,a=n.getAxisMotionValue(r);if(o&&o.layout){var l=o.layout.actual[r],u=l.min,s=l.max;a.set(t[r]-ne(u,s,.5))}}})},e.prototype.scalePositionWithinConstraints=function(){var t=this,n,r=this.getProps(),i=r.drag,o=r.dragConstraints,a=this.visualElement.projection;if(!(!$n(o)||!a||!this.constraints)){this.stopAnimation();var l={x:0,y:0};ct(function(s){var c=t.getAxisMotionValue(s);if(c){var d=c.get();l[s]=xS({min:d,max:d},t.constraints[s])}});var u=this.visualElement.getProps().transformTemplate;this.visualElement.getInstance().style.transform=u?u({},""):"none",(n=a.root)===null||n===void 0||n.updateScroll(),a.updateLayout(),this.resolveConstraints(),ct(function(s){if(!!Xo(s,i,null)){var c=t.getAxisMotionValue(s),d=t.constraints[s],f=d.min,v=d.max;c.set(ne(f,v,l[s]))}})}},e.prototype.addListeners=function(){var t=this,n;LS.set(this.visualElement,this);var r=this.visualElement.getInstance(),i=Yn(r,"pointerdown",function(s){var c=t.getProps(),d=c.drag,f=c.dragListener,v=f===void 0?!0:f;d&&v&&t.start(s)}),o=function(){var s=t.getProps().dragConstraints;$n(s)&&(t.constraints=t.resolveRefConstraints())},a=this.visualElement.projection,l=a.addEventListener("measure",o);a&&!a.layout&&((n=a.root)===null||n===void 0||n.updateScroll(),a.updateLayout()),o();var u=Go(window,"resize",function(){return t.scalePositionWithinConstraints()});return a.addEventListener("didUpdate",function(s){var c=s.delta,d=s.hasLayoutChanged;t.isDragging&&d&&(ct(function(f){var v=t.getAxisMotionValue(f);!v||(t.originPoint[f]+=c[f].translate,v.set(v.get()+c[f].translate))}),t.visualElement.syncRender())}),function(){u(),i(),l()}},e.prototype.getProps=function(){var t=this.visualElement.getProps(),n=t.drag,r=n===void 0?!1:n,i=t.dragDirectionLock,o=i===void 0?!1:i,a=t.dragPropagation,l=a===void 0?!1:a,u=t.dragConstraints,s=u===void 0?!1:u,c=t.dragElastic,d=c===void 0?ns:c,f=t.dragMomentum,v=f===void 0?!0:f;return k(k({},t),{drag:r,dragDirectionLock:o,dragPropagation:l,dragConstraints:s,dragElastic:d,dragMomentum:v})},e}();function Xo(e,t,n){return(t===!0||t===e)&&(n===null||n===e)}function VS(e,t){t===void 0&&(t=10);var n=null;return Math.abs(e.y)>t?n="y":Math.abs(e.x)>t&&(n="x"),n}function MS(e){var t=e.dragControls,n=e.visualElement,r=$r(function(){return new _S(n)});L.exports.useEffect(function(){return t&&t.subscribe(r)},[r,t]),L.exports.useEffect(function(){return r.addListeners()},[r])}function RS(e){var t=e.onPan,n=e.onPanStart,r=e.onPanEnd,i=e.onPanSessionStart,o=e.visualElement,a=t||n||r||i,l=L.exports.useRef(null),u=L.exports.useContext(su).transformPagePoint,s={onSessionStart:i,onStart:n,onMove:t,onEnd:function(d,f){l.current=null,r&&r(d,f)}};L.exports.useEffect(function(){l.current!==null&&l.current.updateHandlers(s)});function c(d){l.current=new Fv(d,s,{transformPagePoint:u})}Yo(o,"pointerdown",a&&c),Xu(function(){return l.current&&l.current.end()})}var AS={pan:Yt(RS),drag:Yt(MS)},Zo=["LayoutMeasure","BeforeLayoutMeasure","LayoutUpdate","ViewportBoxUpdate","Update","Render","AnimationComplete","LayoutAnimationComplete","AnimationStart","LayoutAnimationStart","SetAxisTarget","Unmount"];function DS(){var e=Zo.map(function(){return new Jr}),t={},n={clearAllListeners:function(){return e.forEach(function(r){return r.clear()})},updatePropListeners:function(r){Zo.forEach(function(i){var o,a="on"+i,l=r[a];(o=t[i])===null||o===void 0||o.call(t),l&&(t[i]=n[a](l))})}};return e.forEach(function(r,i){n["on"+Zo[i]]=function(o){return r.add(o)},n["notify"+Zo[i]]=function(){for(var o=[],a=0;a<arguments.length;a++)o[a]=arguments[a];return r.notify.apply(r,et([],te(o),!1))}}),n}function OS(e,t,n){var r;for(var i in t){var o=t[i],a=n[i];if(Pt(o))e.addValue(i,o);else if(Pt(a))e.addValue(i,Kn(o));else if(a!==o)if(e.hasValue(i)){var l=e.getValue(i);!l.hasAnimated&&l.set(o)}else e.addValue(i,Kn((r=e.getStaticValue(i))!==null&&r!==void 0?r:o))}for(var i in n)t[i]===void 0&&e.removeValue(i);return t}var Qv=function(e){var t=e.treeType,n=t===void 0?"":t,r=e.build,i=e.getBaseTarget,o=e.makeTargetAnimatable,a=e.measureViewportBox,l=e.render,u=e.readValueFromInstance,s=e.removeValueFromRenderState,c=e.sortNodePosition,d=e.scrapeMotionValuesFromProps;return function(f,v){var h=f.parent,y=f.props,x=f.presenceId,m=f.blockInitialAnimation,p=f.visualState,g=f.shouldReduceMotion;v===void 0&&(v={});var S=!1,w=p.latestValues,T=p.renderState,C,E=DS(),R=new Map,A=new Map,$={},ce=k({},w),ie;function Pe(){!C||!S||(Re(),l(C,T,y.style,z.projection))}function Re(){r(z,T,w,v,y)}function Fe(){E.notifyUpdate(w)}function Qe(_,D){var b=D.onChange(function(Jo){w[_]=Jo,y.onUpdate&&nt.update(Fe,!1,!0)}),ft=D.onRenderRequest(z.scheduleRender);A.set(_,function(){b(),ft()})}var V=d(y);for(var N in V){var I=V[N];w[N]!==void 0&&Pt(I)&&I.set(w[N],!1)}var H=_o(y),U=Nd(y),z=k(k({treeType:n,current:null,depth:h?h.depth+1:0,parent:h,children:new Set,presenceId:x,shouldReduceMotion:g,variantChildren:U?new Set:void 0,isVisible:void 0,manuallyAnimateOnMount:Boolean(h==null?void 0:h.isMounted()),blockInitialAnimation:m,isMounted:function(){return Boolean(C)},mount:function(_){S=!0,C=z.current=_,z.projection&&z.projection.mount(_),U&&h&&!H&&(ie=h==null?void 0:h.addVariantChild(z)),R.forEach(function(D,b){return Qe(b,D)}),h==null||h.children.add(z),z.setProps(y)},unmount:function(){var _;(_=z.projection)===null||_===void 0||_.unmount(),Wn.update(Fe),Wn.render(Pe),A.forEach(function(D){return D()}),ie==null||ie(),h==null||h.children.delete(z),E.clearAllListeners(),C=void 0,S=!1},addVariantChild:function(_){var D,b=z.getClosestVariantNode();if(b)return(D=b.variantChildren)===null||D===void 0||D.add(_),function(){return b.variantChildren.delete(_)}},sortNodePosition:function(_){return!c||n!==_.treeType?0:c(z.getInstance(),_.getInstance())},getClosestVariantNode:function(){return U?z:h==null?void 0:h.getClosestVariantNode()},getLayoutId:function(){return y.layoutId},getInstance:function(){return C},getStaticValue:function(_){return w[_]},setStaticValue:function(_,D){return w[_]=D},getLatestValues:function(){return w},setVisibility:function(_){z.isVisible!==_&&(z.isVisible=_,z.scheduleRender())},makeTargetAnimatable:function(_,D){return D===void 0&&(D=!0),o(z,_,y,D)},measureViewportBox:function(){return a(C,y)},addValue:function(_,D){z.hasValue(_)&&z.removeValue(_),R.set(_,D),w[_]=D.get(),Qe(_,D)},removeValue:function(_){var D;R.delete(_),(D=A.get(_))===null||D===void 0||D(),A.delete(_),delete w[_],s(_,T)},hasValue:function(_){return R.has(_)},getValue:function(_,D){var b=R.get(_);return b===void 0&&D!==void 0&&(b=Kn(D),z.addValue(_,b)),b},forEachValue:function(_){return R.forEach(_)},readValue:function(_){var D;return(D=w[_])!==null&&D!==void 0?D:u(C,_,v)},setBaseTarget:function(_,D){ce[_]=D},getBaseTarget:function(_){if(i){var D=i(y,_);if(D!==void 0&&!Pt(D))return D}return ce[_]}},E),{build:function(){return Re(),T},scheduleRender:function(){nt.render(Pe,!1,!0)},syncRender:Pe,setProps:function(_){(_.transformTemplate||y.transformTemplate)&&z.scheduleRender(),y=_,E.updatePropListeners(_),$=OS(z,d(y),$)},getProps:function(){return y},getVariant:function(_){var D;return(D=y.variants)===null||D===void 0?void 0:D[_]},getDefaultTransition:function(){return y.transition},getTransformPagePoint:function(){return y.transformPagePoint},getVariantContext:function(_){if(_===void 0&&(_=!1),_)return h==null?void 0:h.getVariantContext();if(!H){var D=(h==null?void 0:h.getVariantContext())||{};return y.initial!==void 0&&(D.initial=y.initial),D}for(var b={},ft=0;ft<NS;ft++){var Jo=Gv[ft],ls=y[Jo];(tt(ls)||ls===!1)&&(b[Jo]=ls)}return b}});return z}},Gv=et(["initial"],te(bu),!1),NS=Gv.length;function rs(e){return typeof e=="string"&&e.startsWith("var(--")}var Yv=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;function IS(e){var t=Yv.exec(e);if(!t)return[,];var n=te(t,3),r=n[1],i=n[2];return[r,i]}function is(e,t,n){var r=te(IS(e),2),i=r[0],o=r[1];if(!!i){var a=window.getComputedStyle(t).getPropertyValue(i);return a?a.trim():rs(o)?is(o,t):o}}function FS(e,t,n){var r,i=Ke(t,[]),o=e.getInstance();if(!(o instanceof Element))return{target:i,transitionEnd:n};n&&(n=k({},n)),e.forEachValue(function(s){var c=s.get();if(!!rs(c)){var d=is(c,o);d&&s.set(d)}});for(var a in i){var l=i[a];if(!!rs(l)){var u=is(l,o);!u||(i[a]=u,n&&((r=n[a])!==null&&r!==void 0||(n[a]=l)))}}return{target:i,transitionEnd:n}}var zS=new Set(["width","height","top","left","right","bottom","x","y"]),Xv=function(e){return zS.has(e)},jS=function(e){return Object.keys(e).some(Xv)},Zv=function(e,t){e.set(t,!1),e.set(t)},Jv=function(e){return e===sn||e===O},qv;(function(e){e.width="width",e.height="height",e.left="left",e.right="right",e.top="top",e.bottom="bottom"})(qv||(qv={}));var bv=function(e,t){return parseFloat(e.split(", ")[t])},em=function(e,t){return function(n,r){var i=r.transform;if(i==="none"||!i)return 0;var o=i.match(/^matrix3d\((.+)\)$/);if(o)return bv(o[1],t);var a=i.match(/^matrix\((.+)\)$/);return a?bv(a[1],e):0}},US=new Set(["x","y","z"]),BS=ni.filter(function(e){return!US.has(e)});function $S(e){var t=[];return BS.forEach(function(n){var r=e.getValue(n);r!==void 0&&(t.push([n,r.get()]),r.set(n.startsWith("scale")?1:0))}),t.length&&e.syncRender(),t}var tm={width:function(e,t){var n=e.x,r=t.paddingLeft,i=r===void 0?"0":r,o=t.paddingRight,a=o===void 0?"0":o;return n.max-n.min-parseFloat(i)-parseFloat(a)},height:function(e,t){var n=e.y,r=t.paddingTop,i=r===void 0?"0":r,o=t.paddingBottom,a=o===void 0?"0":o;return n.max-n.min-parseFloat(i)-parseFloat(a)},top:function(e,t){var n=t.top;return parseFloat(n)},left:function(e,t){var n=t.left;return parseFloat(n)},bottom:function(e,t){var n=e.y,r=t.top;return parseFloat(r)+(n.max-n.min)},right:function(e,t){var n=e.x,r=t.left;return parseFloat(r)+(n.max-n.min)},x:em(4,13),y:em(5,14)},HS=function(e,t,n){var r=t.measureViewportBox(),i=t.getInstance(),o=getComputedStyle(i),a=o.display,l={};a==="none"&&t.setStaticValue("display",e.display||"block"),n.forEach(function(s){l[s]=tm[s](r,o)}),t.syncRender();var u=t.measureViewportBox();return n.forEach(function(s){var c=t.getValue(s);Zv(c,l[s]),e[s]=tm[s](u,o)}),e},WS=function(e,t,n,r){n===void 0&&(n={}),r===void 0&&(r={}),t=k({},t),r=k({},r);var i=Object.keys(t).filter(Xv),o=[],a=!1,l=[];if(i.forEach(function(c){var d=e.getValue(c);if(!!e.hasValue(c)){var f=n[c],v=oi(f),h=t[c],y;if(qr(h)){var x=h.length,m=h[0]===null?1:0;f=h[m],v=oi(f);for(var p=m;p<x;p++)y?Po(oi(h[p])===y):y=oi(h[p])}else y=oi(h);if(v!==y)if(Jv(v)&&Jv(y)){var g=d.get();typeof g=="string"&&d.set(parseFloat(g)),typeof h=="string"?t[c]=parseFloat(h):Array.isArray(h)&&y===O&&(t[c]=h.map(parseFloat))}else(v==null?void 0:v.transform)&&(y==null?void 0:y.transform)&&(f===0||h===0)?f===0?d.set(y.transform(f)):t[c]=v.transform(h):(a||(o=$S(e),a=!0),l.push(c),r[c]=r[c]!==void 0?r[c]:t[c],Zv(d,h))}}),l.length){var u=l.indexOf("height")>=0?window.pageYOffset:null,s=HS(t,e,l);return o.length&&o.forEach(function(c){var d=te(c,2),f=d[0],v=d[1];e.getValue(f).set(v)}),e.syncRender(),u!==null&&window.scrollTo({top:u}),{target:s,transitionEnd:r}}else return{target:t,transitionEnd:r}};function KS(e,t,n,r){return jS(t)?WS(e,t,n,r):{target:t,transitionEnd:r}}var QS=function(e,t,n,r){var i=FS(e,t,r);return t=i.target,r=i.transitionEnd,KS(e,t,n,r)};function GS(e){return window.getComputedStyle(e)}var nm={treeType:"dom",readValueFromInstance:function(e,t){if(ri(t)){var n=Du(t);return n&&n.default||0}else{var r=GS(e);return(lv(t)?r.getPropertyValue(t):r[t])||0}},sortNodePosition:function(e,t){return e.compareDocumentPosition(t)&2?1:-1},getBaseTarget:function(e,t){var n;return(n=e.style)===null||n===void 0?void 0:n[t]},measureViewportBox:function(e,t){var n=t.transformPagePoint;return Kv(e,n)},resetTransform:function(e,t,n){var r=n.transformTemplate;t.style.transform=r?r({},""):"none",e.scheduleRender()},restoreTransform:function(e,t){e.style.transform=t.style.transform},removeValueFromRenderState:function(e,t){var n=t.vars,r=t.style;delete n[e],delete r[e]},makeTargetAnimatable:function(e,t,n,r){var i=n.transformValues;r===void 0&&(r=!0);var o=t.transition,a=t.transitionEnd,l=Ke(t,["transition","transitionEnd"]),u=iS(l,o||{},e);if(i&&(a&&(a=i(a)),l&&(l=i(l)),u&&(u=i(u))),r){nS(e,l,u);var s=QS(e,l,u,a);a=s.transitionEnd,l=s.target}return k({transition:o,transitionEnd:a},l)},scrapeMotionValuesFromProps:Ku,build:function(e,t,n,r,i){e.isVisible!==void 0&&(t.style.visibility=e.isVisible?"visible":"hidden"),$u(t,n,r,i.transformTemplate)},render:pv},YS=Qv(nm),XS=Qv(k(k({},nm),{getBaseTarget:function(e,t){return e[t]},readValueFromInstance:function(e,t){var n;return ri(t)?((n=Du(t))===null||n===void 0?void 0:n.default)||0:(t=vv.has(t)?t:dv(t),e.getAttribute(t))},scrapeMotionValuesFromProps:hv,build:function(e,t,n,r,i){Wu(t,n,r,i.transformTemplate)},render:mv})),ZS=function(e,t){return Bu(e)?XS(t,{enableHardwareAcceleration:!1}):YS(t,{enableHardwareAcceleration:!0})};function rm(e,t){return t.max===t.min?0:e/(t.max-t.min)*100}var ai={correct:function(e,t){if(!t.target)return e;if(typeof e=="string")if(O.test(e))e=parseFloat(e);else return e;var n=rm(e,t.target.x),r=rm(e,t.target.y);return"".concat(n,"% ").concat(r,"%")}},im="_$css",JS={correct:function(e,t){var n=t.treeScale,r=t.projectionDelta,i=e,o=e.includes("var("),a=[];o&&(e=e.replace(Yv,function(y){return a.push(y),im}));var l=Ct.parse(e);if(l.length>5)return i;var u=Ct.createTransformer(e),s=typeof l[0]!="number"?1:0,c=r.x.scale*n.x,d=r.y.scale*n.y;l[0+s]/=c,l[1+s]/=d;var f=ne(c,d,.5);typeof l[2+s]=="number"&&(l[2+s]/=f),typeof l[3+s]=="number"&&(l[3+s]/=f);var v=u(l);if(o){var h=0;v=v.replace(im,function(){var y=a[h];return h++,y})}return v}},qS=function(e){Vd(t,e);function t(){return e!==null&&e.apply(this,arguments)||this}return t.prototype.componentDidMount=function(){var n=this,r=this.props,i=r.visualElement,o=r.layoutGroup,a=r.switchLayoutGroup,l=r.layoutId,u=i.projection;_y(ew),u&&(o!=null&&o.group&&o.group.add(u),(a==null?void 0:a.register)&&l&&a.register(u),u.root.didUpdate(),u.addEventListener("animationComplete",function(){n.safeToRemove()}),u.setOptions(k(k({},u.options),{onExitComplete:function(){return n.safeToRemove()}}))),ii.hasEverUpdated=!0},t.prototype.getSnapshotBeforeUpdate=function(n){var r=this,i=this.props,o=i.layoutDependency,a=i.visualElement,l=i.drag,u=i.isPresent,s=a.projection;return s&&(s.isPresent=u,l||n.layoutDependency!==o||o===void 0?s.willUpdate():this.safeToRemove(),n.isPresent!==u&&(u?s.promote():s.relegate()||nt.postRender(function(){var c;!((c=s.getStack())===null||c===void 0)&&c.members.length||r.safeToRemove()}))),null},t.prototype.componentDidUpdate=function(){var n=this.props.visualElement.projection;n&&(n.root.didUpdate(),!n.currentAnimation&&n.isLead()&&this.safeToRemove())},t.prototype.componentWillUnmount=function(){var n=this.props,r=n.visualElement,i=n.layoutGroup,o=n.switchLayoutGroup,a=r.projection;a&&(a.scheduleCheckAfterUnmount(),i!=null&&i.group&&i.group.remove(a),o!=null&&o.deregister&&o.deregister(a))},t.prototype.safeToRemove=function(){var n=this.props.safeToRemove;n==null||n()},t.prototype.render=function(){return null},t}(Q.Component);function bS(e){var t=te(Av(),2),n=t[0],r=t[1],i=L.exports.useContext(Uu);return Q.createElement(qS,k({},e,{layoutGroup:i,switchLayoutGroup:L.exports.useContext(ov),isPresent:n,safeToRemove:r}))}var ew={borderRadius:k(k({},ai),{applyTo:["borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius"]}),borderTopLeftRadius:ai,borderTopRightRadius:ai,borderBottomLeftRadius:ai,borderBottomRightRadius:ai,boxShadow:JS},tw={measureLayout:bS},nw=bp({attachResizeListener:function(e,t){return Go(e,"resize",t)},measureScroll:function(){return{x:document.documentElement.scrollLeft||document.body.scrollLeft,y:document.documentElement.scrollTop||document.body.scrollTop}}}),os={current:void 0},rw=bp({measureScroll:function(e){return{x:e.scrollLeft,y:e.scrollTop}},defaultParent:function(){if(!os.current){var e=new nw(0,{});e.mount(window),e.setOptions({layoutScroll:!0}),os.current=e}return os.current},resetTransform:function(e,t){e.style.transform=t!=null?t:"none"}}),iw=k(k(k(k({},mS),Q1),AS),tw),li=t1(function(e,t){return P1(e,t,iw,ZS,rw)});function om(){var e=L.exports.useRef(!1);return ko(function(){return e.current=!0,function(){e.current=!1}},[]),e}function ow(){var e=om(),t=te(L.exports.useState(0),2),n=t[0],r=t[1],i=L.exports.useCallback(function(){e.current&&r(n+1)},[n]),o=L.exports.useCallback(function(){return nt.postRender(i)},[i]);return[o,n]}var as=function(e){var t=e.children,n=e.initial,r=e.isPresent,i=e.onExitComplete,o=e.custom,a=e.presenceAffectsLayout,l=$r(aw),u=Rv(),s=L.exports.useMemo(function(){return{id:u,initial:n,isPresent:r,custom:o,onExitComplete:function(c){var d,f;l.set(c,!0);try{for(var v=L0(l.values()),h=v.next();!h.done;h=v.next()){var y=h.value;if(!y)return}}catch(x){d={error:x}}finally{try{h&&!h.done&&(f=v.return)&&f.call(v)}finally{if(d)throw d.error}}i==null||i()},register:function(c){return l.set(c,!1),function(){return l.delete(c)}}}},a?void 0:[r]);return L.exports.useMemo(function(){l.forEach(function(c,d){return l.set(d,!1)})},[r]),L.exports.useEffect(function(){!r&&!l.size&&(i==null||i())},[r]),L.exports.createElement(Br.Provider,{value:s},t)};function aw(){return new Map}var Xn=function(e){return e.key||""};function lw(e,t){e.forEach(function(n){var r=Xn(n);t.set(r,n)})}function uw(e){var t=[];return L.exports.Children.forEach(e,function(n){L.exports.isValidElement(n)&&t.push(n)}),t}var sw=function(e){var t=e.children,n=e.custom,r=e.initial,i=r===void 0?!0:r,o=e.onExitComplete,a=e.exitBeforeEnter,l=e.presenceAffectsLayout,u=l===void 0?!0:l,s=te(ow(),1),c=s[0],d=L.exports.useContext(Uu).forceRender;d&&(c=d);var f=om(),v=uw(t),h=v,y=new Set,x=L.exports.useRef(h),m=L.exports.useRef(new Map).current,p=L.exports.useRef(!0);if(ko(function(){p.current=!1,lw(v,m),x.current=h}),Xu(function(){p.current=!0,m.clear(),y.clear()}),p.current)return L.exports.createElement(L.exports.Fragment,null,h.map(function(E){return L.exports.createElement(as,{key:Xn(E),isPresent:!0,initial:i?void 0:!1,presenceAffectsLayout:u},E)}));h=et([],te(h),!1);for(var g=x.current.map(Xn),S=v.map(Xn),w=g.length,T=0;T<w;T++){var C=g[T];S.indexOf(C)===-1&&y.add(C)}return a&&y.size&&(h=[]),y.forEach(function(E){if(S.indexOf(E)===-1){var R=m.get(E);if(!!R){var A=g.indexOf(E),$=function(){m.delete(E),y.delete(E);var ce=x.current.findIndex(function(ie){return ie.key===E});if(x.current.splice(ce,1),!y.size){if(x.current=v,f.current===!1)return;c(),o&&o()}};h.splice(A,0,L.exports.createElement(as,{key:Xn(R),isPresent:!1,onExitComplete:$,custom:n,presenceAffectsLayout:u},R))}}}),h=h.map(function(E){var R=E.key;return y.has(R)?E:L.exports.createElement(as,{key:Xn(E),isPresent:!0,presenceAffectsLayout:u},E)}),uu!=="production"&&a&&h.length>1&&console.warn("You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour."),L.exports.createElement(L.exports.Fragment,null,y.size?h:h.map(function(E){return L.exports.cloneElement(E)}))};const am={d:[2,2,2,2,2,2],"d#":[2,2,2,2,2,1],eb:[2,2,2,2,2,1],e:[2,2,2,2,2,0],f:[2,2,2,2,1,0],"f#":[2,2,2,2,0,0],gb:[2,2,2,2,0,0],g:[2,2,2,0,0,0],"g#":[2,2,1,0,0,0],ab:[2,2,1,0,0,0],a:[2,2,0,0,0,0],"a#":[2,1,0,0,0,0],bb:[2,1,0,0,0,0],b:[2,0,0,0,0,0],c:[0,2,2,0,0,0],"c#":[0,0,0,0,0,0],Db:[0,0,0,0,0,0],D:[0,2,2,2,2,2,"+"],"D#":[2,2,2,2,2,1,"+"],Eb:[2,2,2,2,2,1,"+"],E:[2,2,2,2,2,0,"+"],F:[2,2,2,2,1,0,"+"],"F#":[2,2,2,2,0,0,"+"],Gb:[2,2,2,2,0,0,"+"],G:[2,2,2,0,0,0,"+"],"G#":[2,2,1,0,0,0,"+"],Ab:[2,2,1,0,0,0,"+"],A:[2,2,0,0,0,0,"+"],"A#":[2,1,0,0,0,0,"+"],Bb:[2,1,0,0,0,0,"+"],B:[2,0,0,0,0,0,"+"],C:[0,2,2,0,0,0,"+"],"C#":[0,0,0,0,0,0,"+"]},lm={hover:{scale:1.1},hidden:{opacity:0,scale:.4,transition:{duration:.1}},normal:{opacity:1,scale:1}},um={cursor:"pointer"},sm=({note:e,onClick:t,animatePresence:n=!1})=>{if(e==" ")return Q.createElement(li.div,{style:um,onClick:o=>{t&&t(o,e)},className:"note space"});if(e=="Enter")return Q.createElement(li.hr,{onClick:o=>{t&&t(o,e)}});const[r,i]=L.exports.useState(am[e]);return Q.createElement(li.div,{style:um,variants:lm,whileTap:"hover",whileDrag:"hover",whileHover:"hover",whileFocus:"hover",initial:n?"hidden":"",animate:n?"normal":"",exit:n?"hidden":"",className:"note",onClick:o=>{t&&t(o,e)}},r.map(o=>{switch(o){case 0:return Q.createElement("div",{className:"open"});case 1:return Q.createElement("div",{className:"half covered"});case 2:return Q.createElement("div",{className:"covered"});case"+":return Q.createElement("div",{className:"plus"},"+")}}))},cw=({onAdd:e})=>{const t=Q.createElement("button",{onClick:()=>e(" ")},"Add space"),n=Q.createElement("button",{onClick:()=>e("Enter")},"Add divider");return Q.createElement("section",{className:"addNote"},Object.keys(am).filter(r=>r[1]!=="b").map(r=>Q.createElement(sm,{onClick:(i,o)=>e(o),key:r,note:r})),t,n)},fw={cursor:"pointer",display:"inline-block"},dw=({song:e,onClick:t})=>Q.createElement(li.div,{style:{display:"flex",flexWrap:"wrap"},animate:{transition:{staggerChildren:.02}}},Q.createElement(sw,{initial:!0},e.map((n,r)=>{const i=n.note=="Enter";return Q.createElement(li.div,{layout:!0,variants:lm,className:i?"break":"",style:fw,key:n.key,onClick:()=>t(r)},Q.createElement(sm,{animatePresence:!0,note:n.note}))}))),pw=()=>{const[e,t]=L.exports.useState([]);return Q.createElement(Q.Fragment,null,Q.createElement("h2",null,"Add note"),Q.createElement(cw,{onAdd:n=>{console.log("adding "+n),t(e.concat({note:n,key:vw(n,e.length)}))}}),Q.createElement("h2",null,"Song output"),Q.createElement(dw,{song:e,onClick:n=>t(e.filter((r,i)=>i!=n))}))};function vw(e,t){return`${e}-${t}`}function mw(){const e=document.querySelector("#react-root");if(e==null){console.error("react root element could not be found");return}k0.render(Q.createElement(pw,null),e)}mw()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
